import { LOGIN_PROVIDER, LANGUAGE_MAP, LANGUAGES, applyWhiteLabelTheme } from '@toruslabs/openlogin-utils';
import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { SafeEventEmitter } from '@toruslabs/openlogin-jrpc';
import { log, ADAPTER_STATUS, WALLET_ADAPTERS, WalletInitializationError, ADAPTER_NAMES, ADAPTER_EVENTS } from '@web3auth/base';
import { createRoot } from 'react-dom/client';
import _objectSpread from '@babel/runtime/helpers/objectSpread2';
import cloneDeep from 'lodash.clonedeep';
import deepmerge from 'lodash.merge';
import { useEffect, memo, useState, useMemo, createContext, useContext, useCallback } from 'react';
import { initReactI18next, useTranslation } from 'react-i18next';
import i18n from 'i18next';
import { jsxs, jsx, Fragment } from 'react/jsx-runtime';
import bowser from 'bowser';
import copyToClipboard from 'copy-to-clipboard';
import { QRCode } from 'react-qrcode-logo';
import { get, post } from '@toruslabs/http-helpers';
import classNames from 'classnames';

function capitalizeFirstLetter(string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
}
const OPENLOGIN_PROVIDERS = Object.values(LOGIN_PROVIDER).filter(x => x !== LOGIN_PROVIDER.WEBAUTHN && x !== LOGIN_PROVIDER.JWT);
const OPENLOGIN_PROVIDERS_NAMES = OPENLOGIN_PROVIDERS.reduce((acc, x) => {
  if (x === "email_passwordless") acc[x] = "Email";else if (x === "sms_passwordless") acc[x] = "Mobile";else acc[x] = capitalizeFirstLetter(x);
  return acc;
}, {});

// capture whitelabel only once

const LOGIN_MODAL_EVENTS = {
  INIT_EXTERNAL_WALLETS: "INIT_EXTERNAL_WALLETS",
  LOGIN: "LOGIN",
  DISCONNECT: "DISCONNECT",
  MODAL_VISIBILITY: "MODAL_VISIBILITY"
};
const MODAL_STATUS = {
  INITIALIZED: "initialized",
  CONNECTED: "connected",
  CONNECTING: "connecting",
  ERRORED: "errored"
};
const DEFAULT_LOGO_LIGHT = "https://images.web3auth.io/web3auth-logo-w.svg"; // logo used on light mode
const DEFAULT_LOGO_DARK = "https://images.web3auth.io/web3auth-logo-w-light.svg"; // logo used on dark mode

const WALLET_CONNECT_LOGO = "https://images.web3auth.io/login-wallet-connect.svg";

function styleInject(css, ref) {
  if (ref === void 0) ref = {};
  var insertAt = ref.insertAt;
  if (!css || typeof document === 'undefined') {
    return;
  }
  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';
  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }
  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z$1 = "@import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap\");\n/*! tailwindcss v3.4.9 | MIT License | https://tailwindcss.com*/.w3a-parent-container *,.w3a-parent-container :after,.w3a-parent-container :before{border:0 solid;box-sizing:border-box}.w3a-parent-container :after,.w3a-parent-container :before{--tw-content:\"\"}.w3a-parent-container :host,.w3a-parent-container html{-webkit-text-size-adjust:100%;font-feature-settings:normal;-webkit-tap-highlight-color:transparent;font-family:ui-sans-serif,system-ui,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-variation-settings:normal;line-height:1.5;-moz-tab-size:4;tab-size:4}.w3a-parent-container body{line-height:inherit;margin:0}.w3a-parent-container hr{border-top-width:1px;color:inherit;height:0}.w3a-parent-container abbr:where([title]){text-decoration:underline dotted}.w3a-parent-container h1,.w3a-parent-container h2,.w3a-parent-container h3,.w3a-parent-container h4,.w3a-parent-container h5,.w3a-parent-container h6{font-size:inherit;font-weight:inherit}.w3a-parent-container a{color:inherit;text-decoration:inherit}.w3a-parent-container b,.w3a-parent-container strong{font-weight:bolder}.w3a-parent-container code,.w3a-parent-container kbd,.w3a-parent-container pre,.w3a-parent-container samp{font-feature-settings:normal;font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em;font-variation-settings:normal}.w3a-parent-container small{font-size:80%}.w3a-parent-container sub,.w3a-parent-container sup{font-size:75%;line-height:0;position:relative;vertical-align:initial}.w3a-parent-container sub{bottom:-.25em}.w3a-parent-container sup{top:-.5em}.w3a-parent-container table{border-collapse:collapse;border-color:inherit;text-indent:0}.w3a-parent-container button,.w3a-parent-container input,.w3a-parent-container optgroup,.w3a-parent-container select,.w3a-parent-container textarea{font-feature-settings:inherit;color:inherit;font-family:inherit;font-size:100%;font-variation-settings:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;margin:0;padding:0}.w3a-parent-container button,.w3a-parent-container select{text-transform:none}.w3a-parent-container button,.w3a-parent-container input:where([type=button]),.w3a-parent-container input:where([type=reset]),.w3a-parent-container input:where([type=submit]){-webkit-appearance:button;background-color:initial;background-image:none}.w3a-parent-container :-moz-focusring{outline:auto}.w3a-parent-container :-moz-ui-invalid{box-shadow:none}.w3a-parent-container progress{vertical-align:initial}.w3a-parent-container ::-webkit-inner-spin-button,.w3a-parent-container ::-webkit-outer-spin-button{height:auto}.w3a-parent-container [type=search]{-webkit-appearance:textfield;outline-offset:-2px}.w3a-parent-container ::-webkit-search-decoration{-webkit-appearance:none}.w3a-parent-container ::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.w3a-parent-container summary{display:list-item}.w3a-parent-container blockquote,.w3a-parent-container dd,.w3a-parent-container dl,.w3a-parent-container figure,.w3a-parent-container h1,.w3a-parent-container h2,.w3a-parent-container h3,.w3a-parent-container h4,.w3a-parent-container h5,.w3a-parent-container h6,.w3a-parent-container hr,.w3a-parent-container p,.w3a-parent-container pre{margin:0}.w3a-parent-container fieldset{margin:0;padding:0}.w3a-parent-container legend{padding:0}.w3a-parent-container menu,.w3a-parent-container ol,.w3a-parent-container ul{list-style:none;margin:0;padding:0}.w3a-parent-container dialog{padding:0}.w3a-parent-container textarea{resize:vertical}.w3a-parent-container input::placeholder,.w3a-parent-container textarea::placeholder{color:#9ca3af;opacity:1}.w3a-parent-container [role=button],.w3a-parent-container button{cursor:pointer}.w3a-parent-container :disabled{cursor:default}.w3a-parent-container audio,.w3a-parent-container canvas,.w3a-parent-container embed,.w3a-parent-container iframe,.w3a-parent-container img,.w3a-parent-container object,.w3a-parent-container svg,.w3a-parent-container video{display:block;vertical-align:middle}.w3a-parent-container img,.w3a-parent-container video{height:auto;max-width:100%}.w3a-parent-container [hidden]{display:none}.w3a-parent-container{--app-on-primary:#fff;--app-primary-50:#ebf5ff;--app-primary-100:#e1effe;--app-primary-200:#c3ddfd;--app-primary-300:#a4cafe;--app-primary-400:#76a9fa;--app-primary-500:#3f83f8;--app-primary-600:#0346ff;--app-primary-700:#1a56db;--app-primary-800:#1e429f;--app-primary-900:#233876;--app-gray-50:#f9fafb;--app-gray-100:#f3f4f6;--app-gray-200:#e5e7eb;--app-gray-300:#d1d5db;--app-gray-400:#9ca3af;--app-gray-500:#6b7280;--app-gray-600:#4b5563;--app-gray-700:#374151;--app-gray-800:#1f2a37;--app-gray-900:#111928;--app-blue-50:#ebf5ff;--app-blue-100:#e1effe;--app-blue-200:#c3ddfd;--app-blue-300:#a4cafe;--app-blue-400:#76a9fa;--app-blue-500:#3f83f8;--app-blue-600:#0346ff;--app-blue-700:#1a56db;--app-blue-800:#1e429f;--app-blue-900:#233876;--app-red-50:#fdf2f2;--app-red-100:#fde8e8;--app-red-200:#fbd5d5;--app-red-300:#f8b4b4;--app-red-400:#f98080;--app-red-500:#f05252;--app-red-600:#e02424;--app-red-700:#c81e1e;--app-red-800:#9b1c1c;--app-red-900:#771d1d;--app-green-50:#f3faf7;--app-green-100:#def7ec;--app-green-200:#bcf0da;--app-green-300:#84e1bc;--app-green-400:#31c48d;--app-green-500:#0e9f6e;--app-green-600:#057a55;--app-green-700:#046c4e;--app-green-800:#03543f;--app-green-900:#014737;--app-yellow-50:#fdfdea;--app-yellow-100:#fdf6b2;--app-yellow-200:#fce96a;--app-yellow-300:#faca15;--app-yellow-400:#e3a008;--app-yellow-500:#c27803;--app-yellow-600:#9f580a;--app-yellow-700:#8e4b10;--app-yellow-800:#723b13;--app-yellow-900:#633112;--app-success:#30cca4;--app-warning:#fbc94a;--app-error:#fb4a61;--app-info:#d4d4d4;--app-white:#fff;--app-black:#000}.w3a-parent-container *,.w3a-parent-container :after,.w3a-parent-container :before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:#3b82f680;--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }.w3a-parent-container ::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:#3b82f680;--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }.w3a-parent-container .container{width:100%}@media (min-width:380px){.w3a-parent-container .container{max-width:380px}}@media (min-width:440px){.w3a-parent-container .container{max-width:440px}}@media (min-width:570px){.w3a-parent-container .container{max-width:570px}}@media (min-width:640px){.w3a-parent-container .container{max-width:640px}}@media (min-width:768px){.w3a-parent-container .container{max-width:768px}}@media (min-width:840px){.w3a-parent-container .container{max-width:840px}}@media (min-width:1024px){.w3a-parent-container .container{max-width:1024px}}@media (min-width:1280px){.w3a-parent-container .container{max-width:1280px}}@media (min-width:1536px){.w3a-parent-container .container{max-width:1536px}}.w3a-parent-container .absolute{position:absolute}.w3a-parent-container .relative{position:relative}.w3a-parent-container .left-20{left:5rem}.w3a-parent-container .left-8{left:2rem}.w3a-parent-container .top-4{top:1rem}.w3a-parent-container .z-20{z-index:20}.w3a-parent-container .col-span-2{grid-column:span 2/span 2}.w3a-parent-container .col-span-3{grid-column:span 3/span 3}.w3a-parent-container .col-span-6{grid-column:span 6/span 6}.w3a-parent-container .-mb-2{margin-bottom:-.5rem}.w3a-parent-container .-ml-\\[100px\\]{margin-left:-100px}.w3a-parent-container .mb-1{margin-bottom:.25rem}.w3a-parent-container .mb-4{margin-bottom:1rem}.w3a-parent-container .mb-5{margin-bottom:1.25rem}.w3a-parent-container .ml-2{margin-left:.5rem}.w3a-parent-container .ml-\\[3px\\]{margin-left:3px}.w3a-parent-container .mt-4{margin-top:1rem}.w3a-parent-container .block{display:block}.w3a-parent-container .flex{display:flex}.w3a-parent-container .hidden{display:none}.w3a-parent-container .h-3{height:.75rem}.w3a-parent-container .h-4{height:1rem}.w3a-parent-container .w-3{width:.75rem}.w3a-parent-container .w-\\[270px\\]{width:270px}.w3a-parent-container .w-\\[300px\\]{width:300px}.w3a-parent-container .w-full{width:100%}.w3a-parent-container .-translate-x-16{--tw-translate-x:-4rem}.w3a-parent-container .-translate-x-16,.w3a-parent-container .rotate-45{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.w3a-parent-container .rotate-45{--tw-rotate:45deg}.w3a-parent-container .cursor-pointer{cursor:pointer}.w3a-parent-container .flex-col{flex-direction:column}.w3a-parent-container .items-center{align-items:center}.w3a-parent-container .justify-center{justify-content:center}.w3a-parent-container .gap-2{gap:.5rem}.w3a-parent-container .rounded-full{border-radius:9999px}.w3a-parent-container .rounded-md{border-radius:.375rem}.w3a-parent-container .bg-app-gray-50{background-color:var(--app-gray-50)}.w3a-parent-container .p-2{padding:.5rem}.w3a-parent-container .p-4{padding:1rem}.w3a-parent-container .text-left{text-align:left}.w3a-parent-container .text-center{text-align:center}.w3a-parent-container .text-right{text-align:right}.w3a-parent-container .text-sm{font-size:.875rem;line-height:1.25rem}.w3a-parent-container .text-xs{font-size:.75rem;line-height:1rem}.w3a-parent-container .font-medium{font-weight:500}.w3a-parent-container .font-normal{font-weight:400}.w3a-parent-container .leading-none{line-height:1}.w3a-parent-container .text-app-gray-300{color:var(--app-gray-300)}.w3a-parent-container .text-app-gray-400{color:var(--app-gray-400)}.w3a-parent-container .text-app-gray-500{color:var(--app-gray-500)}.w3a-parent-container .text-app-gray-900{color:var(--app-gray-900)}.w3a-parent-container .text-app-white{color:var(--app-white)}.w3a-parent-container .shadow-lg{--tw-shadow:0 10px 15px -3px #0000001a,0 4px 6px -4px #0000001a;--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.w3a-parent-container .filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.w3a-parent-container input[type=number]::-webkit-inner-spin-button,.w3a-parent-container input[type=number]::-webkit-outer-spin-button{appearance:none}.w3a-parent-container #w3a-modal{align-items:center;box-sizing:border-box;display:flex;font-family:Inter;inset:0;justify-content:center;padding:1rem;position:fixed}.w3a-parent-container #w3a-modal.w3a-modal--hidden{display:none}.w3a-parent-container #w3a-modal .w3a-modal__inner{--tw-shadow:0px 4px 16px #00000014;--tw-shadow-colored:0px 4px 16px var(--tw-shadow-color);background-color:var(--app-white);border-color:var(--app-gray-100);border-radius:32px;border-width:1px;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);display:flex;flex-direction:column;max-height:95%;max-width:392px;min-height:630px;opacity:0;overflow-x:hidden;overflow-y:hidden;position:relative;width:100%}.w3a-parent-container #w3a-modal .w3a-modal__inner:is(.dark *){background-color:var(--app-gray-800);border-color:var(--app-gray-800)}.w3a-parent-container #w3a-modal .w3a-modal__inner{transform:scale(0);transform-origin:center center;transition:all .15s cubic-bezier(.92,0,1,.67)}.w3a-parent-container #w3a-modal .w3a-modal__inner.w3a-modal__inner--active{opacity:1;transform:scale(1);transform-origin:center center;transition:all .15s cubic-bezier(0,.73,.71,1)}.w3a-parent-container #w3a-modal .w3a-modal__header{padding:.5rem 2rem;position:relative}.w3a-parent-container #w3a-modal .w3a-modal__content{overflow-y:auto;padding:1rem 2rem}.w3a-parent-container #w3a-modal .w3a-modal__footer{align-items:center;justify-content:center;margin-top:auto;padding:1rem 2rem;text-align:center}.w3a-parent-container #w3a-modal .w3a-header{align-items:center;display:flex;padding-top:2rem}.w3a-parent-container #w3a-modal .w3a-header__logo{margin-bottom:1rem}.w3a-parent-container #w3a-modal .w3a-header__logo img{height:auto;width:2.5rem}.w3a-parent-container #w3a-modal .w3a-header__title{color:var(--app-gray-900);font-size:1.25rem;font-weight:700;line-height:1.75rem}.w3a-parent-container #w3a-modal .w3a-header__title:is(.dark *){color:var(--app-white)}.w3a-parent-container #w3a-modal div.w3a-header__subtitle{align-items:center;color:var(--app-gray-500);display:flex;font-size:.875rem;font-weight:400;line-height:1.25rem}.w3a-parent-container #w3a-modal div.w3a-header__subtitle:is(.dark *){color:var(--app-gray-400)}.w3a-parent-container #w3a-modal div.w3a-header__subtitle img{height:14px;margin-left:.25rem;width:14px}.w3a-parent-container #w3a-modal button.w3a-header__button{border-width:0;cursor:pointer;padding:0;position:absolute;right:1.75rem;top:1.25rem}.w3a-parent-container #w3a-modal button.w3a-header__button:active,.w3a-parent-container #w3a-modal button.w3a-header__button:focus{outline-color:var(--app-gray-50)}.w3a-parent-container #w3a-modal button.w3a-header__button:focus:is(.dark *){outline-color:var(--app-gray-400);outline-style:solid;outline-width:1px}.w3a-parent-container #w3a-modal button.w3a-header__button:active:is(.dark *){outline-color:var(--app-gray-400);outline-style:solid;outline-width:1px}.w3a-parent-container #w3a-modal div.w3a-social__policy{color:var(--app-gray-500);font-size:.75rem;font-weight:500;line-height:1rem;margin-top:1rem;text-align:left}.w3a-parent-container #w3a-modal div.w3a-social__policy:is(.dark *){color:var(--app-gray-400)}.w3a-parent-container #w3a-modal .w3a-group{margin-bottom:1rem}.w3a-parent-container #w3a-modal .w3a-group:last-child{margin-bottom:0}.w3a-parent-container #w3a-modal .w3ajs-passwordless div.w3a-group__title{align-items:center;display:flex}.w3a-parent-container #w3a-modal .w3ajs-passwordless div.w3a-group__title img{height:14px;margin-left:.25rem;width:14px}.w3a-parent-container #w3a-modal .w3a-group.w3a-group--email-hidden,.w3a-parent-container #w3a-modal .w3a-group.w3a-group--ext-wallet-hidden,.w3a-parent-container #w3a-modal .w3a-group.w3a-group--hidden,.w3a-parent-container #w3a-modal .w3a-group.w3a-group--social-hidden{display:none}.w3a-parent-container #w3a-modal div.w3a-group__title{color:var(--app-gray-900);font-size:.875rem;font-weight:500;line-height:1.25rem;margin-bottom:.5rem}.w3a-parent-container #w3a-modal div.w3a-group__title:is(.dark *){color:var(--app-white)}.w3a-parent-container #w3a-modal ul.w3a-adapter-list{column-gap:.5rem;display:grid;grid-template-columns:repeat(6,minmax(0,1fr));max-height:500px;overflow-y:hidden;padding:1px;row-gap:1rem;transition:max-height .35s;transition-timing-function:cubic-bezier(.92,0,.74,1)}.w3a-parent-container #w3a-modal ul.w3a-adapter-list.w3a-adapter-list--shrink{max-height:108px;transition:max-height .3s;transition-timing-function:cubic-bezier(0,.73,.71,1)}.w3a-parent-container #w3a-modal ul.w3a-adapter-list.w3a-adapter-list--hidden{display:none}.w3a-parent-container #w3a-modal li.w3a-adapter-item{list-style-type:none}.w3a-parent-container #w3a-modal li.w3a-adapter-item--full{grid-column:span 6/span 6}.w3a-parent-container #w3a-modal .w3a-adapter-item--hide{display:none}.w3a-parent-container #w3a-modal .w3a-external-toggle{display:block}.w3a-parent-container #w3a-modal .w3a-external-toggle.w3a-external-toggle--hidden{display:none}.w3a-parent-container #w3a-modal .w3a-external-container{display:block;margin-bottom:0}.w3a-parent-container #w3a-modal .w3a-external-container.w3a-external-container--hidden{display:none}.w3a-parent-container #w3a-modal .w3a-external-group{display:flex;flex-wrap:wrap;gap:.75rem;margin-bottom:1rem}.w3a-parent-container #w3a-modal .w3a-external-group__left{flex-grow:1}.w3a-parent-container #w3a-modal button.w3a-external-back{align-items:center;background-image:none;border-width:0;color:var(--app-gray-500);cursor:pointer;display:inline-flex;margin-bottom:.5rem;padding:0}.w3a-parent-container #w3a-modal button.w3a-external-back:active,.w3a-parent-container #w3a-modal button.w3a-external-back:focus{outline-color:var(--app-gray-50)}.w3a-parent-container #w3a-modal button.w3a-external-back:is(.dark *){color:var(--app-gray-400)}.w3a-parent-container #w3a-modal button.w3a-external-back:focus:is(.dark *){outline-color:var(--app-gray-400);outline-style:solid;outline-width:1px}.w3a-parent-container #w3a-modal button.w3a-external-back:active:is(.dark *){outline-color:var(--app-gray-400);outline-style:solid;outline-width:1px}.w3a-parent-container #w3a-modal .w3a-external-back .w3a-group__title{color:var(--app-gray-400);margin-bottom:0;margin-left:5px}.w3a-parent-container #w3a-modal .w3a-external-loader{display:flex;justify-content:center}.w3a-parent-container #w3a-modal .w3a-wallet-connect{display:block;margin-bottom:1rem;text-align:center}.w3a-parent-container #w3a-modal .w3a-wallet-connect.w3a-wallet-connect--hidden{display:none}.w3a-parent-container #w3a-modal .w3a-wallet-connect__container{background-color:var(--app-white);border-radius:10px;color:var(--app-gray-500);font-size:.625rem;margin-left:auto;margin-right:auto;min-width:250px;padding:1rem .75rem;width:fit-content}.w3a-parent-container #w3a-modal .w3a-wallet-connect__container:is(.dark *){color:var(--app-gray-400)}.w3a-parent-container #w3a-modal .w3a-wallet-connect__container-android,.w3a-parent-container #w3a-modal .w3a-wallet-connect__container-desktop{margin:auto}.w3a-parent-container #w3a-modal .w3a-wallet-connect__container-btn-group{display:flex;gap:18px}.w3a-parent-container #w3a-modal .w3a-wallet-connect__container-ios{box-sizing:border-box;column-gap:1.25rem;display:flex;flex-wrap:wrap;padding:0 0 1.75rem;row-gap:30px}.w3a-parent-container #w3a-modal .w3a-wallet-connect-qr{margin:1rem}.w3a-parent-container #w3a-modal .w3a-wallet-connect-qr>canvas,.w3a-parent-container #w3a-modal .w3a-wallet-connect-qr>svg{margin:auto}.w3a-parent-container #w3a-modal .w3a-wallet-connect__container-android a{text-decoration-line:none}.w3a-parent-container #w3a-modal .w3a-wallet-connect__logo>img{margin:0 auto 1rem;width:115px}.w3a-parent-container #w3a-modal .w3a-footer{align-items:center;color:var(--app-gray-400);display:flex;font-size:.75rem;justify-content:center;line-height:1rem}.w3a-parent-container #w3a-modal .w3a-footer__links a:active,.w3a-parent-container #w3a-modal .w3a-footer__links a:focus{outline-color:var(--app-gray-50)}.w3a-parent-container #w3a-modal .w3a-footer__links a:focus:is(.dark *){outline-color:var(--app-gray-400);outline-style:solid;outline-width:1px}.w3a-parent-container #w3a-modal .w3a-footer__links a:active:is(.dark *){outline-color:var(--app-gray-400);outline-style:solid;outline-width:1px}.w3a-parent-container #w3a-modal .w3a-footer__links span{margin:0 4px}.w3a-parent-container #w3a-modal.w3a-modal--light .w3a-footer__links a:focus-visible{outline:1px solid #0f1222}.w3a-parent-container #w3a-modal.w3a-modal--light .w3a-external-back:focus-visible{outline:1px solid #0f1222}.w3a-parent-container #w3a-modal .hover-icon{display:none;transition:display .15s;transition-timing-function:cubic-bezier(0,.54,.63,.99)}.w3a-parent-container #w3a-modal .w3a-text-field{background-color:var(--app-gray-50);border-color:var(--app-gray-300);border-radius:9999px;border-width:1px;color:var(--app-gray-900);font-size:.875rem;line-height:1.25rem;margin-top:.5rem;padding:.75rem 1.5rem}.w3a-parent-container #w3a-modal .w3a-text-field::placeholder{color:var(--app-gray-500)}.w3a-parent-container #w3a-modal .w3a-text-field{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);outline-width:0}.w3a-parent-container #w3a-modal .w3a-text-field:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-color:var(--app-primary-600);border-color:#0000;box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.w3a-parent-container #w3a-modal .w3a-text-field:disabled{cursor:not-allowed}.w3a-parent-container #w3a-modal .w3a-text-field:disabled::placeholder{color:var(--app-gray-400)}.w3a-parent-container #w3a-modal .w3a-text-field:is(.dark *){background-color:var(--app-gray-600);border-color:var(--app-gray-500);color:var(--app-white)}.w3a-parent-container #w3a-modal .w3a-text-field:is(.dark *)::placeholder{color:var(--app-gray-400)}.w3a-parent-container #w3a-modal .w3a-text-field:focus:is(.dark *){--tw-ring-color:var(--app-primary-500);border-color:#0000}.w3a-parent-container #w3a-modal .w3a-text-field:disabled:is(.dark *)::placeholder{color:var(--app-gray-500)}.w3a-parent-container #w3a-modal .w3a-text-field{line-height:1.25em}.w3a-parent-container #w3a-modal .w3a-text-field--country-code{display:flex;justify-content:space-between;padding-left:1rem;padding-right:1rem;width:100%}.w3a-parent-container #w3a-modal .w3a-text-field--number{appearance:none}.w3a-parent-container #w3a-modal .w3a-sms-field--error{color:var(--app-red-500);font-size:.875rem;line-height:1.25rem;margin-bottom:.5rem;margin-left:.375rem;margin-top:-.5rem}.w3a-parent-container #w3a-container #w3a-modal input.w3a-text-field:-webkit-autofill,.w3a-parent-container #w3a-container #w3a-modal input.w3a-text-field:-webkit-autofill:active,.w3a-parent-container #w3a-container #w3a-modal input.w3a-text-field:-webkit-autofill:focus,.w3a-parent-container #w3a-container #w3a-modal input.w3a-text-field:-webkit-autofill:hover{--tw-shadow:0 0 0 30px #f9fafb inset;--tw-shadow-colored:inset 0 0 0 30px var(--tw-shadow-color);-webkit-text-fill-color:#111928!important;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.w3a-parent-container #w3a-container.dark #w3a-modal input.w3a-text-field:-webkit-autofill,.w3a-parent-container #w3a-container.dark #w3a-modal input.w3a-text-field:-webkit-autofill:active,.w3a-parent-container #w3a-container.dark #w3a-modal input.w3a-text-field:-webkit-autofill:focus,.w3a-parent-container #w3a-container.dark #w3a-modal input.w3a-text-field:-webkit-autofill:hover{--tw-shadow:0 0 0 30px #374151 inset;--tw-shadow-colored:inset 0 0 0 30px var(--tw-shadow-color);-webkit-text-fill-color:#fff!important;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.w3a-parent-container #w3a-modal .w3a-button{background-color:var(--app-gray-100);border-radius:9999px;color:var(--app-gray-900);font-size:1rem;font-weight:500;line-height:1.5rem;padding:.75rem 1.5rem}.w3a-parent-container #w3a-modal .w3a-button:hover{background-color:var(--app-gray-300)}.w3a-parent-container #w3a-modal .w3a-button:focus{background-color:var(--app-gray-100);color:var(--app-gray-700);outline-color:var(--app-gray-50)}.w3a-parent-container #w3a-modal .w3a-button:active{outline-color:var(--app-gray-50)}.w3a-parent-container #w3a-modal .w3a-button:disabled{background-color:var(--app-gray-50);color:var(--app-gray-300)}.w3a-parent-container #w3a-modal .w3a-button:is(.dark *){background-color:var(--app-gray-900);color:var(--app-white)}.w3a-parent-container #w3a-modal .w3a-button:hover:is(.dark *){background-color:var(--app-gray-800)}.w3a-parent-container #w3a-modal .w3a-button:focus:is(.dark *){background-color:var(--app-gray-900);color:var(--app-white);outline-color:var(--app-gray-400);outline-style:solid;outline-width:1px}.w3a-parent-container #w3a-modal .w3a-button:active:is(.dark *){outline-color:var(--app-gray-400);outline-style:solid;outline-width:1px}.w3a-parent-container #w3a-modal .w3a-button:disabled:is(.dark *){--tw-bg-opacity:1;background-color:rgb(59 69 85/var(--tw-bg-opacity));color:var(--app-gray-500)}.w3a-parent-container #w3a-modal .w3a-button--primary{background-color:var(--app-primary-600);color:var(--app-white)}.w3a-parent-container #w3a-modal .w3a-button--primary:hover{background-color:var(--app-primary-800)}.w3a-parent-container #w3a-modal .w3a-button--primary:focus{background-color:var(--app-primary-600);color:var(--app-white);outline-color:var(--app-primary-300)}.w3a-parent-container #w3a-modal .w3a-button--primary:active{outline-color:var(--app-primary-300)}.w3a-parent-container #w3a-modal .w3a-button--primary:disabled{--tw-text-opacity:1;background-color:var(--app-primary-200);color:rgb(235 245 255/var(--tw-text-opacity))}.w3a-parent-container #w3a-modal .w3a-button--primary:is(.dark *){background-color:var(--app-primary-500)}.w3a-parent-container #w3a-modal .w3a-button--primary:hover:is(.dark *){background-color:var(--app-primary-800)}.w3a-parent-container #w3a-modal .w3a-button--primary:focus:is(.dark *){background-color:var(--app-primary-500)}.w3a-parent-container #w3a-modal .w3a-button--primary:disabled:is(.dark *){--tw-bg-opacity:1;background-color:rgb(45 72 116/var(--tw-bg-opacity));color:var(--app-gray-500)}.w3a-parent-container #w3a-modal .w3a-button--login{align-items:center;display:inline-flex;height:2.75rem;justify-content:center}.w3a-parent-container #w3a-modal button.w3a-button--login:hover>.hover-icon{display:block;transition:display .15s;transition-timing-function:cubic-bezier(0,.54,.63,.99)}.w3a-parent-container #w3a-modal button.w3a-button--login:hover>.image-icon{display:none;transition:display .15s;transition-timing-function:cubic-bezier(0,.54,.63,.99)}.w3a-parent-container #w3a-modal button.w3a-button-expand{color:var(--app-primary-600);font-size:.875rem;height:auto;line-height:1.25rem;margin-left:auto;margin-top:1rem;width:auto}.w3a-parent-container #w3a-modal button.w3a-button-expand:hover{color:var(--app-primary-800)}.w3a-parent-container #w3a-modal button.w3a-button-expand:focus-visible{outline-color:var(--app-gray-50);outline-style:solid;outline-width:1px}.w3a-parent-container #w3a-modal button.w3a-button-expand:is(.dark *){color:var(--app-primary-500)}.w3a-parent-container #w3a-modal button.w3a-button-expand:hover:is(.dark *){color:var(--app-primary-400)}.w3a-parent-container #w3a-modal button.w3a-button-expand:focus-visible:is(.dark *){outline-color:var(--app-gray-400);outline-style:solid;outline-width:1px}.w3a-parent-container #w3a-modal .w3a-sms-field__container{display:grid;gap:.5rem;grid-template-columns:repeat(12,minmax(0,1fr))}.w3a-parent-container #w3a-modal .w3a-sms-field__code-selected{display:flex}.w3a-parent-container #w3a-modal .w3a-sms-field__code-dropdown{height:185px;position:absolute;width:120px;z-index:10}.w3a-parent-container #w3a-modal .w3a-sms-field__code-dropdown>:not([hidden])~:not([hidden]){--tw-divide-y-reverse:0;border-bottom-width:calc(1px*var(--tw-divide-y-reverse));border-color:var(--app-gray-100);border-top-width:calc(1px*(1 - var(--tw-divide-y-reverse)))}.w3a-parent-container #w3a-modal .w3a-sms-field__code-dropdown{--tw-shadow:0px 4px 16px #00000014;--tw-shadow-colored:0px 4px 16px var(--tw-shadow-color);background-color:var(--app-white);border-radius:.5rem;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);overflow-y:scroll}.w3a-parent-container #w3a-modal .w3a-sms-field__code-dropdown:is(.dark *){background-color:var(--app-gray-700)}.w3a-parent-container #w3a-modal .w3a-sms-field__code-dropdown{transform:translateY(-230px)}.w3a-parent-container #w3a-modal .w3a-sms-field__code-dropdown--hidden{display:none}.w3a-parent-container #w3a-modal .w3a-sms-field__code-dropdown ul{color:var(--app-gray-700);font-size:.875rem;line-height:1.25rem;padding-bottom:.5rem;padding-top:.5rem}.w3a-parent-container #w3a-modal .w3a-sms-field__code-dropdown ul:is(.dark *){color:var(--app-gray-200)}.w3a-parent-container #w3a-modal .w3a-sms-field__code-dropdown li{cursor:pointer;padding:0}.w3a-parent-container #w3a-modal .w3a-sms-field__code-dropdown li:hover{background-color:var(--app-gray-100)}.w3a-parent-container #w3a-modal .w3a-sms-field__code-dropdown li:hover:is(.dark *){background-color:var(--app-gray-900);color:var(--app-white)}.w3a-parent-container #w3a-modal .w3a-sms-field__code-dropdown li button{height:100%;padding:.5rem 1rem;text-align:left;width:100%}.w3a-parent-container #w3a-modal .w3a-sms-field__code-dropdown li button div{align-items:center;display:flex}.w3a-parent-container #w3a-modal .w3a-sms-field__code{grid-column:span 5/span 5}.w3a-parent-container #w3a-modal .w3a-sms-field__number{grid-column:span 7/span 7}.w3a-parent-container #w3a-modal .w3a-modal__loader{background-color:var(--app-white);display:flex;inset:0;justify-content:center;position:absolute;z-index:10}.w3a-parent-container #w3a-modal .w3a-modal__loader:is(.dark *){background-color:var(--app-gray-800)}.w3a-parent-container #w3a-modal .w3a-modal__loader.w3a-modal__loader--hidden{display:none}.w3a-parent-container #w3a-modal .w3a-modal__loader-content{display:flex;flex-direction:column;position:relative;text-align:center}.w3a-parent-container #w3a-modal .w3a-modal__loader-info{align-items:center;display:flex;flex-direction:column;flex-grow:1;justify-content:center;padding:0 30px}.w3a-parent-container #w3a-modal .w3a-spinner-label{color:var(--app-primary-600);font-size:1rem;font-weight:500;line-height:1.5rem;margin-top:10px}.w3a-parent-container #w3a-modal .w3a-spinner-label:is(.dark *){color:var(--app-primary-500)}.w3a-parent-container #w3a-modal .w3a-spinner-message{color:var(--app-gray-500);font-size:1rem;line-height:1.5rem;margin-top:10px}.w3a-parent-container #w3a-modal .w3a-spinner-message:first-letter{text-transform:capitalize}.w3a-parent-container #w3a-modal .w3a-spinner-message:is(.dark *){color:var(--app-white)}.w3a-parent-container #w3a-modal .w3a-spinner-message.w3a-spinner-message--error{color:var(--app-red-500)}.w3a-parent-container #w3a-modal .w3a-spinner-power{--tw-text-opacity:1;color:rgb(183 184 189/var(--tw-text-opacity));font-size:.75rem;line-height:1rem;margin-top:auto}.w3a-parent-container #w3a-modal .w3a-spinner-power>img{display:inline;height:2rem;width:auto}.w3a-parent-container #w3a-modal .w3a-spinner{display:inline-flex;height:60px;position:relative;width:60px}.w3a-parent-container #w3a-modal .w3a-spinner__spinner{position:absolute}@keyframes spin{to{transform:rotate(1turn)}}.w3a-parent-container #w3a-modal .w3a-spinner__spinner{animation:spin 1s linear infinite;background-image:conic-gradient(from 0deg at 50% 50%,var(--app-primary-600) 0,#e5e7ebcc 90deg,#e5e7ebcc 270deg,var(--app-primary-600) 1turn);background-position:0 0;background-size:100% 100%;border-radius:100vw;display:inline-block;height:100%;-webkit-mask:radial-gradient(farthest-side,#000 98%,#0000) center/85% 85% no-repeat,linear-gradient(#000 0 0);-webkit-mask-composite:destination-out;mask:radial-gradient(farthest-side,#000 98%,#0000) center/85% 85% no-repeat,linear-gradient(#000 0 0);mask-composite:exclude;width:100%}.w3a-parent-container .dark #w3a-modal .w3a-spinner__spinner{background-image:conic-gradient(from 0deg at 50% 50%,var(--app-primary-500) 0,#e5e7eb33 90deg,#e5e7eb33 270deg,var(--app-primary-500) 1turn)}.w3a-parent-container #w3a-modal .w3a-modal__loader-bridge{align-items:center;display:flex;justify-content:center;margin-bottom:14px}.w3a-parent-container #w3a-modal .w3a-modal__loader-bridge-message{color:var(--app-gray-500)}.w3a-parent-container #w3a-modal .w3a-modal__loader-bridge-message:first-letter{text-transform:capitalize}.w3a-parent-container #w3a-modal .w3a-modal__loader-bridge-message:is(.dark *){color:var(--app-white)}.w3a-parent-container #w3a-modal .w3a-modal__loader-app-logo{display:flex;padding:.5rem}.w3a-parent-container #w3a-modal .w3a-modal__loader-app-logo img{height:auto;max-height:72px;max-width:72px;width:72px}.w3a-parent-container #w3a-modal .w3a-modal__loader-social-logo{align-items:center;background-color:var(--app-gray-100);border-radius:9999px;display:flex;height:72px;justify-content:center;width:72px}.w3a-parent-container #w3a-modal .w3a-modal__loader-social-logo:is(.dark *){background-color:var(--app-gray-50)}.w3a-parent-container #w3a-modal .w3a-modal__loader-social-logo img{height:4rem;width:4rem}.w3a-parent-container #w3a-modal .w3a-modal__loader-adapter img{height:auto;width:84px}.w3a-parent-container #w3a-modal .w3a-modal__connector{align-items:center;display:flex}.w3a-parent-container .w3a-modal__connector-beat{display:inline-block;height:80px;position:relative;width:80px}.w3a-parent-container .w3a-modal__connector-beat div{animation-timing-function:cubic-bezier(0,1,1,0);background:grey;border-radius:50%;height:13px;position:absolute;top:33px;width:13px}.w3a-parent-container .w3a-modal__connector-beat div:first-child{animation:beat1 2.4s infinite;left:8px}.w3a-parent-container .w3a-modal__connector-beat div:nth-child(2){animation:beat2 2.4s infinite;left:8px}.w3a-parent-container .w3a-modal__connector-beat div:nth-child(3){animation:beat3 2.4s infinite;left:8px}.w3a-parent-container .w3a-modal__connector-beat div:nth-child(4){animation:beat4 2.4s infinite;left:32px}.w3a-parent-container .w3a-modal__connector-beat div:nth-child(5){animation:beat5 2.4s infinite;left:56px}@keyframes beat1{0%{transform:scale(0)}25%{transform:scale(0)}50%{transform:scale(1)}75%{transform:scale(0)}to{transform:scale(0)}}@keyframes beat2{0%{transform:scale(0)}25%{transform:scale(1)}50%{transform:translate(24px)}75%{transform:translate(0)}to{transform:translate(0) scale(0)}}@keyframes beat3{0%{transform:translate(0)}25%{transform:translate(24px)}50%{transform:translate(48px)}75%{transform:translate(24px)}to{transform:translate(0)}}@keyframes beat4{0%{transform:translate(0)}25%{transform:translate(24px)}50%{transform:translate(24px) scale(0)}75%{transform:translate(24px) scale(1)}to{transform:translate(0)}}@keyframes beat5{0%{transform:scale(1)}25%{transform:scale(0)}50%{transform:scale(0)}75%{transform:scale(0)}to{transform:scale(1)}}.w3a-parent-container .group:hover .group-hover\\:flex{display:flex}.w3a-parent-container .dark\\:block:is(.dark *){display:block}.w3a-parent-container .dark\\:hidden:is(.dark *){display:none}.w3a-parent-container .dark\\:bg-app-gray-600:is(.dark *){background-color:var(--app-gray-600)}.w3a-parent-container .dark\\:text-app-gray-400:is(.dark *){color:var(--app-gray-400)}.w3a-parent-container .dark\\:text-app-gray-500:is(.dark *){color:var(--app-gray-500)}.w3a-parent-container .dark\\:text-app-white:is(.dark *){color:var(--app-white)}";
styleInject(css_248z$1);

var modal = {
  "adapter-loader.message": "Verify your {{adapter}} account to continue",
  "adapter-loader.message1": "Verify your {{adapter}}",
  "adapter-loader.message2": "account to continue",
  "errors-invalid-number-email": "Invalid Email or Phone Number",
  "errors-invalid-number": "Invalid Phone Number",
  "errors-invalid-email": "Invalid Email",
  "errors-required": "Required",
  "external.back": "Back",
  "external.connect": "Connect with Wallet",
  "external.continue": "Continue with external wallet",
  "external.no-wallets-found": "No wallets found",
  "external.title": "External Wallet",
  "external.walletconnect-connect": "Connect",
  "external.walletconnect-copy": "Click on the QR Code to copy to clipboard",
  "external.walletconnect-subtitle": "Scan the QR code with a WalletConnect-compatible wallet",
  "footer.message": "Self-custodial login by",
  "footer.message-new": "Self-custody via",
  "footer.policy": "Privacy Policy",
  "footer.terms": "Terms of Use",
  "footer.terms-service": "Terms of Service",
  "footer.version": "Version",
  "header-subtitle": "Select one of the following options to continue",
  "header-subtitle-name": "Your {{appName}} wallet with one click",
  "header-subtitle-new": "Your blockchain wallet with one click",
  "header-title": "Sign in",
  "header-tooltip-desc": "The wallet serves as an account to store and manage your digital assets on the blockchain.",
  "header-tooltip-title": "Wallet",
  "network.add-request": "This site is requesting to add a network",
  "network.cancel": "Cancel",
  "network.from": "From",
  "network.proceed": "Proceed",
  "network.switch-request": "This site is requesting to switch networks",
  "network.to": "To",
  "popup.phone-body": "Your country code will be detected automatically, but if you're using a phone number from a different country, you'll need to enter the correct country code manually.",
  "popup.phone-header": "Phone number and country code",
  "social.continue": "Continue with",
  "social.continueCustom": "Continue with {{adapter}}",
  "social.email": "Email",
  "social.email-continue": "Continue with Email",
  "social.email-new": "name@example.com",
  "social.passwordless-cta": "Continue",
  "social.passwordless-login": "Login",
  "social.passwordless-title": "Email or Phone",
  "social.phone": "Phone",
  "social.policy": "We do not store any data related to your social logins.",
  "social.sms": "Mobile",
  "social.sms-continue": "Continue with Mobile",
  "social.sms-invalid-number": "Invalid phone number",
  "social.sms-placeholder-text": "E.g.:",
  "social.view-less": "View less",
  "social.view-more": "View more",
  "social.view-less-socials": "View less socials",
  "social.view-more-socials": "View more socials",
  "passkey.haveExisting": "Have an existing passkey?",
  "passkey.use": "I have a passkey",
  "passkey.or": "or",
  "passkey.register-title": "Register Passkey",
  "passkey.register-desc": "With passkeys, you can verify your identity through your face, fingerprint, or security keys.",
  "passkey.learn-more": "Learn more",
  "passkey.add": "Add Passkey",
  "post-loading.connected": "You are connected with your account",
  "post-loading.something-wrong": "Something went wrong!"
};
var en = {
  modal: modal
};

const i18nInstance = i18n.createInstance();
i18nInstance.use(initReactI18next).init({
  resources: {
    en: {
      translation: en
    }
  },
  lng: "en",
  fallbackLng: "en",
  interpolation: {
    escapeValue: false
  },
  debug: false,
  react: {
    useSuspense: true
  }
});

function SelfCustodyViaWeb3Auth() {
  const [t] = useTranslation(undefined, {
    i18n: i18nInstance
  });
  return /*#__PURE__*/jsxs("div", {
    className: "flex items-center gap-2 justify-center p-2",
    children: [/*#__PURE__*/jsx("div", {
      className: "text-xs text-app-gray-300 dark:text-app-gray-500",
      children: t("modal.footer.message-new")
    }), /*#__PURE__*/jsx("img", {
      height: "16",
      src: "https://images.web3auth.io/web3auth-footer-logo-light.svg",
      alt: "Web3Auth Logo Light",
      className: "h-4 block dark:hidden"
    }), /*#__PURE__*/jsx("img", {
      height: "16",
      src: "https://images.web3auth.io/web3auth-footer-logo-dark.svg",
      alt: "Web3Auth Logo Dark",
      className: "h-4 hidden dark:block"
    })]
  });
}

function Footer() {
  return /*#__PURE__*/jsx("div", {
    className: "w3a-modal__footer",
    children: /*#__PURE__*/jsx("div", {
      className: "w3a-footer",
      children: /*#__PURE__*/jsx("div", {
        children: /*#__PURE__*/jsx("div", {
          children: /*#__PURE__*/jsx(SelfCustodyViaWeb3Auth, {})
        })
      })
    })
  });
}

const icons = {
  "arrow-left": {
    image: "https://images.web3auth.io/circle-arrow-left.svg"
  },
  close: {
    image: "https://images.web3auth.io/close.svg"
  },
  "expand-light": {
    image: "https://images.web3auth.io/expand-light.svg"
  },
  expand: {
    image: "https://images.web3auth.io/expand.svg"
  },
  connected: {
    image: "https://images.web3auth.io/connected.svg"
  },
  "information-circle-light": {
    image: "https://images.web3auth.io/information-circle-light.svg"
  },
  "information-circle": {
    image: "https://images.web3auth.io/information-circle.svg"
  }
};
function Icon(props) {
  const {
    iconName,
    iconTitle = "",
    height = "auto",
    width = "auto"
  } = props;
  return icons[iconName] ? /*#__PURE__*/jsx("img", {
    className: iconTitle ? "cursor-pointer" : "",
    height: height,
    width: width,
    src: icons[iconName].image,
    alt: iconName,
    title: iconTitle
  }) : null;
}

function Image$1(props) {
  const {
    hoverImageId,
    imageId,
    isButton = false,
    height = "auto",
    width = "auto"
  } = props;
  return /*#__PURE__*/jsxs(Fragment, {
    children: [/*#__PURE__*/jsx("img", {
      src: `https://images.web3auth.io/${imageId}.svg`,
      height: height,
      width: width,
      alt: imageId,
      className: "image-icon"
    }), isButton ? /*#__PURE__*/jsx("img", {
      src: `https://images.web3auth.io/${hoverImageId}.svg`,
      height: height,
      width: width,
      alt: hoverImageId,
      className: "hover-icon"
    }) : null]
  });
}

const closeIcon$1 = /*#__PURE__*/jsx(Icon, {
  iconName: "close"
});
function DetailedLoader(props) {
  const {
    adapter,
    appLogo,
    message,
    modalStatus,
    adapterName,
    onClose
  } = props;
  const providerIcon = adapter === "twitter" ? /*#__PURE__*/jsx(Image$1, {
    imageId: "login-x-dark"
  }) : /*#__PURE__*/jsx(Image$1, {
    imageId: `login-${adapter}`
  });
  const [t] = useTranslation(undefined, {
    i18n: i18nInstance
  });
  useEffect(() => {
    log.debug("adapter loader re-rendering");
    if (modalStatus === MODAL_STATUS.CONNECTED) {
      setTimeout(() => {
        onClose();
      }, 3000);
    }
  }, [modalStatus, onClose]);
  return modalStatus !== MODAL_STATUS.INITIALIZED ? /*#__PURE__*/jsxs("div", {
    className: "w3ajs-modal-loader w3a-modal__loader",
    children: [/*#__PURE__*/jsxs("div", {
      className: "w3a-modal__loader-content",
      children: [/*#__PURE__*/jsxs("div", {
        className: "w3a-modal__loader-info",
        children: [modalStatus === MODAL_STATUS.CONNECTING && /*#__PURE__*/jsxs(Fragment, {
          children: [/*#__PURE__*/jsxs("div", {
            className: "w3a-modal__loader-bridge",
            children: [/*#__PURE__*/jsxs("div", {
              className: "w3a-modal__loader-app-logo",
              children: [/*#__PURE__*/jsx("img", {
                src: appLogo,
                className: "block dark:hidden",
                alt: ""
              }), /*#__PURE__*/jsx("img", {
                src: appLogo,
                className: "hidden dark:block",
                alt: ""
              })]
            }), /*#__PURE__*/jsx("div", {
              className: "w3a-modal__connector",
              children: /*#__PURE__*/jsxs("div", {
                className: "w3a-modal__connector-beat",
                children: [/*#__PURE__*/jsx("div", {}), /*#__PURE__*/jsx("div", {}), /*#__PURE__*/jsx("div", {}), /*#__PURE__*/jsx("div", {}), /*#__PURE__*/jsx("div", {})]
              })
            }), /*#__PURE__*/jsx("div", {
              className: "w3a-modal__loader-social-logo",
              children: providerIcon
            })]
          }), /*#__PURE__*/jsxs("div", {
            children: [/*#__PURE__*/jsx("div", {
              className: "w3a-modal__loader-bridge-message",
              children: t("modal.adapter-loader.message1", {
                adapter: adapterName
              })
            }), /*#__PURE__*/jsx("div", {
              className: "w3a-modal__loader-bridge-message",
              children: t("modal.adapter-loader.message2", {
                adapter: adapterName
              })
            })]
          })]
        }), modalStatus === ADAPTER_STATUS.CONNECTED && /*#__PURE__*/jsxs("div", {
          className: "flex flex-col items-center",
          children: [/*#__PURE__*/jsx(Icon, {
            iconName: "connected"
          }), /*#__PURE__*/jsx("div", {
            className: "w3ajs-modal-loader__message w3a-spinner-message mt-4",
            children: message
          })]
        }), modalStatus === ADAPTER_STATUS.ERRORED && /*#__PURE__*/jsx("div", {
          className: "w3ajs-modal-loader__message w3a-spinner-message w3a-spinner-message--error",
          children: message
        })]
      }), /*#__PURE__*/jsx(Footer, {})]
    }), (modalStatus === ADAPTER_STATUS.CONNECTED || modalStatus === ADAPTER_STATUS.ERRORED) && /*#__PURE__*/jsx("button", {
      type: "button",
      className: "w3a-header__button w3ajs-loader-close-btn",
      onClick: onClose,
      children: closeIcon$1
    })]
  }) : null;
}

var css_248z = ".w3a-parent-container #w3a-modal button.t-btn,.w3a-parent-container a.t-btn{align-items:center;display:flex;justify-content:center;transition-duration:.15s;transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-timing-function:linear}.w3a-parent-container #w3a-modal button.t-btn:not(.t-btn-text):disabled,.w3a-parent-container a.t-btn:not(.t-btn-text):disabled{background-color:var(--app-gray-300);border-width:0;color:var(--app-gray-400)}.w3a-parent-container #w3a-modal button.t-btn:not(.t-btn-text):hover:disabled,.w3a-parent-container a.t-btn:not(.t-btn-text):hover:disabled{background-color:var(--app-gray-300);border-color:var(--app-gray-300);color:var(--app-gray-400)}.w3a-parent-container #w3a-modal button.t-btn:not(.t-btn-text):active:disabled,.w3a-parent-container a.t-btn:not(.t-btn-text):active:disabled{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-offset-width:0px;background-color:var(--app-gray-300);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);outline-width:0}.w3a-parent-container #w3a-modal button.t-btn:not(.t-btn-text):disabled:is(.dark *),.w3a-parent-container a.t-btn:not(.t-btn-text):disabled:is(.dark *){background-color:var(--app-gray-700);color:var(--app-gray-600)}.w3a-parent-container #w3a-modal .size-xs{font-size:.75rem;height:32px;line-height:1rem;padding:.5rem .75rem}.w3a-parent-container #w3a-modal .size-sm{font-size:.875rem;height:36px;line-height:1.25rem;padding:.5rem .75rem}.w3a-parent-container #w3a-modal .size-md{font-size:.875rem;height:42px;line-height:1.25rem;padding:.625rem 1.25rem}.w3a-parent-container #w3a-modal .size-lg{font-size:1rem;height:48px;line-height:1.5rem;padding:.75rem 1.25rem}.w3a-parent-container #w3a-modal .size-xl{font-size:1rem;height:52px;line-height:1.5rem;padding:.875rem 1.5rem}.w3a-parent-container #w3a-modal .t-btn.t-btn-primary{background-color:var(--app-primary-600);color:var(--app-on-primary);outline:2px solid #0000;outline-offset:2px}.w3a-parent-container #w3a-modal .t-btn.t-btn-primary:hover{background-color:var(--app-primary-700)}.w3a-parent-container #w3a-modal .t-btn.t-btn-primary:focus-visible{outline-color:var(--app-primary-600);outline-offset:1px;outline-style:solid;outline-width:1px}.w3a-parent-container #w3a-modal .t-btn.t-btn-primary:active{background-color:var(--app-primary-600);outline-color:var(--app-primary-600);outline-offset:1px;outline-style:solid;outline-width:1px}.w3a-parent-container #w3a-modal .t-btn.t-btn-primary:is(.dark *){background-color:var(--app-primary-500)}.w3a-parent-container #w3a-modal .t-btn.t-btn-primary:hover:is(.dark *){background-color:var(--app-primary-400)}.w3a-parent-container #w3a-modal .t-btn.t-btn-primary:focus-visible:is(.dark *){outline-color:var(--app-primary-500)}.w3a-parent-container #w3a-modal .t-btn.t-btn-primary:active:is(.dark *){background-color:var(--app-primary-500);outline-color:var(--app-primary-500)}.w3a-parent-container #w3a-modal .t-btn.t-btn-secondary{background-color:initial;border-color:var(--app-gray-500);border-width:1px;color:var(--app-gray-600);outline:2px solid #0000;outline-offset:2px}.w3a-parent-container #w3a-modal .t-btn.t-btn-secondary:hover{background-color:var(--app-gray-200)}.w3a-parent-container #w3a-modal .t-btn.t-btn-secondary:focus-visible{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-color:var(--app-primary-600);background-color:initial;border-color:var(--app-primary-600);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.w3a-parent-container #w3a-modal .t-btn.t-btn-secondary:active{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-color:var(--app-primary-600);background-color:initial;border-color:var(--app-primary-600);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.w3a-parent-container #w3a-modal .t-btn.t-btn-secondary:is(.dark *){border-color:var(--app-gray-300);color:var(--app-white)}.w3a-parent-container #w3a-modal .t-btn.t-btn-secondary:hover:is(.dark *){background-color:var(--app-gray-700)}.w3a-parent-container #w3a-modal .t-btn.t-btn-secondary:focus-visible:is(.dark *){--tw-ring-color:var(--app-primary-500);background-color:initial;border-color:var(--app-primary-500)}.w3a-parent-container #w3a-modal .t-btn.t-btn-secondary:active:is(.dark *){--tw-ring-color:var(--app-primary-500);background-color:initial;border-color:var(--app-primary-500)}.w3a-parent-container #w3a-modal .t-btn.t-btn-tertiary{background-color:var(--app-gray-200);color:var(--app-gray-800)}.w3a-parent-container #w3a-modal .t-btn.t-btn-tertiary:hover{background-color:var(--app-gray-300)}.w3a-parent-container #w3a-modal .t-btn.t-btn-tertiary:focus-visible{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-color:var(--app-primary-600);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.w3a-parent-container #w3a-modal .t-btn.t-btn-tertiary:active{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-color:var(--app-primary-600);background-color:var(--app-gray-200);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.w3a-parent-container #w3a-modal .t-btn.t-btn-tertiary:is(.dark *){background-color:var(--app-gray-500);color:var(--app-white)}.w3a-parent-container #w3a-modal .t-btn.t-btn-tertiary:hover:is(.dark *){background-color:var(--app-gray-400)}.w3a-parent-container #w3a-modal .t-btn.t-btn-tertiary:focus-visible:is(.dark *){--tw-ring-color:var(--app-primary-500)}.w3a-parent-container #w3a-modal .t-btn.t-btn-tertiary:active:is(.dark *){--tw-ring-color:var(--app-primary-500);background-color:var(--app-gray-500)}.w3a-parent-container #w3a-modal .t-btn.t-btn-text{color:var(--app-primary-600)}.w3a-parent-container #w3a-modal .t-btn.t-btn-text:hover{color:var(--app-primary-800);text-decoration-line:underline}.w3a-parent-container #w3a-modal .t-btn.t-btn-text:focus-visible{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-color:var(--app-primary-600);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.w3a-parent-container #w3a-modal .t-btn.t-btn-text:active{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-color:var(--app-primary-600);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);color:var(--app-primary-600)}.w3a-parent-container #w3a-modal .t-btn.t-btn-text:disabled{color:var(--app-gray-400);text-decoration-line:none}.w3a-parent-container #w3a-modal .t-btn.t-btn-text:is(.dark *){color:var(--app-primary-500)}.w3a-parent-container #w3a-modal .t-btn.t-btn-text:hover:is(.dark *){color:var(--app-primary-400)}.w3a-parent-container #w3a-modal .t-btn.t-btn-text:disabled:is(.dark *){color:var(--app-gray-600)}.w3a-parent-container #w3a-modal .btn-link{text-decoration-line:none}.w3a-parent-container #w3a-modal button.t-btn:hover>.hover-icon{display:block;transition:display .15s;transition-timing-function:cubic-bezier(0,.54,.63,.99)}.w3a-parent-container #w3a-modal button.t-btn:hover>.image-icon{display:none;transition:display .15s;transition-timing-function:cubic-bezier(0,.54,.63,.99)}";
styleInject(css_248z);

function Button(props) {
  const {
    variant = "primary",
    onClick,
    children,
    title,
    className,
    style,
    size = "md",
    disabled,
    type = "button"
  } = props;
  const sizeClass = `size-${size}`;
  return /*#__PURE__*/jsx("button", {
    disabled: disabled
    // eslint-disable-next-line react/button-has-type
    ,
    type: type,
    className: `t-btn t-btn-${variant} rounded-full ${sizeClass} ${className}`,
    onClick: onClick,
    title: title,
    style: style,
    children: children
  });
}
var Button$1 = /*#__PURE__*/memo(Button);

const closeIcon = /*#__PURE__*/jsx(Icon, {
  iconName: "close"
});
function Loader(props) {
  const {
    message,
    modalStatus,
    label,
    onClose,
    canEmit = true
  } = props;
  useEffect(() => {
    log.debug("loader re-rendering");
    if (modalStatus === MODAL_STATUS.CONNECTED && canEmit) {
      setTimeout(() => {
        onClose();
      }, 3000);
    }
  }, [canEmit, modalStatus, onClose]);
  return modalStatus !== MODAL_STATUS.INITIALIZED ? /*#__PURE__*/jsxs("div", {
    className: "w3ajs-modal-loader w3a-modal__loader",
    children: [/*#__PURE__*/jsxs("div", {
      className: "w3a-modal__loader-content",
      children: [/*#__PURE__*/jsxs("div", {
        className: "w3a-modal__loader-info",
        children: [modalStatus === MODAL_STATUS.CONNECTING && /*#__PURE__*/jsx("div", {
          className: "w3ajs-modal-loader__spinner w3a-spinner",
          children: /*#__PURE__*/jsx("div", {
            className: "w3a-spinner__spinner"
          })
        }), /*#__PURE__*/jsx("div", {
          className: "w3ajs-modal-loader__label w3a-spinner-label",
          children: label
        }), modalStatus === ADAPTER_STATUS.CONNECTED && /*#__PURE__*/jsx("div", {
          className: "w3ajs-modal-loader__message w3a-spinner-message",
          children: message
        }), modalStatus === ADAPTER_STATUS.ERRORED && /*#__PURE__*/jsx("div", {
          className: "w3ajs-modal-loader__message w3a-spinner-message w3a-spinner-message--error",
          children: message
        })]
      }), /*#__PURE__*/jsx(Footer, {})]
    }), (modalStatus === ADAPTER_STATUS.CONNECTED || modalStatus === ADAPTER_STATUS.ERRORED) && /*#__PURE__*/jsx("button", {
      type: "button",
      className: "w3a-header__button w3ajs-loader-close-btn",
      onClick: onClose,
      children: closeIcon
    })]
  }) : null;
}

function WalletConnect(props) {
  const {
    walletConnectUri
  } = props;
  const [t] = useTranslation(undefined, {
    i18n: i18nInstance
  });

  // TODO: show only wcAdapters of current chain
  return /*#__PURE__*/jsx("div", {
    className: "w3ajs-wallet-connect w3a-wallet-connect",
    children: /*#__PURE__*/jsx("div", {
      className: "w3ajs-wallet-connect__container w3a-wallet-connect__container",
      children: /*#__PURE__*/jsxs("div", {
        className: "w3a-wallet-connect__container-desktop",
        children: [/*#__PURE__*/jsx("div", {
          children: t("modal.external.walletconnect-subtitle")
        }), /*#__PURE__*/jsx("div", {
          className: "w3ajs-wallet-connect-qr w3a-wallet-connect-qr",
          tabIndex: 0,
          role: "button",
          onClick: () => copyToClipboard(walletConnectUri),
          onKeyDown: () => copyToClipboard(walletConnectUri),
          children: /*#__PURE__*/jsx(QRCode, {
            size: 200,
            eyeRadius: 5,
            qrStyle: "dots",
            removeQrCodeBehindLogo: true,
            logoImage: WALLET_CONNECT_LOGO,
            value: walletConnectUri
          })
        }), /*#__PURE__*/jsx("div", {
          children: t("modal.external.walletconnect-copy")
        })]
      })
    })
  });
}
var WalletConnect$1 = /*#__PURE__*/memo(WalletConnect);

function formatIOSMobile(params) {
  const encodedUri = encodeURIComponent(params.uri);
  if (params.universalLink) {
    return `${params.universalLink}/wc?uri=${encodedUri}`;
  }
  if (params.deepLink) {
    return `${params.deepLink}${params.deepLink.endsWith(":") ? "//" : "/"}wc?uri=${encodedUri}`;
  }
  return "";
}
function formatMobileRegistryEntry(entry, walletConnectUri, os, platform = "mobile") {
  const universalLink = entry[platform].universal || "";
  const deepLink = entry[platform].native || "";
  return {
    name: entry.name || "",
    logo: entry.logo || "",
    universalLink,
    deepLink,
    href: os === bowser.OS_MAP.iOS ? formatIOSMobile({
      uri: walletConnectUri,
      universalLink,
      deepLink
    }) : walletConnectUri
  };
}
function formatMobileRegistry(registry, walletConnectUri, os, platform = "mobile") {
  return Object.values(registry).filter(entry => !!entry[platform].universal || !!entry[platform].native).map(entry => formatMobileRegistryEntry(entry, walletConnectUri, os, platform));
}
function ExternalWallet(props) {
  const {
    hideExternalWallets,
    handleExternalWalletClick,
    config = {},
    walletConnectUri,
    showBackButton,
    modalStatus,
    wcAdapters
  } = props;
  const [isLoaded, setIsLoaded] = useState(true);
  const [adapterVisibilityMap, setAdapterVisibilityMap] = useState({});
  const [externalButtons, setExternalButtons] = useState([]);
  const deviceType = useMemo(() => {
    const browser = bowser.getParser(window.navigator.userAgent);
    return browser.getPlatformType();
  }, []);
  const deviceDetails = useMemo(() => {
    const browser = bowser.getParser(window.navigator.userAgent);
    return {
      platform: browser.getPlatformType(),
      os: browser.getOSName()
    };
  }, []);
  const [t] = useTranslation(undefined, {
    i18n: i18nInstance
  });
  useEffect(() => {
    var _config$walletConnect;
    log.debug("loaded external wallets", config, walletConnectUri, deviceType);
    const walletConnectAdapterName = WALLET_ADAPTERS.WALLET_CONNECT_V2;
    const wcAvailable = (((_config$walletConnect = config[walletConnectAdapterName]) === null || _config$walletConnect === void 0 ? void 0 : _config$walletConnect.showOnModal) || false) !== false;
    if (wcAvailable && !walletConnectUri) {
      setIsLoaded(false);
      handleExternalWalletClick({
        adapter: walletConnectAdapterName
      });
    } else if (Object.keys(config).length > 0) {
      setIsLoaded(true);
    }
    const canShowMap = {};
    Object.keys(config).forEach(adapter => {
      const adapterConfig = config[adapter];
      if (!adapterConfig.showOnModal) {
        canShowMap[adapter] = false;
        return;
      }
      if (deviceType === "desktop" && adapterConfig.showOnDesktop) {
        canShowMap[adapter] = true;
        return;
      }
      if ((deviceType === "mobile" || deviceType === "tablet") && adapterConfig.showOnMobile) {
        canShowMap[adapter] = true;
        return;
      }
      canShowMap[adapter] = false;
    });
    setAdapterVisibilityMap(canShowMap);
  }, [config, handleExternalWalletClick, walletConnectUri, deviceType]);
  useEffect(() => {
    const buttons = [];
    // add wallet connect links
    if (deviceDetails.platform === bowser.PLATFORMS_MAP.mobile) {
      let mobileLinks = formatMobileRegistry(wcAdapters, walletConnectUri, deviceDetails.os, deviceDetails.platform);
      if (deviceDetails.os === bowser.OS_MAP.iOS) {
        var _window$ethereum;
        if ((_window$ethereum = window.ethereum) !== null && _window$ethereum !== void 0 && _window$ethereum.isMetaMask) {
          // if metamask, use the metamask adapter directly
          mobileLinks = mobileLinks.filter(x => x.name !== "MetaMask");
        }
        buttons.push(...mobileLinks.map(link => ({
          name: link.name,
          href: link.href,
          logo: link.logo,
          isLink: true,
          block: false
        })));
      } else if (mobileLinks.length > 0) {
        buttons.push({
          name: "WalletConnect",
          href: mobileLinks[0].href,
          logo: WALLET_CONNECT_LOGO,
          isLink: true,
          block: true
        });
      }
    }
    const adapterBtns = Object.keys(config).filter(adapter => ![WALLET_ADAPTERS.WALLET_CONNECT_V2].includes(adapter) && adapterVisibilityMap[adapter]).map(adapter => ({
      name: adapter,
      isLink: false,
      block: false
    }));
    if (adapterBtns.length === 1 && deviceDetails.os !== bowser.OS_MAP.iOS) adapterBtns[0].block = true;
    buttons.push(...adapterBtns);
    setExternalButtons(buttons);
  }, [wcAdapters, config, deviceDetails.os, deviceDetails.platform, walletConnectUri, adapterVisibilityMap]);
  return /*#__PURE__*/jsx("div", {
    className: "w3ajs-external-wallet w3a-group",
    children: /*#__PURE__*/jsxs("div", {
      className: "w3a-external-container w3ajs-external-container",
      children: [showBackButton && /*#__PURE__*/jsxs("button", {
        type: "button",
        className: "w3a-external-back w3ajs-external-back",
        onClick: () => hideExternalWallets(),
        children: [/*#__PURE__*/jsx(Icon, {
          iconName: "arrow-left"
        }), /*#__PURE__*/jsx("div", {
          className: "w3a-group__title",
          children: t("modal.external.back")
        })]
      }), !isLoaded && /*#__PURE__*/jsx(Loader, {
        modalStatus: MODAL_STATUS.CONNECTING,
        canEmit: false
      }), Object.keys(config).map(adapter => {
        if (walletConnectUri && deviceDetails.platform === bowser.PLATFORMS_MAP.desktop && [WALLET_ADAPTERS.WALLET_CONNECT_V2].includes(adapter)) {
          return /*#__PURE__*/jsx(WalletConnect$1, {
            walletConnectUri: walletConnectUri
          }, adapter);
        }
        return null;
      }), modalStatus === MODAL_STATUS.INITIALIZED && (externalButtons.length > 0 ? /*#__PURE__*/jsx("ul", {
        className: "w3a-adapter-list w3ajs-wallet-adapters",
        children: externalButtons.map(button => {
          var _config$button$name, _config$button$name2;
          const providerIcon = button.isLink ? /*#__PURE__*/jsx("img", {
            src: button.logo,
            height: "auto",
            width: "auto",
            alt: `login-${button.name}`
          }) : /*#__PURE__*/jsx(Image$1, {
            imageId: `login-${button.name}`,
            hoverImageId: `login-${button.name}`,
            height: "32",
            width: "32",
            isButton: true
          });
          const isBlock = externalButtons.length === 1 || button.block;
          const label = isBlock ? /*#__PURE__*/jsx("p", {
            className: "ml-2 text-left",
            children: ((_config$button$name = config[button.name]) === null || _config$button$name === void 0 ? void 0 : _config$button$name.label) || button.name
          }) : "";
          return /*#__PURE__*/jsx("li", {
            className: [`w3a-adapter-item`, isBlock ? "w3a-adapter-item--full" : "col-span-2"].join(" "),
            children: button.isLink ? /*#__PURE__*/jsx("a", {
              href: button.href,
              rel: "noopener noreferrer",
              target: "_blank",
              children: /*#__PURE__*/jsxs(Button$1, {
                type: "button",
                variant: "tertiary",
                className: "w-full",
                children: [providerIcon, label]
              })
            }, button.name) : /*#__PURE__*/jsxs(Button$1, {
              variant: "tertiary",
              type: "button",
              onClick: () => handleExternalWalletClick({
                adapter: button.name
              }),
              className: "w-full",
              title: ((_config$button$name2 = config[button.name]) === null || _config$button$name2 === void 0 ? void 0 : _config$button$name2.label) || button.name,
              children: [providerIcon, label]
            })
          }, button.name);
        })
      }) : /*#__PURE__*/jsx("div", {
        className: "mt-4 text-center text-sm font-normal text-app-gray-500 dark:text-app-gray-400",
        children: t("modal.external.no-wallets-found")
      }))]
    })
  });
}

const ThemedContext = /*#__PURE__*/createContext({
  isDark: true // default value
});

function Header(props) {
  const {
    isDark
  } = useContext(ThemedContext);
  const {
    onClose,
    appLogo,
    appName
  } = props;
  const [t] = useTranslation(undefined, {
    i18n: i18nInstance
  });
  const headerLogo = [DEFAULT_LOGO_DARK, DEFAULT_LOGO_LIGHT].includes(appLogo) ? "" : appLogo;
  const subtitle = t("modal.header-subtitle-name", {
    appName
  });
  return /*#__PURE__*/jsxs("div", {
    className: "w3a-modal__header",
    children: [/*#__PURE__*/jsx("div", {
      className: "w3a-header",
      children: /*#__PURE__*/jsxs("div", {
        children: [headerLogo && /*#__PURE__*/jsx("div", {
          className: "w3a-header__logo",
          children: /*#__PURE__*/jsx("img", {
            src: headerLogo,
            alt: ""
          })
        }), /*#__PURE__*/jsx("div", {
          className: "w3a-header__title",
          children: t("modal.header-title")
        }), /*#__PURE__*/jsxs("div", {
          className: "w3a-header__subtitle",
          children: [subtitle, /*#__PURE__*/jsxs("div", {
            className: "relative flex flex-col items-center group cursor-pointer",
            children: [/*#__PURE__*/jsx(Icon, {
              iconName: `information-circle${isDark ? "-light" : ""}`
            }), /*#__PURE__*/jsxs("div", {
              className: "absolute top-4 z-20 flex-col items-center hidden mb-5 group-hover:flex",
              children: [/*#__PURE__*/jsx("div", {
                className: "w-3 h-3 ml-[3px] -mb-2 rotate-45 bg-app-gray-50 dark:bg-app-gray-600"
              }), /*#__PURE__*/jsxs("div", {
                className: `relative p-4 w-[270px] -translate-x-16 text-xs leading-none text-app-white rounded-md bg-app-gray-50 dark:bg-app-gray-600 shadow-lg ${subtitle.length > 34 ? "-ml-[100px]" : ""}`,
                children: [/*#__PURE__*/jsx("div", {
                  className: "text-xs font-medium mb-1 text-app-gray-900 dark:text-app-white",
                  children: t("modal.header-tooltip-title")
                }), /*#__PURE__*/jsx("div", {
                  className: "text-xs text-app-gray-400",
                  children: t("modal.header-tooltip-desc")
                })]
              })]
            })]
          })]
        })]
      })
    }), /*#__PURE__*/jsx("button", {
      type: "button",
      onClick: onClose,
      className: "w3a-header__button w3ajs-close-btn",
      children: /*#__PURE__*/jsx(Icon, {
        iconName: "close"
      })
    })]
  });
}
const memoizedHeader = /*#__PURE__*/memo(Header, (prevProps, nextProps) => {
  if (prevProps.appLogo !== nextProps.appLogo) {
    return true;
  }
  return false;
});
memoizedHeader.displayName = "Header";

const getAdapterSocialLogins = (adapterName, loginMethodsConfig = {}) => {
  const finalLoginMethodsConfig = {};
  if (adapterName === WALLET_ADAPTERS.OPENLOGIN) {
    OPENLOGIN_PROVIDERS.forEach(loginMethod => {
      const currentLoginMethodConfig = loginMethodsConfig[loginMethod] || {
        name: OPENLOGIN_PROVIDERS_NAMES[loginMethod],
        showOnMobile: true,
        showOnModal: true,
        showOnDesktop: true
      };
      finalLoginMethodsConfig[loginMethod] = _objectSpread({}, currentLoginMethodConfig);
    });
    log.debug("OpenLogin login method ui config", finalLoginMethodsConfig);
  } else {
    throw WalletInitializationError.invalidParams(`${adapterName} is not a valid adapter`);
  }
  return finalLoginMethodsConfig;
};
async function validateImageUrl(url) {
  return new Promise((resolve, reject) => {
    const img = new Image();
    img.src = url;
    if (img.complete) {
      resolve(true);
    } else {
      img.addEventListener("load", () => {
        resolve(true);
      });
      img.addEventListener("error", () => {
        reject();
      });
    }
  });
}
async function getNetworkIconId(ticker) {
  const fallbackId = "network-default";
  if (!ticker) return fallbackId;
  try {
    const url = `https://images.web3auth.io/network-${ticker.toLowerCase()}.svg`;
    const isValid = await validateImageUrl(url);
    if (isValid) {
      return `network-${ticker.toLowerCase()}`;
    }
    return fallbackId;
  } catch {
    return fallbackId;
  }
}
const passwordlessBackendUrl = "https://api-passwordless.web3auth.io";
const getUserCountry = async () => {
  try {
    const result = await get(`${passwordlessBackendUrl}/api/v3/user/location`);
    if (result && result.data.country) return {
      country: result.data.country,
      dialCode: result.data.dial_code
    };
    return null;
  } catch (error) {
    log.error("error getting user country", error);
    return null;
  }
};
const validatePhoneNumber = async phoneNumber => {
  try {
    const result = await post(`${passwordlessBackendUrl}/api/v3/phone_number/validate`, {
      phone_number: phoneNumber
    });
    if (result && result.success) return result.parsed_number;
    return false;
  } catch (error) {
    log.error("error validating phone number", error);
    if (error.status === 400) {
      return false;
    }
    // sending true because we don't want the user to be stuck on a flow
    // if there is an error with the api or something went wrong.
    return true;
  }
};
const getUserLanguage = defaultLanguage => {
  let userLanguage = defaultLanguage;
  if (!userLanguage) {
    const browserLanguage = typeof window !== "undefined" ? window.navigator.userLanguage || window.navigator.language || "en-US" : "en-US";
    userLanguage = browserLanguage.split("-")[0];
  }
  return Object.prototype.hasOwnProperty.call(LANGUAGE_MAP, userLanguage) ? userLanguage : LANGUAGES.en;
};

function SocialLoginPasswordless(props) {
  const {
    handleSocialLoginClick,
    adapter,
    isPrimaryBtn,
    isEmailVisible,
    isSmsVisible
  } = props;
  const {
    isDark
  } = useContext(ThemedContext);
  const [fieldValue, setFieldValue] = useState("");
  const [countryCode, setCountryCode] = useState("");
  const [isValidInput, setIsValidInput] = useState(null);
  const [t] = useTranslation(undefined, {
    i18n: i18nInstance
  });
  const handleFormSubmit = async e => {
    e.preventDefault();
    const value = fieldValue;
    if (isEmailVisible) {
      const isEmailValid = value.match(/^([\w.%+-]+)@([\w-]+\.)+([\w]{2,})$/i);
      if (isEmailValid) {
        return handleSocialLoginClick({
          adapter,
          loginParams: {
            loginProvider: LOGIN_PROVIDER.EMAIL_PASSWORDLESS,
            login_hint: value,
            name: "Email"
          }
        });
      }
    }
    if (isSmsVisible) {
      const number = value.startsWith("+") ? value : `${countryCode}${value}`;
      const result = await validatePhoneNumber(number);
      if (result) {
        return handleSocialLoginClick({
          adapter,
          loginParams: {
            loginProvider: LOGIN_PROVIDER.SMS_PASSWORDLESS,
            login_hint: typeof result === "string" ? result : number,
            name: "Mobile"
          }
        });
      }
    }
    setIsValidInput(false);
    return undefined;
  };
  useEffect(() => {
    const getLocation = async () => {
      const result = await getUserCountry();
      if (result && result.dialCode) {
        setCountryCode(result.dialCode);
      }
    };
    if (isSmsVisible) getLocation();
  }, [isSmsVisible]);
  const handleInputChange = e => {
    setFieldValue(e.target.value);
    if (isValidInput === false) setIsValidInput(null);
  };
  const title = useMemo(() => {
    if (isEmailVisible && isSmsVisible) return "modal.social.passwordless-title";
    if (isEmailVisible) return "modal.social.email";
    return "modal.social.phone";
  }, [isEmailVisible, isSmsVisible]);
  const placeholder = useMemo(() => {
    if (isEmailVisible && isSmsVisible) return "+(00)123456/name@example.com";
    if (isEmailVisible) return "name@example.com";
    return "+(00)123456";
  }, [isEmailVisible, isSmsVisible]);
  const invalidInputErrorMessage = useMemo(() => {
    if (isEmailVisible && isSmsVisible) return "modal.errors-invalid-number-email";
    if (isEmailVisible) return "modal.errors-invalid-email";
    return "modal.errors-invalid-number";
  }, [isEmailVisible, isSmsVisible]);
  return /*#__PURE__*/jsxs("div", {
    className: "w3ajs-passwordless w3a-group w3a-group--passwordless",
    children: [/*#__PURE__*/jsxs("div", {
      className: "w3a-group__title",
      children: [t(title), isSmsVisible && /*#__PURE__*/jsxs("div", {
        className: "relative flex flex-col items-center cursor-pointer group",
        children: [/*#__PURE__*/jsx(Icon, {
          iconName: `information-circle${isDark ? "-light" : ""}`
        }), /*#__PURE__*/jsxs("div", {
          className: "absolute z-20 flex-col items-center hidden mb-5 top-4 group-hover:flex",
          children: [/*#__PURE__*/jsx("div", {
            className: "w-3 h-3 ml-[3px] -mb-2 rotate-45 bg-app-gray-50 dark:bg-app-gray-600"
          }), /*#__PURE__*/jsxs("div", {
            className: `relative p-4 w-[300px] text-xs leading-none text-app-white rounded-md bg-app-gray-50 dark:bg-app-gray-600 shadow-lg ${isSmsVisible && !isEmailVisible ? "left-20" : "left-8"}`,
            children: [/*#__PURE__*/jsx("div", {
              className: "mb-1 text-xs font-medium text-app-gray-900 dark:text-app-white",
              children: t("modal.popup.phone-header")
            }), /*#__PURE__*/jsx("div", {
              className: "text-xs text-app-gray-400",
              children: t("modal.popup.phone-body")
            })]
          })]
        })]
      })]
    }), /*#__PURE__*/jsxs("form", {
      className: "w3ajs-passwordless-form",
      onSubmit: e => handleFormSubmit(e),
      children: [/*#__PURE__*/jsx("input", {
        className: "w-full mb-4 w3a-text-field",
        name: "passwordless-input",
        required: true,
        placeholder: `${t("modal.social.sms-placeholder-text")} ${placeholder}`,
        onFocus: e => {
          e.target.placeholder = "";
        },
        onBlur: e => {
          e.target.placeholder = `${t("modal.social.sms-placeholder-text")} ${placeholder}`;
        },
        onChange: e => handleInputChange(e)
      }), isValidInput === false && /*#__PURE__*/jsx("div", {
        className: "w3a-sms-field--error",
        children: t(invalidInputErrorMessage)
      }), /*#__PURE__*/jsx(Button$1, {
        variant: isPrimaryBtn ? "primary" : "tertiary",
        disabled: fieldValue === "",
        className: "w-full",
        type: "submit",
        children: t("modal.social.passwordless-cta")
      })]
    })]
  });
}

function getProviderIcon(method, isDark, isPrimaryBtn) {
  const imageId = method === LOGIN_PROVIDER.TWITTER ? `login-twitter-x${isDark ? "-light" : "-dark"}` : `login-${method}${isDark ? "-light" : "-dark"}`;
  const hoverId = method === LOGIN_PROVIDER.APPLE || method === LOGIN_PROVIDER.GITHUB || method === LOGIN_PROVIDER.TWITTER ? imageId : `login-${method}-active`;
  if (isPrimaryBtn) {
    return /*#__PURE__*/jsx(Image$1, {
      width: "20",
      imageId: hoverId,
      hoverImageId: hoverId,
      isButton: true
    });
  }
  return /*#__PURE__*/jsx(Image$1, {
    width: "20",
    imageId: imageId,
    hoverImageId: hoverId,
    isButton: true
  });
}
function SocialLogins(props) {
  const [canShowMore, setCanShowMore] = useState(false);
  const [isExpanded, setIsExpanded] = useState(false);
  const {
    socialLoginsConfig = {
      loginMethods: {},
      loginMethodsOrder: [],
      adapter: "",
      uiConfig: {}
    },
    handleSocialLoginClick
  } = props;
  const {
    isDark
  } = useContext(ThemedContext);
  const [t] = useTranslation(undefined, {
    i18n: i18nInstance
  });

  // Too small a function to use `useCallback`
  const expandClickHandler = () => {
    setIsExpanded(!isExpanded);
  };
  useEffect(() => {
    const maxOptions = Object.keys(socialLoginsConfig.loginMethods).filter(loginMethodKey => {
      return socialLoginsConfig.loginMethods[loginMethodKey].showOnModal;
    });
    setCanShowMore(maxOptions.length > 4);
  }, [socialLoginsConfig.loginMethods]);
  const adapterListClass = classNames("w3a-adapter-list", "w3ajs-socials-adapters", !isExpanded ? " w3a-adapter-list--shrink" : "");
  const adapterButtonClass = classNames("w3a-button-expand", "w3ajs-button-expand", isExpanded ? "w3a-button--rotate" : "");
  const adapterExpandText = isExpanded ? t("modal.social.view-less") : t("modal.social.view-more");
  const loginMethodsCount = Object.keys(socialLoginsConfig.loginMethods).length + 1;
  const restrictedLoginMethods = [LOGIN_PROVIDER.WEBAUTHN, LOGIN_PROVIDER.JWT, LOGIN_PROVIDER.SMS_PASSWORDLESS, LOGIN_PROVIDER.EMAIL_PASSWORDLESS];
  return /*#__PURE__*/jsxs("div", {
    className: "w3ajs-social-logins w3a-group",
    children: [/*#__PURE__*/jsx("ul", {
      className: adapterListClass,
      children: Object.keys(socialLoginsConfig.loginMethods).map(method => {
        var _socialLoginsConfig$u, _socialLoginsConfig$u2;
        const name = capitalizeFirstLetter(socialLoginsConfig.loginMethods[method].name || method);
        const orderIndex = socialLoginsConfig.loginMethodsOrder.indexOf(method) + 1;
        const order = orderIndex || Object.keys(socialLoginsConfig.loginMethods).length + 1;
        const isMainOption = socialLoginsConfig.loginMethods[method].mainOption;
        const isPrimaryBtn = (socialLoginsConfig === null || socialLoginsConfig === void 0 || (_socialLoginsConfig$u = socialLoginsConfig.uiConfig) === null || _socialLoginsConfig$u === void 0 ? void 0 : _socialLoginsConfig$u.primaryButton) === "socialLogin" && order === 1;
        const providerIcon = getProviderIcon(method, isDark, isPrimaryBtn);
        if (socialLoginsConfig.loginMethods[method].showOnModal === false || restrictedLoginMethods.includes(method)) {
          return null;
        }
        const loginMethodSpan = classNames("w3a-adapter-item", (socialLoginsConfig === null || socialLoginsConfig === void 0 || (_socialLoginsConfig$u2 = socialLoginsConfig.uiConfig) === null || _socialLoginsConfig$u2 === void 0 ? void 0 : _socialLoginsConfig$u2.loginGridCol) === 2 ? "col-span-3" : "col-span-2");
        if (isMainOption || order === 1) {
          return /*#__PURE__*/jsx("li", {
            className: "col-span-6 w3a-adapter-item",
            style: {
              order
            },
            children: /*#__PURE__*/jsxs(Button$1, {
              variant: "secondary",
              onClick: () => handleSocialLoginClick({
                adapter: socialLoginsConfig.adapter,
                loginParams: {
                  loginProvider: method,
                  name,
                  login_hint: ""
                }
              }),
              className: "w-full",
              title: name,
              children: [providerIcon, /*#__PURE__*/jsx("p", {
                className: "ml-2",
                children: t("modal.social.continueCustom", {
                  adapter: name
                })
              })]
            })
          }, method);
        }
        return /*#__PURE__*/jsx("li", {
          className: loginMethodSpan,
          style: {
            order: order + loginMethodsCount
          },
          children: /*#__PURE__*/jsx(Button$1, {
            variant: "secondary",
            onClick: () => handleSocialLoginClick({
              adapter: socialLoginsConfig.adapter,
              loginParams: {
                loginProvider: method,
                name,
                login_hint: ""
              }
            }),
            className: "w-full",
            title: name,
            children: providerIcon
          })
        }, method);
      })
    }), /*#__PURE__*/jsx("div", {
      className: "w3a-social__policy",
      children: t("modal.social.policy")
    }), canShowMore && /*#__PURE__*/jsx("div", {
      className: "text-right",
      children: /*#__PURE__*/jsx("button", {
        type: "button",
        className: adapterButtonClass,
        onClick: expandClickHandler,
        children: /*#__PURE__*/jsx("span", {
          className: "w3ajs-button-expand-text",
          children: adapterExpandText
        })
      })
    })]
  });
}

log.enableAll();

// const DETAILED_ADAPTERS = [WALLET_ADAPTERS.PHANTOM, WALLET_ADAPTERS.METAMASK];

function Modal(props) {
  var _modalState$socialLog, _modalState$socialLog2, _modalState$socialLog5, _modalState$socialLog7, _modalState$socialLog9, _modalState$socialLog10;
  const [modalTransitionClasses, setModalTransitionClasses] = useState(["w3a-modal__inner"]);
  const [modalState, setModalState] = useState({
    externalWalletsVisibility: false,
    status: MODAL_STATUS.INITIALIZED,
    hasExternalWallets: false,
    externalWalletsInitialized: false,
    modalVisibility: false,
    modalVisibilityDelayed: false,
    postLoadingMessage: "",
    walletConnectUri: "",
    socialLoginsConfig: {
      loginMethods: {},
      loginMethodsOrder: [],
      adapter: "",
      uiConfig: {}
    },
    externalWalletsConfig: {},
    detailedLoaderAdapter: "",
    detailedLoaderAdapterName: "",
    showExternalWalletsOnly: false,
    wcAdapters: []
  });
  const [t] = useTranslation(undefined, {
    i18n: i18nInstance
  });
  const {
    stateListener,
    appLogo,
    appName,
    handleSocialLoginClick,
    handleExternalWalletClick,
    handleShowExternalWallets,
    closeModal
  } = props;
  useEffect(() => {
    stateListener.emit("MOUNTED");
    stateListener.on("STATE_UPDATED", newModalState => {
      log.debug("state updated", newModalState);
      setModalState(prevState => {
        const mergedState = cloneDeep(deepmerge(prevState, newModalState));
        return mergedState;
      });
    });
  }, [stateListener]);
  useEffect(() => {
    let timeOutId;
    if (modalState.modalVisibility) {
      setModalState(prevState => {
        return _objectSpread(_objectSpread({}, prevState), {}, {
          modalVisibilityDelayed: modalState.modalVisibility
        });
      });
      timeOutId = window.setTimeout(() => {
        setModalTransitionClasses(["w3a-modal__inner", modalState.modalVisibility ? "w3a-modal__inner--active" : ""]);
        // hide external wallets, if modal is closing, so that it will show social login screen on reopen.
      }, 100);
    } else {
      setModalTransitionClasses(["w3a-modal__inner", modalState.modalVisibility ? "w3a-modal__inner--active" : ""]);
      // hide external wallets, if modal is closing, so that it will show social login screen on reopen.

      timeOutId = window.setTimeout(() => {
        setModalState(prevState => {
          return _objectSpread(_objectSpread({}, prevState), {}, {
            modalVisibilityDelayed: modalState.modalVisibility
          });
        });
      }, 250);
    }
    return () => {
      clearTimeout(timeOutId);
    };
  }, [modalState.modalVisibility]);
  const onCloseLoader = useCallback(() => {
    if (modalState.status === MODAL_STATUS.CONNECTED) {
      closeModal();
    }
    if (modalState.status === MODAL_STATUS.ERRORED) {
      setModalState(prevState => {
        return _objectSpread(_objectSpread({}, prevState), {}, {
          modalVisibility: true,
          status: MODAL_STATUS.INITIALIZED
        });
      });
    }
  }, [closeModal, modalState.status]);
  const preHandleExternalWalletClick = useCallback(params => {
    const {
      adapter
    } = params;
    setModalState(prevState => {
      return _objectSpread(_objectSpread({}, prevState), {}, {
        detailedLoaderAdapter: adapter,
        detailedLoaderAdapterName: ADAPTER_NAMES[adapter]
      });
    });
    handleExternalWalletClick(params);
  }, [handleExternalWalletClick]);
  const preHandleSocialWalletClick = params => {
    const {
      loginParams
    } = params;
    setModalState(prevState => {
      return _objectSpread(_objectSpread({}, prevState), {}, {
        detailedLoaderAdapter: loginParams.loginProvider,
        detailedLoaderAdapterName: loginParams.name
      });
    });
    handleSocialLoginClick(params);
  };
  const isEmailPrimary = ((_modalState$socialLog = modalState.socialLoginsConfig) === null || _modalState$socialLog === void 0 || (_modalState$socialLog = _modalState$socialLog.uiConfig) === null || _modalState$socialLog === void 0 ? void 0 : _modalState$socialLog.primaryButton) === "emailLogin";
  const isExternalPrimary = ((_modalState$socialLog2 = modalState.socialLoginsConfig) === null || _modalState$socialLog2 === void 0 || (_modalState$socialLog2 = _modalState$socialLog2.uiConfig) === null || _modalState$socialLog2 === void 0 ? void 0 : _modalState$socialLog2.primaryButton) === "externalLogin";
  const externalWalletButton = /*#__PURE__*/jsx("div", {
    className: "w3ajs-external-wallet w3a-group",
    children: /*#__PURE__*/jsxs("div", {
      className: "w3a-external-toggle w3ajs-external-toggle",
      children: [/*#__PURE__*/jsx("div", {
        className: "w3a-group__title",
        children: t("modal.external.title")
      }), /*#__PURE__*/jsx(Button$1, {
        variant: isExternalPrimary ? "primary" : "tertiary",
        type: "button",
        className: "w-full w3ajs-external-toggle__button",
        onClick: () => {
          handleShowExternalWallets(modalState.externalWalletsInitialized);
          setModalState(prevState => {
            return _objectSpread(_objectSpread({}, prevState), {}, {
              externalWalletsVisibility: true
            });
          });
        },
        children: t("modal.external.connect")
      })]
    })
  });
  const areSocialLoginsVisible = useMemo(() => {
    var _modalState$socialLog3, _modalState$socialLog4;
    if (modalState.showExternalWalletsOnly) return false;
    if (Object.keys(((_modalState$socialLog3 = modalState.socialLoginsConfig) === null || _modalState$socialLog3 === void 0 ? void 0 : _modalState$socialLog3.loginMethods) || {}).length === 0) return false;
    const isAnySocialLoginVisible = Object.entries(((_modalState$socialLog4 = modalState.socialLoginsConfig) === null || _modalState$socialLog4 === void 0 ? void 0 : _modalState$socialLog4.loginMethods) || {}).some(([k, v]) => k !== LOGIN_PROVIDER.EMAIL_PASSWORDLESS && v.showOnModal !== false);
    if (isAnySocialLoginVisible) return true;
    return false;
  }, [modalState.showExternalWalletsOnly, (_modalState$socialLog5 = modalState.socialLoginsConfig) === null || _modalState$socialLog5 === void 0 ? void 0 : _modalState$socialLog5.loginMethods]);
  log.info("modal state", modalState, areSocialLoginsVisible);
  const isEmailPasswordlessLoginVisible = useMemo(() => {
    var _modalState$socialLog6;
    return (_modalState$socialLog6 = modalState.socialLoginsConfig) === null || _modalState$socialLog6 === void 0 || (_modalState$socialLog6 = _modalState$socialLog6.loginMethods[LOGIN_PROVIDER.EMAIL_PASSWORDLESS]) === null || _modalState$socialLog6 === void 0 ? void 0 : _modalState$socialLog6.showOnModal;
  }, [(_modalState$socialLog7 = modalState.socialLoginsConfig) === null || _modalState$socialLog7 === void 0 ? void 0 : _modalState$socialLog7.loginMethods]);
  const isSmsPasswordlessLoginVisible = useMemo(() => {
    var _modalState$socialLog8;
    return (_modalState$socialLog8 = modalState.socialLoginsConfig) === null || _modalState$socialLog8 === void 0 || (_modalState$socialLog8 = _modalState$socialLog8.loginMethods[LOGIN_PROVIDER.SMS_PASSWORDLESS]) === null || _modalState$socialLog8 === void 0 ? void 0 : _modalState$socialLog8.showOnModal;
  }, [(_modalState$socialLog9 = modalState.socialLoginsConfig) === null || _modalState$socialLog9 === void 0 ? void 0 : _modalState$socialLog9.loginMethods]);
  return modalState.modalVisibilityDelayed && /*#__PURE__*/jsx("div", {
    id: "w3a-modal",
    className: "w3a-modal",
    children: /*#__PURE__*/jsxs("div", {
      className: modalTransitionClasses.join(" "),
      children: [/*#__PURE__*/jsx(memoizedHeader, {
        onClose: closeModal,
        appLogo: appLogo,
        appName: appName
      }), modalState.status !== MODAL_STATUS.INITIALIZED ? /*#__PURE__*/jsx("div", {
        className: "w3a-modal__content w3ajs-content",
        children: /*#__PURE__*/jsx(DetailedLoader, {
          onClose: onCloseLoader,
          appLogo: appLogo,
          modalStatus: modalState.status,
          message: t(modalState.postLoadingMessage),
          adapter: modalState.detailedLoaderAdapter,
          adapterName: modalState.detailedLoaderAdapterName
        })
      }) : /*#__PURE__*/jsx("div", {
        className: "w3a-modal__content w3ajs-content",
        children: (areSocialLoginsVisible || isEmailPasswordlessLoginVisible || isSmsPasswordlessLoginVisible) && !modalState.externalWalletsVisibility ? /*#__PURE__*/jsxs(Fragment, {
          children: [areSocialLoginsVisible ? /*#__PURE__*/jsx(SocialLogins, {
            handleSocialLoginClick: params => preHandleSocialWalletClick(params),
            socialLoginsConfig: modalState.socialLoginsConfig
          }) : null, (isEmailPasswordlessLoginVisible || isSmsPasswordlessLoginVisible) && /*#__PURE__*/jsx(SocialLoginPasswordless, {
            isEmailVisible: isEmailPasswordlessLoginVisible,
            isSmsVisible: isSmsPasswordlessLoginVisible,
            adapter: (_modalState$socialLog10 = modalState.socialLoginsConfig) === null || _modalState$socialLog10 === void 0 ? void 0 : _modalState$socialLog10.adapter,
            handleSocialLoginClick: params => preHandleSocialWalletClick(params),
            isPrimaryBtn: isEmailPrimary
          }), modalState.hasExternalWallets && externalWalletButton]
        }) : /*#__PURE__*/jsx(ExternalWallet, {
          modalStatus: modalState.status,
          showBackButton: areSocialLoginsVisible || isEmailPasswordlessLoginVisible || isSmsPasswordlessLoginVisible,
          handleExternalWalletClick: preHandleExternalWalletClick,
          walletConnectUri: modalState.walletConnectUri,
          wcAdapters: modalState.wcAdapters,
          config: modalState.externalWalletsConfig,
          hideExternalWallets: () => setModalState(prevState => {
            return _objectSpread(_objectSpread({}, prevState), {}, {
              externalWalletsVisibility: false
            });
          })
        })
      }), /*#__PURE__*/jsx(Footer, {})]
    })
  });
}

function createWrapper(parentZIndex) {
  const existingWrapper = document.getElementById("w3a-parent-container");
  if (existingWrapper) existingWrapper.remove();
  const parent = document.createElement("section");
  parent.classList.add("w3a-parent-container");
  parent.setAttribute("id", "w3a-parent-container");
  parent.style.zIndex = parentZIndex;
  parent.style.position = "relative";
  const wrapper = document.createElement("section");
  wrapper.setAttribute("id", "w3a-container");
  parent.appendChild(wrapper);
  document.body.appendChild(parent);
  return wrapper;
}
class LoginModal extends SafeEventEmitter {
  constructor(_uiConfig) {
    super();
    _defineProperty(this, "uiConfig", void 0);
    _defineProperty(this, "stateEmitter", void 0);
    _defineProperty(this, "initModal", async () => {
      const darkState = {
        isDark: this.isDark
      };
      const useLang = this.uiConfig.defaultLanguage || LANGUAGES.en;
      // Load new language resource

      if (useLang === LANGUAGES.de) {
        import('./german-BhRxrMye.js').then(messages => {
          i18nInstance.addResourceBundle(useLang, "translation", messages.default);
          return i18nInstance.changeLanguage(useLang);
        }).catch(error => {
          log.error(error);
        });
      } else if (useLang === LANGUAGES.ja) {
        import('./japanese-Bvuydikq.js').then(messages => {
          i18nInstance.addResourceBundle(useLang, "translation", messages.default);
          return i18nInstance.changeLanguage(useLang);
        }).catch(error => {
          log.error(error);
        });
      } else if (useLang === LANGUAGES.ko) {
        import('./korean-M7bd51ut.js').then(messages => {
          i18nInstance.addResourceBundle(useLang, "translation", messages.default);
          return i18nInstance.changeLanguage(useLang);
        }).catch(error => {
          log.error(error);
        });
      } else if (useLang === LANGUAGES.zh) {
        import('./mandarin-CYSJAgXi.js').then(messages => {
          i18nInstance.addResourceBundle(useLang, "translation", messages.default);
          return i18nInstance.changeLanguage(useLang);
        }).catch(error => {
          log.error(error);
        });
      } else if (useLang === LANGUAGES.es) {
        import('./spanish-Bji0Db1n.js').then(messages => {
          i18nInstance.addResourceBundle(useLang, "translation", messages.default);
          return i18nInstance.changeLanguage(useLang);
        }).catch(error => {
          log.error(error);
        });
      } else if (useLang === LANGUAGES.fr) {
        import('./french-C9hScp8b.js').then(messages => {
          i18nInstance.addResourceBundle(useLang, "translation", messages.default);
          return i18nInstance.changeLanguage(useLang);
        }).catch(error => {
          log.error(error);
        });
      } else if (useLang === LANGUAGES.pt) {
        import('./portuguese-CZTBs7Nm.js').then(messages => {
          i18nInstance.addResourceBundle(useLang, "translation", messages.default);
          return i18nInstance.changeLanguage(useLang);
        }).catch(error => {
          log.error(error);
        });
      } else if (useLang === LANGUAGES.nl) {
        import('./dutch-DA4bfNTp.js').then(messages => {
          i18nInstance.addResourceBundle(useLang, "translation", messages.default);
          return i18nInstance.changeLanguage(useLang);
        }).catch(error => {
          log.error(error);
        });
      } else if (useLang === LANGUAGES.tr) {
        import('./turkish-BD7WDb-q.js').then(messages => {
          i18nInstance.addResourceBundle(useLang, "translation", messages.default);
          return i18nInstance.changeLanguage(useLang);
        }).catch(error => {
          log.error(error);
        });
      }
      return new Promise(resolve => {
        var _this$uiConfig;
        this.stateEmitter.once("MOUNTED", () => {
          log.info("rendered");
          this.setState({
            status: MODAL_STATUS.INITIALIZED
          });
          return resolve();
        });
        const container = createWrapper(this.uiConfig.modalZIndex);
        if (darkState.isDark) {
          container.classList.add("dark");
        } else {
          container.classList.remove("dark");
        }
        const root = createRoot(container);
        root.render( /*#__PURE__*/jsx(ThemedContext.Provider, {
          value: darkState,
          children: /*#__PURE__*/jsx(Modal, {
            closeModal: this.closeModal,
            stateListener: this.stateEmitter,
            handleShowExternalWallets: this.handleShowExternalWallets,
            handleExternalWalletClick: this.handleExternalWalletClick,
            handleSocialLoginClick: this.handleSocialLoginClick,
            appLogo: darkState.isDark ? this.uiConfig.logoDark : this.uiConfig.logoLight,
            appName: this.uiConfig.appName
          })
        }));
        if ((_this$uiConfig = this.uiConfig) !== null && _this$uiConfig !== void 0 && _this$uiConfig.theme) {
          const rootElement = document.getElementById("w3a-parent-container");
          applyWhiteLabelTheme(rootElement, this.uiConfig.theme);
        }
      });
    });
    _defineProperty(this, "addSocialLogins", (adapter, loginMethods, loginMethodsOrder, uiConfig) => {
      this.setState({
        socialLoginsConfig: {
          adapter,
          loginMethods,
          loginMethodsOrder,
          uiConfig
        }
      });
      log.info("addSocialLogins", adapter, loginMethods, loginMethodsOrder, uiConfig);
    });
    _defineProperty(this, "addWalletLogins", (externalWalletsConfig, options) => {
      this.setState({
        externalWalletsConfig,
        externalWalletsInitialized: true,
        showExternalWalletsOnly: !!(options !== null && options !== void 0 && options.showExternalWalletsOnly),
        externalWalletsVisibility: true
      });
    });
    _defineProperty(this, "open", () => {
      this.setState({
        modalVisibility: true
      });
      this.emit(LOGIN_MODAL_EVENTS.MODAL_VISIBILITY, true);
    });
    _defineProperty(this, "closeModal", () => {
      this.setState({
        modalVisibility: false,
        externalWalletsVisibility: false
      });
      this.emit(LOGIN_MODAL_EVENTS.MODAL_VISIBILITY, false);
    });
    _defineProperty(this, "initExternalWalletContainer", () => {
      this.setState({
        hasExternalWallets: true
      });
    });
    _defineProperty(this, "handleShowExternalWallets", status => {
      this.emit(LOGIN_MODAL_EVENTS.INIT_EXTERNAL_WALLETS, {
        externalWalletsInitialized: status
      });
    });
    _defineProperty(this, "handleExternalWalletClick", params => {
      log.info("external wallet clicked", params);
      const {
        adapter
      } = params;
      this.emit(LOGIN_MODAL_EVENTS.LOGIN, {
        adapter
      });
    });
    _defineProperty(this, "handleSocialLoginClick", params => {
      log.info("social login clicked", params);
      const {
        adapter,
        loginParams
      } = params;
      this.emit(LOGIN_MODAL_EVENTS.LOGIN, {
        adapter,
        loginParams: {
          loginProvider: loginParams.loginProvider,
          login_hint: loginParams.login_hint,
          name: loginParams.name
        }
      });
    });
    _defineProperty(this, "setState", newState => {
      this.stateEmitter.emit("STATE_UPDATED", newState);
    });
    _defineProperty(this, "updateWalletConnect", (walletConnectUri, wcAdapters) => {
      if (!walletConnectUri) return;
      this.setState({
        walletConnectUri,
        wcAdapters
      });
    });
    _defineProperty(this, "handleAdapterData", adapterData => {
      if (adapterData.adapterName === WALLET_ADAPTERS.WALLET_CONNECT_V2) {
        const walletConnectData = adapterData.data;
        this.updateWalletConnect(walletConnectData.uri, walletConnectData.extensionAdapters);
      }
    });
    _defineProperty(this, "subscribeCoreEvents", listener => {
      listener.on(ADAPTER_EVENTS.CONNECTING, data => {
        log.info("connecting with adapter", data);
        // don't show loader in case of wallet connect, because currently it listens for incoming for incoming
        // connections without any user interaction.
        if ((data === null || data === void 0 ? void 0 : data.adapter) !== WALLET_ADAPTERS.WALLET_CONNECT_V2) {
          // const provider = data?.loginProvider || "";

          this.setState({
            status: MODAL_STATUS.CONNECTING
          });
        }
      });
      listener.on(ADAPTER_EVENTS.CONNECTED, data => {
        log.debug("connected with adapter", data);
        // only show success if not being reconnected again.
        if (!data.reconnected) {
          this.setState({
            status: MODAL_STATUS.CONNECTED,
            modalVisibility: true,
            postLoadingMessage: "modal.post-loading.connected"
          });
        } else {
          this.setState({
            status: MODAL_STATUS.CONNECTED
          });
        }
      });
      // TODO: send adapter name in error
      listener.on(ADAPTER_EVENTS.ERRORED, error => {
        log.error("error", error, error.message);
        if (error.code === 5000) {
          if (this.uiConfig.displayErrorsOnModal) this.setState({
            modalVisibility: true,
            postLoadingMessage: error.message || "modal.post-loading.something-wrong",
            status: MODAL_STATUS.ERRORED
          });else this.setState({
            modalVisibility: false
          });
        } else {
          this.setState({
            modalVisibility: true,
            status: MODAL_STATUS.INITIALIZED
          });
        }
      });
      listener.on(ADAPTER_EVENTS.DISCONNECTED, () => {
        this.setState({
          status: MODAL_STATUS.INITIALIZED,
          externalWalletsVisibility: false
        });
        // this.toggleMessage("");
      });
      listener.on(ADAPTER_EVENTS.ADAPTER_DATA_UPDATED, adapterData => {
        this.handleAdapterData(adapterData);
      });
    });
    this.uiConfig = _uiConfig;
    if (!_uiConfig.logoDark) this.uiConfig.logoDark = DEFAULT_LOGO_DARK;
    if (!_uiConfig.logoLight) this.uiConfig.logoLight = DEFAULT_LOGO_LIGHT;
    if (!_uiConfig.mode) this.uiConfig.mode = "light";
    if (!_uiConfig.modalZIndex) this.uiConfig.modalZIndex = "99998";
    if (typeof _uiConfig.displayErrorsOnModal === "undefined") this.uiConfig.displayErrorsOnModal = true;
    if (!_uiConfig.appName) this.uiConfig.appName = "Web3Auth";
    if (!_uiConfig.loginGridCol) this.uiConfig.loginGridCol = 3;
    if (!_uiConfig.primaryButton) this.uiConfig.primaryButton = "socialLogin";
    if (!_uiConfig.defaultLanguage) this.uiConfig.defaultLanguage = getUserLanguage(_uiConfig.defaultLanguage);
    this.stateEmitter = new SafeEventEmitter();
    this.subscribeCoreEvents(this.uiConfig.adapterListener);
  }
  get isDark() {
    return this.uiConfig.mode === "dark" || this.uiConfig.mode === "auto" && window.matchMedia("(prefers-color-scheme: dark)").matches;
  }
}

export { DEFAULT_LOGO_DARK, DEFAULT_LOGO_LIGHT, LOGIN_MODAL_EVENTS, LoginModal, MODAL_STATUS, OPENLOGIN_PROVIDERS, OPENLOGIN_PROVIDERS_NAMES, WALLET_CONNECT_LOGO, capitalizeFirstLetter, LoginModal as default, getAdapterSocialLogins, getNetworkIconId, getUserCountry, getUserLanguage, passwordlessBackendUrl, validateImageUrl, validatePhoneNumber };
//# sourceMappingURL=index.js.map
