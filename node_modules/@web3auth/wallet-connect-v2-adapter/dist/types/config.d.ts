import type { EngineTypes, ProposalTypes } from "@walletconnect/types";
import { ChainNamespaceType, IWalletConnectExtensionAdapter } from "@web3auth/base";
import { IAdapterSettings } from "./interface";
export declare const WALLET_CONNECT_EXTENSION_ADAPTERS: IWalletConnectExtensionAdapter[];
export declare enum DEFAULT_EIP155_METHODS {
    ETH_SEND_TRANSACTION = "eth_sendTransaction",
    ETH_SIGN_TRANSACTION = "eth_signTransaction",
    ETH_SIGN = "eth_sign",
    PERSONAL_SIGN = "personal_sign",
    ETH_SIGN_TYPED_DATA = "eth_signTypedData",
    ETH_SIGN_TYPED_DATA_V3 = "eth_signTypedData_v3",
    ETH_SIGN_TYPED_DATA_V4 = "eth_signTypedData_v4",
    ADD_ETHEREUM_CHAIN = "wallet_addEthereumChain",
    SWITCH_ETHEREUM_CHAIN = "wallet_switchEthereumChain"
}
export declare enum DEFAULT_EIP_155_EVENTS {
    ETH_CHAIN_CHANGED = "chainChanged",
    ETH_ACCOUNTS_CHANGED = "accountsChanged"
}
export declare const getNamespacesFromChains: (chains: string[]) => string[];
export declare const getSupportedMethodsByNamespace: (namespace: string) => DEFAULT_EIP155_METHODS[];
export declare const getSupportedEventsByNamespace: (namespace: string) => DEFAULT_EIP_155_EVENTS[];
export declare const getRequiredNamespaces: (chains: string[]) => ProposalTypes.RequiredNamespaces;
export declare const getWalletConnectV2Settings: (namespace: ChainNamespaceType, chainIds: string[], projectID: string) => Promise<{
    adapterSettings: IAdapterSettings;
    loginSettings: EngineTypes.ConnectParams;
}>;
