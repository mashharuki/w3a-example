{
  "version": 3,
  "sources": ["../../@web3auth/openlogin-adapter/node_modules/@toruslabs/openlogin-utils/dist/openloginUtils.esm.js", "../../@toruslabs/openlogin/dist/openlogin.esm.js", "../../@toruslabs/base-session-manager/dist/baseSessionManager.esm.js", "../../@toruslabs/openlogin-session-manager/dist/openloginSessionManager.esm.js", "../../@toruslabs/openlogin/node_modules/@toruslabs/openlogin-utils/dist/openloginUtils.esm.js", "../../@toruslabs/secure-pub-sub/dist/securePubSub.esm.js", "../../@web3auth/openlogin-adapter/dist/openloginAdapter.esm.js"],
  "sourcesContent": ["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport base64urlLib from 'base64url';\nimport _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport { TORUS_SAPPHIRE_NETWORK, TORUS_LEGACY_NETWORK } from '@toruslabs/constants';\nexport { TORUS_LEGACY_NETWORK, TORUS_SAPPHIRE_NETWORK } from '@toruslabs/constants';\nimport Color from 'color';\n\nconst base64url = base64urlLib;\nfunction safebtoa(str) {\n  return base64url.encode(str);\n}\nfunction safeatob(str) {\n  // Going backwards: from bytestream, to percent-encoding, to original string.\n  return base64url.decode(str);\n}\nfunction base64toJSON(b64str) {\n  return JSON.parse(base64url.decode(b64str));\n}\nfunction jsonToBase64(json) {\n  return base64url.encode(JSON.stringify(json));\n}\nfunction storageAvailable(type) {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage;\n  try {\n    storage = window[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (err) {\n    const error = err;\n    return error && (\n    // everything except Firefox\n    error.code === 22 ||\n    // Firefox\n    error.code === 1014 ||\n    // test name field too, because code might not be present\n    // everything except Firefox\n    error.name === \"QuotaExceededError\" ||\n    // Firefox\n    error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n    // acknowledge QuotaExceededError only if there's something already stored\n    storageExists && storageLength !== 0;\n  }\n}\n\nclass MemoryStore {\n  constructor() {\n    _defineProperty(this, \"store\", new Map());\n  }\n  getItem(key) {\n    return this.store.get(key) || null;\n  }\n  setItem(key, value) {\n    this.store.set(key, value);\n  }\n  removeItem(key) {\n    this.store.delete(key);\n  }\n}\nclass BrowserStorage {\n  constructor(storeKey, storage) {\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"_storeKey\", void 0);\n    this.storage = storage;\n    this._storeKey = storeKey;\n    try {\n      if (!storage.getItem(storeKey)) {\n        this.resetStore();\n      }\n    } catch (error) {\n      // Storage is not available\n    }\n  }\n  static getInstance(key) {\n    let storageKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"local\";\n    if (!this.instanceMap.has(key)) {\n      let storage;\n      if (storageKey === \"local\" && storageAvailable(\"localStorage\")) {\n        storage = window.localStorage;\n      } else if (storageKey === \"session\" && storageAvailable(\"sessionStorage\")) {\n        storage = window.sessionStorage;\n      } else {\n        storage = new MemoryStore();\n      }\n      this.instanceMap.set(key, new this(key, storage));\n    }\n    return this.instanceMap.get(key);\n  }\n  toJSON() {\n    return this.storage.getItem(this._storeKey);\n  }\n  resetStore() {\n    const currStore = this.getStore();\n    this.storage.removeItem(this._storeKey);\n    return currStore;\n  }\n  getStore() {\n    return JSON.parse(this.storage.getItem(this._storeKey) || \"{}\");\n  }\n  get(key) {\n    const store = JSON.parse(this.storage.getItem(this._storeKey) || \"{}\");\n    return store[key];\n  }\n  set(key, value) {\n    const store = JSON.parse(this.storage.getItem(this._storeKey) || \"{}\");\n    store[key] = value;\n    this.storage.setItem(this._storeKey, JSON.stringify(store));\n  }\n}\n_defineProperty(BrowserStorage, \"instanceMap\", new Map());\n\nconst storeKey = \"openlogin_store\";\nconst UX_MODE = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\"\n};\nconst OPENLOGIN_NETWORK = _objectSpread(_objectSpread({}, TORUS_SAPPHIRE_NETWORK), TORUS_LEGACY_NETWORK);\nconst SUPPORTED_KEY_CURVES = {\n  SECP256K1: \"secp256k1\",\n  ED25519: \"ed25519\"\n};\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  FARCASTER: \"farcaster\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n  SMS_PASSWORDLESS: \"sms_passwordless\",\n  WEBAUTHN: \"webauthn\",\n  JWT: \"jwt\"\n};\nconst MFA_LEVELS = {\n  DEFAULT: \"default\",\n  OPTIONAL: \"optional\",\n  MANDATORY: \"mandatory\",\n  NONE: \"none\"\n};\nconst OPENLOGIN_ACTIONS = {\n  LOGIN: \"login\",\n  ENABLE_MFA: \"enable_mfa\",\n  MANAGE_MFA: \"manage_mfa\",\n  MODIFY_SOCIAL_FACTOR: \"modify_social_factor\"\n};\nconst BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  STAGING: \"staging\",\n  TESTING: \"testing\"\n};\n\n/**\n * {@label loginProviderType}\n */\n\n// autocomplete workaround https://github.com/microsoft/TypeScript/issues/29729\n\nconst LANGUAGES = {\n  en: \"en\",\n  ja: \"ja\",\n  ko: \"ko\",\n  de: \"de\",\n  zh: \"zh\",\n  es: \"es\",\n  fr: \"fr\",\n  pt: \"pt\",\n  nl: \"nl\",\n  tr: \"tr\"\n};\nconst LANGUAGE_MAP = {\n  en: \"english\",\n  ja: \"japanese\",\n  ko: \"korean\",\n  de: \"german\",\n  zh: \"mandarin\",\n  es: \"spanish\",\n  fr: \"french\",\n  pt: \"portuguese\",\n  nl: \"dutch\",\n  tr: \"turkish\"\n};\nconst THEME_MODES = {\n  light: \"light\",\n  dark: \"dark\",\n  auto: \"auto\"\n};\nconst MFA_FACTOR = {\n  DEVICE: \"deviceShareFactor\",\n  BACKUP_SHARE: \"backUpShareFactor\",\n  SOCIAL_BACKUP: \"socialBackupFactor\",\n  PASSWORD: \"passwordFactor\",\n  PASSKEYS: \"passkeysFactor\",\n  AUTHENTICATOR: \"authenticatorFactor\"\n};\n\nfunction getColorsList() {\n  let colorsAmount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;\n  let colorsShiftAmount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;\n  let mixColor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"black\";\n  let rotate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let saturation = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 20;\n  let mainColor = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"#0346ff\";\n  const colorsList = [];\n  let step;\n  for (step = 0; step < colorsAmount; step += 1) {\n    colorsList.push(Color(mainColor).rotate((step + 1) / colorsAmount * -rotate).saturate((step + 1) / colorsAmount * (saturation / 100)).mix(Color(mixColor), colorsShiftAmount / 100 * (step + 1) / colorsAmount).hex());\n  }\n  return colorsList;\n}\nfunction generateWhiteLabelTheme(primary) {\n  const darkSet = getColorsList(3, 50, \"black\", 0, 20, primary);\n  const lightSet = getColorsList(6, 85, \"white\", 0, 20, primary);\n  return [...darkSet.reverse(), primary, ...lightSet];\n}\nfunction applyWhiteLabelTheme(rootElement, theme) {\n  if (theme.primary) {\n    const themeSet = generateWhiteLabelTheme(theme.primary);\n    rootElement.style.setProperty(\"--app-primary-900\", themeSet[0]);\n    rootElement.style.setProperty(\"--app-primary-800\", themeSet[1]);\n    rootElement.style.setProperty(\"--app-primary-700\", themeSet[2]);\n    rootElement.style.setProperty(\"--app-primary-600\", themeSet[3]);\n    rootElement.style.setProperty(\"--app-primary-500\", themeSet[4]);\n    rootElement.style.setProperty(\"--app-primary-400\", themeSet[5]);\n    rootElement.style.setProperty(\"--app-primary-300\", themeSet[6]);\n    rootElement.style.setProperty(\"--app-primary-200\", themeSet[7]);\n    rootElement.style.setProperty(\"--app-primary-100\", themeSet[8]);\n    rootElement.style.setProperty(\"--app-primary-50\", themeSet[9]);\n  }\n  if (theme.onPrimary) {\n    rootElement.style.setProperty(\"--app-on-primary\", theme.onPrimary);\n  }\n}\n\nexport { BUILD_ENV, BrowserStorage, LANGUAGES, LANGUAGE_MAP, LOGIN_PROVIDER, MFA_FACTOR, MFA_LEVELS, MemoryStore, OPENLOGIN_ACTIONS, OPENLOGIN_NETWORK, SUPPORTED_KEY_CURVES, THEME_MODES, UX_MODE, applyWhiteLabelTheme, base64toJSON, base64url, generateWhiteLabelTheme, getColorsList, jsonToBase64, safeatob, safebtoa, storageAvailable, storeKey };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { CustomError } from 'ts-custom-error';\nimport { getLogger } from 'loglevel';\nimport _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport { SESSION_SERVER } from '@toruslabs/constants';\nimport { OpenloginSessionManager } from '@toruslabs/openlogin-session-manager';\nimport { base64url, safeatob, LOGIN_PROVIDER, OPENLOGIN_NETWORK, BUILD_ENV, TORUS_LEGACY_NETWORK, UX_MODE, BrowserStorage, OPENLOGIN_ACTIONS, jsonToBase64 } from '@toruslabs/openlogin-utils';\nimport { SecurePubSub } from '@toruslabs/secure-pub-sub';\nimport { EventEmitter } from 'events';\nimport { getPublic, sign } from '@toruslabs/eccrypto';\nimport { keccak256 } from '@toruslabs/metadata-helpers';\nimport bowser from 'bowser';\n\nclass OpenloginError extends CustomError {\n  constructor(code, message) {\n    // takes care of stack and proto\n    super(message);\n    _defineProperty(this, \"code\", void 0);\n    _defineProperty(this, \"message\", void 0);\n    this.code = code;\n    this.message = message || \"\";\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", {\n      value: \"OpenloginError\"\n    });\n  }\n  toJSON() {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message\n    };\n  }\n  toString() {\n    return JSON.stringify(this.toJSON());\n  }\n}\nclass InitializationError extends OpenloginError {\n  constructor(code, message) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", {\n      value: \"InitializationError\"\n    });\n  }\n  static fromCode(code) {\n    let extraMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    return new InitializationError(code, `${InitializationError.messages[code]}, ${extraMessage}`);\n  }\n  static invalidParams() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return InitializationError.fromCode(5001, extraMessage);\n  }\n  static notInitialized() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return InitializationError.fromCode(5002, extraMessage);\n  }\n}\n\n/**\n * login errors\n */\n_defineProperty(InitializationError, \"messages\", {\n  5000: \"Custom\",\n  5001: \"Invalid constructor params\",\n  5002: \"SDK not initialized. please call init first\"\n});\nclass LoginError extends OpenloginError {\n  constructor(code, message) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", {\n      value: \"LoginError\"\n    });\n  }\n  static fromCode(code) {\n    let extraMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    return new LoginError(code, `${LoginError.messages[code]}, ${extraMessage}`);\n  }\n  static invalidLoginParams() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return LoginError.fromCode(5111, extraMessage);\n  }\n  static userNotLoggedIn() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return LoginError.fromCode(5112, extraMessage);\n  }\n  static popupClosed() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return LoginError.fromCode(5113, extraMessage);\n  }\n  static loginFailed() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return LoginError.fromCode(5114, extraMessage);\n  }\n  static popupBlocked() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return LoginError.fromCode(5115, extraMessage);\n  }\n  static mfaAlreadyEnabled() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return LoginError.fromCode(5116, extraMessage);\n  }\n  static mfaNotEnabled() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return LoginError.fromCode(5117, extraMessage);\n  }\n}\n_defineProperty(LoginError, \"messages\", {\n  5000: \"Custom\",\n  5111: \"Invalid login params\",\n  5112: \"User not logged in.\",\n  5113: \"login popup has been closed by the user\",\n  5114: \"Login failed\",\n  5115: \"Popup was blocked. Please call this function as soon as user clicks button or use redirect mode\",\n  5116: \"MFA already enabled\",\n  5117: \"MFA not yet enabled. Please call `enableMFA` first\"\n});\n\nconst loglevel = getLogger(\"openlogin\");\nloglevel.setLevel(\"error\");\n\n// don't use destructuring for process.env cause it messes up webpack env plugin\nconst version = \"8.2.1\";\nasync function whitelistUrl(clientId, appKey, origin) {\n  const appKeyBuf = Buffer.from(appKey.padStart(64, \"0\"), \"hex\");\n  if (base64url.encode(getPublic(appKeyBuf)) !== clientId) throw new Error(\"appKey mismatch\");\n  const sig = await sign(appKeyBuf, keccak256(Buffer.from(origin, \"utf8\")));\n  return base64url.encode(sig);\n}\nfunction getHashQueryParams() {\n  let replaceUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  const result = {};\n  const queryUrlParams = new URLSearchParams(window.location.search.slice(1));\n  queryUrlParams.forEach((value, key) => {\n    if (key !== \"b64Params\") {\n      result[key] = value;\n    }\n  });\n  const queryResult = queryUrlParams.get(\"b64Params\");\n  if (queryResult) {\n    try {\n      const queryParams = JSON.parse(safeatob(queryResult));\n      Object.keys(queryParams).forEach(key => {\n        result[key] = queryParams[key];\n      });\n    } catch (error) {\n      loglevel.error(error);\n    }\n  }\n  const hashUrlParams = new URLSearchParams(window.location.hash.substring(1));\n  hashUrlParams.forEach((value, key) => {\n    if (key !== \"b64Params\") {\n      result[key] = value;\n    }\n  });\n  const hashResult = hashUrlParams.get(\"b64Params\");\n  if (hashResult) {\n    try {\n      const hashParams = JSON.parse(safeatob(hashResult));\n      Object.keys(hashParams).forEach(key => {\n        result[key] = hashParams[key];\n      });\n    } catch (error) {\n      loglevel.error(error);\n    }\n  }\n  if (replaceUrl) {\n    const cleanUrl = new URL(window.location.origin + window.location.pathname);\n    // https://dapp.com/#b64Params=asacsdnvdfv&state=sldjvndfkjvn&dappValue=sdjvndf\n    if (queryUrlParams.size > 0) {\n      queryUrlParams.delete(\"error\");\n      queryUrlParams.delete(\"state\");\n      queryUrlParams.delete(\"b64Params\");\n      queryUrlParams.delete(\"sessionNamespace\");\n      cleanUrl.search = queryUrlParams.toString();\n    }\n    if (hashUrlParams.size > 0) {\n      hashUrlParams.delete(\"error\");\n      hashUrlParams.delete(\"state\");\n      hashUrlParams.delete(\"b64Params\");\n      hashUrlParams.delete(\"sessionNamespace\");\n      cleanUrl.hash = hashUrlParams.toString();\n    }\n    window.history.replaceState(_objectSpread(_objectSpread({}, window.history.state), {}, {\n      as: cleanUrl.href,\n      url: cleanUrl.href\n    }), \"\", cleanUrl.href);\n  }\n  return result;\n}\nfunction constructURL(params) {\n  const {\n    baseURL,\n    query,\n    hash\n  } = params;\n  const url = new URL(baseURL);\n  if (query) {\n    Object.keys(query).forEach(key => {\n      url.searchParams.append(key, query[key]);\n    });\n  }\n  if (hash) {\n    const h = new URL(constructURL({\n      baseURL,\n      query: hash\n    })).searchParams.toString();\n    url.hash = h;\n  }\n  return url.toString();\n}\nfunction getPopupFeatures() {\n  if (typeof window === \"undefined\") return \"\";\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\nfunction isMobileOrTablet() {\n  if (typeof window === \"undefined\") return false;\n  const browser = bowser.getParser(window.navigator.userAgent);\n  const platform = browser.getPlatform();\n  return platform.type === bowser.PLATFORMS_MAP.tablet || platform.type === bowser.PLATFORMS_MAP.mobile;\n}\nfunction getTimeout(loginProvider) {\n  if ((loginProvider === LOGIN_PROVIDER.FACEBOOK || loginProvider === LOGIN_PROVIDER.LINE) && isMobileOrTablet()) {\n    return 1000 * 60 * 5; // 5 minutes to finish the login\n  }\n  return 1000 * 10; // 10 seconds\n}\n\nclass PopupHandler extends EventEmitter {\n  constructor(_ref) {\n    let {\n      url,\n      target,\n      features,\n      timeout = 30000\n    } = _ref;\n    super();\n    _defineProperty(this, \"url\", void 0);\n    _defineProperty(this, \"target\", void 0);\n    _defineProperty(this, \"features\", void 0);\n    _defineProperty(this, \"window\", void 0);\n    _defineProperty(this, \"windowTimer\", void 0);\n    _defineProperty(this, \"iClosedWindow\", void 0);\n    _defineProperty(this, \"timeout\", void 0);\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this.timeout = timeout;\n    this._setupTimer();\n  }\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n        setTimeout(() => {\n          if (!this.iClosedWindow) {\n            this.emit(\"close\");\n          }\n          this.iClosedWindow = false;\n          this.window = undefined;\n        }, this.timeout);\n      }\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n  open() {\n    var _this$window;\n    this.window = window.open(this.url, this.target, this.features);\n    if (!this.window) throw LoginError.popupBlocked();\n    if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n  }\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url);\n    } else {\n      window.location.href = this.url;\n    }\n  }\n  async listenOnChannel(loginId) {\n    const securePubSub = new SecurePubSub();\n    const data = await securePubSub.subscribe(loginId);\n    this.close();\n    securePubSub.cleanup();\n    const parsedData = JSON.parse(data);\n    if (parsedData.error) {\n      return {\n        error: parsedData.error,\n        state: parsedData.state\n      };\n    }\n    return parsedData.data;\n  }\n}\n\nclass OpenLogin {\n  constructor(options) {\n    _defineProperty(this, \"state\", {});\n    _defineProperty(this, \"options\", void 0);\n    _defineProperty(this, \"sessionManager\", void 0);\n    _defineProperty(this, \"currentStorage\", void 0);\n    _defineProperty(this, \"_storageBaseKey\", \"openlogin_store\");\n    _defineProperty(this, \"dappState\", void 0);\n    _defineProperty(this, \"addVersionInUrls\", true);\n    if (!options.clientId) throw InitializationError.invalidParams(\"clientId is required\");\n    if (!options.network) options.network = OPENLOGIN_NETWORK.SAPPHIRE_MAINNET;\n    if (!options.buildEnv) options.buildEnv = BUILD_ENV.PRODUCTION;\n    if (options.buildEnv === BUILD_ENV.DEVELOPMENT || options.buildEnv === BUILD_ENV.TESTING || options.sdkUrl) this.addVersionInUrls = false;\n    if (!options.sdkUrl && !options.useMpc) {\n      if (options.buildEnv === BUILD_ENV.DEVELOPMENT) {\n        options.sdkUrl = \"http://localhost:3000\";\n        options.dashboardUrl = \"http://localhost:5173/wallet/account\";\n      } else if (options.buildEnv === BUILD_ENV.STAGING) {\n        options.sdkUrl = \"https://staging-auth.web3auth.io\";\n        options.dashboardUrl = \"https://staging-account.web3auth.io/wallet/account\";\n      } else if (options.buildEnv === BUILD_ENV.TESTING) {\n        options.sdkUrl = \"https://develop-auth.web3auth.io\";\n        options.dashboardUrl = \"https://develop-account.web3auth.io/wallet/account\";\n      } else {\n        options.sdkUrl = \"https://auth.web3auth.io\";\n        options.dashboardUrl = \"https://account.web3auth.io/wallet/account\";\n      }\n    }\n    if (options.useMpc && !options.sdkUrl) {\n      if (Object.values(TORUS_LEGACY_NETWORK).includes(options.network)) throw InitializationError.invalidParams(\"MPC is not supported on legacy networks, please use sapphire_devnet or sapphire_mainnet.\");\n      if (options.buildEnv === BUILD_ENV.DEVELOPMENT) {\n        options.sdkUrl = \"http://localhost:3000\";\n      } else if (options.buildEnv === BUILD_ENV.STAGING) {\n        options.sdkUrl = \"https://staging-mpc-auth.web3auth.io\";\n      } else if (options.buildEnv === BUILD_ENV.TESTING) {\n        options.sdkUrl = \"https://develop-mpc-auth.web3auth.io\";\n      } else {\n        options.sdkUrl = \"https://mpc-auth.web3auth.io\";\n      }\n    }\n    if (!options.redirectUrl && typeof window !== \"undefined\") {\n      options.redirectUrl = `${window.location.protocol}//${window.location.host}${window.location.pathname}`;\n    }\n    if (!options.uxMode) options.uxMode = UX_MODE.REDIRECT;\n    if (typeof options.replaceUrlOnRedirect !== \"boolean\") options.replaceUrlOnRedirect = true;\n    if (!options.originData) options.originData = {};\n    if (!options.whiteLabel) options.whiteLabel = {};\n    if (!options.loginConfig) options.loginConfig = {};\n    if (!options.mfaSettings) options.mfaSettings = {};\n    if (!options.storageServerUrl) options.storageServerUrl = SESSION_SERVER;\n    if (!options.storageKey) options.storageKey = \"local\";\n    if (!options.webauthnTransports) options.webauthnTransports = [\"internal\"];\n    if (!options.sessionTime) options.sessionTime = 86400;\n    this.options = options;\n  }\n  get privKey() {\n    if (this.options.useMpc) return this.state.factorKey || \"\";\n    return this.state.privKey ? this.state.privKey.padStart(64, \"0\") : \"\";\n  }\n  get coreKitKey() {\n    return this.state.coreKitKey ? this.state.coreKitKey.padStart(64, \"0\") : \"\";\n  }\n  get ed25519PrivKey() {\n    return this.state.ed25519PrivKey ? this.state.ed25519PrivKey.padStart(128, \"0\") : \"\";\n  }\n  get coreKitEd25519Key() {\n    return this.state.coreKitEd25519PrivKey ? this.state.coreKitEd25519PrivKey.padStart(128, \"0\") : \"\";\n  }\n  get sessionId() {\n    return this.state.sessionId || \"\";\n  }\n  get sessionNamespace() {\n    return this.options.sessionNamespace || \"\";\n  }\n  get appState() {\n    return this.state.userInfo.appState || this.dappState || \"\";\n  }\n  get baseUrl() {\n    // testing and develop don't have versioning\n    if (!this.addVersionInUrls) return `${this.options.sdkUrl}`;\n    return `${this.options.sdkUrl}/v${version.split(\".\")[0]}`;\n  }\n  async init() {\n    // get sessionNamespace from the redirect result.\n    const params = getHashQueryParams(this.options.replaceUrlOnRedirect);\n    if (params.sessionNamespace) this.options.sessionNamespace = params.sessionNamespace;\n    const storageKey = this.options.sessionNamespace ? `${this._storageBaseKey}_${this.options.sessionNamespace}` : this._storageBaseKey;\n    this.currentStorage = BrowserStorage.getInstance(storageKey, this.options.storageKey);\n    const sessionId = this.currentStorage.get(\"sessionId\");\n    this.sessionManager = new OpenloginSessionManager({\n      sessionServerBaseUrl: this.options.storageServerUrl,\n      sessionNamespace: this.options.sessionNamespace,\n      sessionTime: this.options.sessionTime,\n      sessionId\n    });\n    if (this.options.network === OPENLOGIN_NETWORK.TESTNET || this.options.network === OPENLOGIN_NETWORK.SAPPHIRE_DEVNET) {\n      // using console log because it shouldn't be affected by loglevel config\n      // eslint-disable-next-line no-console\n      console.log(`%c WARNING! You are on ${this.options.network}. Please set network: 'mainnet' or 'sapphire_mainnet' in production`, \"color: #FF0000\");\n    }\n    if (this.options.buildEnv !== BUILD_ENV.PRODUCTION) {\n      // using console log because it shouldn't be affected by loglevel config\n      // eslint-disable-next-line no-console\n      console.log(`%c WARNING! You are using build env ${this.options.buildEnv}. Please set buildEnv: 'production' in production`, \"color: #FF0000\");\n    }\n    if (params.error) {\n      this.dappState = params.state;\n      throw LoginError.loginFailed(params.error);\n    }\n    if (params.sessionId) {\n      this.currentStorage.set(\"sessionId\", params.sessionId);\n      this.sessionManager.sessionId = params.sessionId;\n    }\n    if (this.sessionManager.sessionId) {\n      const data = await this._authorizeSession();\n      // Fill state with correct info from session\n      // If session is invalid all the data is unset here.\n      this.updateState(data);\n      if (Object.keys(data).length === 0) {\n        // If session is invalid, unset the sessionId from localStorage.\n        this.currentStorage.set(\"sessionId\", \"\");\n      }\n    }\n  }\n  async login(params) {\n    if (!params.loginProvider) throw LoginError.invalidLoginParams(`loginProvider is required`);\n\n    // in case of redirect mode, redirect url will be dapp specified\n    // in case of popup mode, redirect url will be sdk specified\n    const defaultParams = {\n      redirectUrl: this.options.redirectUrl\n    };\n    const loginParams = _objectSpread(_objectSpread({\n      loginProvider: params.loginProvider\n    }, defaultParams), params);\n    const dataObject = {\n      actionType: OPENLOGIN_ACTIONS.LOGIN,\n      options: this.options,\n      params: loginParams\n    };\n    const result = await this.openloginHandler(`${this.baseUrl}/start`, dataObject, getTimeout(params.loginProvider));\n    if (this.options.uxMode === UX_MODE.REDIRECT) return null;\n    if (result.error) {\n      this.dappState = result.state;\n      throw LoginError.loginFailed(result.error);\n    }\n    this.sessionManager.sessionId = result.sessionId;\n    this.options.sessionNamespace = result.sessionNamespace;\n    this.currentStorage.set(\"sessionId\", result.sessionId);\n    await this.rehydrateSession();\n    return {\n      privKey: this.privKey\n    };\n  }\n  async logout() {\n    if (!this.sessionManager.sessionId) throw LoginError.userNotLoggedIn();\n    await this.sessionManager.invalidateSession();\n    this.updateState({\n      privKey: \"\",\n      coreKitKey: \"\",\n      coreKitEd25519PrivKey: \"\",\n      ed25519PrivKey: \"\",\n      walletKey: \"\",\n      oAuthPrivateKey: \"\",\n      tKey: \"\",\n      metadataNonce: \"\",\n      keyMode: undefined,\n      userInfo: {\n        name: \"\",\n        profileImage: \"\",\n        dappShare: \"\",\n        idToken: \"\",\n        oAuthIdToken: \"\",\n        oAuthAccessToken: \"\",\n        appState: \"\",\n        email: \"\",\n        verifier: \"\",\n        verifierId: \"\",\n        aggregateVerifier: \"\",\n        typeOfLogin: \"\",\n        isMfaEnabled: false\n      },\n      authToken: \"\",\n      sessionId: \"\",\n      factorKey: \"\",\n      signatures: [],\n      tssShareIndex: -1,\n      tssPubKey: \"\",\n      tssShare: \"\",\n      tssNonce: -1\n    });\n    this.currentStorage.set(\"sessionId\", \"\");\n  }\n  async enableMFA(params) {\n    var _this$state$userInfo;\n    if (!this.sessionId) throw LoginError.userNotLoggedIn();\n    if (this.state.userInfo.isMfaEnabled) throw LoginError.mfaAlreadyEnabled();\n    // in case of redirect mode, redirect url will be dapp specified\n    // in case of popup mode, redirect url will be sdk specified\n    const defaultParams = {\n      redirectUrl: this.options.redirectUrl\n    };\n    const dataObject = {\n      actionType: OPENLOGIN_ACTIONS.ENABLE_MFA,\n      options: this.options,\n      params: _objectSpread(_objectSpread(_objectSpread({}, defaultParams), params), {}, {\n        loginProvider: this.state.userInfo.typeOfLogin,\n        extraLoginOptions: {\n          login_hint: this.state.userInfo.verifierId\n        },\n        mfaLevel: \"mandatory\"\n      }),\n      sessionId: this.sessionId\n    };\n    const result = await this.openloginHandler(`${this.baseUrl}/start`, dataObject, getTimeout(dataObject.params.loginProvider));\n    if (this.options.uxMode === UX_MODE.REDIRECT) return null;\n    if (result.error) {\n      this.dappState = result.state;\n      throw LoginError.loginFailed(result.error);\n    }\n    this.sessionManager.sessionId = result.sessionId;\n    this.options.sessionNamespace = result.sessionNamespace;\n    this.currentStorage.set(\"sessionId\", result.sessionId);\n    await this.rehydrateSession();\n    return Boolean((_this$state$userInfo = this.state.userInfo) === null || _this$state$userInfo === void 0 ? void 0 : _this$state$userInfo.isMfaEnabled);\n  }\n  async manageMFA(params) {\n    if (!this.sessionId) throw LoginError.userNotLoggedIn();\n    if (!this.state.userInfo.isMfaEnabled) throw LoginError.mfaNotEnabled();\n\n    // in case of redirect mode, redirect url will be dapp specified\n    // in case of popup mode, redirect url will be sdk specified\n    const defaultParams = {\n      redirectUrl: this.options.dashboardUrl,\n      dappUrl: `${window.location.origin}${window.location.pathname}`\n    };\n    const loginId = OpenloginSessionManager.generateRandomSessionKey();\n    const dataObject = {\n      actionType: OPENLOGIN_ACTIONS.MANAGE_MFA,\n      options: this.options,\n      params: _objectSpread(_objectSpread(_objectSpread({}, defaultParams), params), {}, {\n        loginProvider: this.state.userInfo.typeOfLogin,\n        extraLoginOptions: {\n          login_hint: this.state.userInfo.verifierId\n        },\n        appState: jsonToBase64({\n          loginId\n        })\n      }),\n      sessionId: this.sessionId\n    };\n    this.createLoginSession(loginId, dataObject, dataObject.options.sessionTime, true);\n    const configParams = {\n      loginId,\n      sessionNamespace: this.options.sessionNamespace,\n      storageServerUrl: this.options.storageServerUrl\n    };\n    const loginUrl = constructURL({\n      baseURL: `${this.baseUrl}/start`,\n      hash: {\n        b64Params: jsonToBase64(configParams)\n      }\n    });\n    window.open(loginUrl, \"_blank\");\n  }\n  async changeSocialFactor(params) {\n    if (!this.sessionId) throw LoginError.userNotLoggedIn();\n\n    // in case of redirect mode, redirect url will be dapp specified\n    // in case of popup mode, redirect url will be sdk specified\n    const defaultParams = {\n      redirectUrl: this.options.redirectUrl\n    };\n    const dataObject = {\n      actionType: OPENLOGIN_ACTIONS.MODIFY_SOCIAL_FACTOR,\n      options: this.options,\n      params: _objectSpread(_objectSpread({}, defaultParams), params),\n      sessionId: this.sessionId\n    };\n    const result = await this.openloginHandler(`${this.baseUrl}/start`, dataObject);\n    if (this.options.uxMode === UX_MODE.REDIRECT) return undefined;\n    if (result.error) return false;\n    return true;\n  }\n  getUserInfo() {\n    if (!this.sessionManager.sessionId) {\n      throw LoginError.userNotLoggedIn();\n    }\n    return this.state.userInfo;\n  }\n  async createLoginSession(loginId, data) {\n    let timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 600;\n    let skipAwait = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    if (!this.sessionManager) throw InitializationError.notInitialized();\n    const loginSessionMgr = new OpenloginSessionManager({\n      sessionServerBaseUrl: data.options.storageServerUrl,\n      sessionNamespace: data.options.sessionNamespace,\n      sessionTime: timeout,\n      // each login key must be used with 10 mins (might be used at the end of popup redirect)\n      sessionId: loginId\n    });\n    const promise = loginSessionMgr.createSession(JSON.parse(JSON.stringify(data)));\n    if (data.options.uxMode === UX_MODE.REDIRECT && !skipAwait) {\n      await promise;\n    }\n  }\n  async _authorizeSession() {\n    try {\n      if (!this.sessionManager.sessionId) return {};\n      const result = await this.sessionManager.authorizeSession();\n      return result;\n    } catch (err) {\n      loglevel.error(\"authorization failed\", err);\n      return {};\n    }\n  }\n  updateState(data) {\n    this.state = _objectSpread(_objectSpread({}, this.state), data);\n  }\n  async rehydrateSession() {\n    const result = await this._authorizeSession();\n    this.updateState(result);\n  }\n  async openloginHandler(url, dataObject) {\n    let popupTimeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1000 * 10;\n    const loginId = OpenloginSessionManager.generateRandomSessionKey();\n    await this.createLoginSession(loginId, dataObject);\n    const configParams = {\n      loginId,\n      sessionNamespace: this.options.sessionNamespace,\n      storageServerUrl: this.options.storageServerUrl\n    };\n    if (this.options.uxMode === UX_MODE.REDIRECT) {\n      const loginUrl = constructURL({\n        baseURL: url,\n        hash: {\n          b64Params: jsonToBase64(configParams)\n        }\n      });\n      window.location.href = loginUrl;\n      return undefined;\n    }\n    const loginUrl = constructURL({\n      baseURL: url,\n      hash: {\n        b64Params: jsonToBase64(configParams)\n      }\n    });\n    const currentWindow = new PopupHandler({\n      url: loginUrl,\n      timeout: popupTimeout\n    });\n    return new Promise((resolve, reject) => {\n      currentWindow.on(\"close\", () => {\n        reject(LoginError.popupClosed());\n      });\n      currentWindow.listenOnChannel(loginId).then(resolve).catch(reject);\n      try {\n        currentWindow.open();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\nexport { InitializationError, LoginError, OpenloginError, constructURL, OpenLogin as default, getHashQueryParams, getPopupFeatures, getTimeout, isMobileOrTablet, loglevel, version, whitelistUrl };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { patch, put, post, get } from '@toruslabs/http-helpers';\n\nclass BaseSessionManager {\n  constructor() {\n    _defineProperty(this, \"sessionId\", void 0);\n  }\n  checkSessionParams() {\n    if (!this.sessionId) throw new Error(\"Session id is required\");\n    this.sessionId = this.sessionId.padStart(64, \"0\");\n  }\n\n  /**\n   * Common handler method for making an http request.\n   *\n   * Note: Embed all the query parameters in the path itself.\n   */\n  request(_ref) {\n    let {\n      method = \"GET\",\n      url,\n      data = {},\n      headers = {}\n    } = _ref;\n    const options = {\n      headers\n    };\n    switch (method) {\n      case \"GET\":\n        return get(url, options);\n      case \"POST\":\n        return post(url, data, options);\n      case \"PUT\":\n        return put(url, data, options);\n      case \"PATCH\":\n        return patch(url, data, options);\n    }\n    throw new Error(\"Invalid method type\");\n  }\n}\n\nexport { BaseSessionManager };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { BaseSessionManager } from '@toruslabs/base-session-manager';\nimport { generatePrivate, getPublic, sign } from '@toruslabs/eccrypto';\nimport { encryptData, keccak256, decryptData } from '@toruslabs/metadata-helpers';\n\nconst DEFAULT_SESSION_TIMEOUT = 86400;\nclass OpenloginSessionManager extends BaseSessionManager {\n  constructor() {\n    let {\n      sessionServerBaseUrl,\n      sessionNamespace,\n      sessionTime,\n      sessionId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    _defineProperty(this, \"sessionServerBaseUrl\", \"https://session.web3auth.io\");\n    _defineProperty(this, \"sessionNamespace\", void 0);\n    _defineProperty(this, \"sessionTime\", DEFAULT_SESSION_TIMEOUT);\n    _defineProperty(this, \"sessionId\", \"\");\n    if (sessionServerBaseUrl) {\n      this.sessionServerBaseUrl = sessionServerBaseUrl;\n    }\n    if (sessionNamespace) this.sessionNamespace = sessionNamespace;\n    if (sessionTime) this.sessionTime = sessionTime;\n    if (sessionId) this.sessionId = sessionId.padStart(64, \"0\");\n  }\n  static generateRandomSessionKey() {\n    return generatePrivate().toString(\"hex\").padStart(64, \"0\");\n  }\n  async createSession(data) {\n    super.checkSessionParams();\n    const privKey = Buffer.from(this.sessionId, \"hex\");\n    const pubKey = getPublic(privKey).toString(\"hex\");\n    const encData = await encryptData(this.sessionId, data);\n    const signature = (await sign(privKey, keccak256(Buffer.from(encData, \"utf8\")))).toString(\"hex\");\n    const body = {\n      key: pubKey,\n      data: encData,\n      signature,\n      namespace: this.sessionNamespace,\n      timeout: this.sessionTime\n    };\n    await super.request({\n      method: \"POST\",\n      url: `${this.sessionServerBaseUrl}/store/set`,\n      data: body\n    });\n    return this.sessionId;\n  }\n  async authorizeSession() {\n    super.checkSessionParams();\n    const pubkey = getPublic(Buffer.from(this.sessionId, \"hex\")).toString(\"hex\");\n    const url = new URL(`${this.sessionServerBaseUrl}/store/get`);\n    url.searchParams.append(\"key\", pubkey);\n    if (this.sessionNamespace) url.searchParams.append(\"namespace\", this.sessionNamespace);\n    const result = await super.request({\n      url: url.toString()\n    });\n    if (!result.message) {\n      throw new Error(\"Session Expired or Invalid public key\");\n    }\n    const response = await decryptData(this.sessionId, result.message);\n    if (response.error) {\n      throw new Error(\"There was an error decrypting data.\");\n    }\n    return response;\n  }\n  async updateSession(data) {\n    super.checkSessionParams();\n    const privKey = Buffer.from(this.sessionId, \"hex\");\n    const pubKey = getPublic(privKey).toString(\"hex\");\n    const encData = await encryptData(this.sessionId, data);\n    const signature = (await sign(privKey, keccak256(Buffer.from(encData, \"utf8\")))).toString(\"hex\");\n    const body = {\n      key: pubKey,\n      data: encData,\n      signature,\n      namespace: this.sessionNamespace\n    };\n    await super.request({\n      method: \"PUT\",\n      url: `${this.sessionServerBaseUrl}/store/update`,\n      data: body\n    });\n  }\n  async invalidateSession() {\n    super.checkSessionParams();\n    const privKey = Buffer.from(this.sessionId, \"hex\");\n    const pubKey = getPublic(privKey).toString(\"hex\");\n    const encData = await encryptData(this.sessionId, {});\n    const signature = (await sign(privKey, keccak256(Buffer.from(encData, \"utf8\")))).toString(\"hex\");\n    const data = {\n      key: pubKey,\n      data: encData,\n      signature,\n      namespace: this.sessionNamespace,\n      timeout: 1\n    };\n    await super.request({\n      method: \"POST\",\n      url: `${this.sessionServerBaseUrl}/store/set`,\n      data\n    });\n    this.sessionId = \"\";\n    return true;\n  }\n}\n\nexport { OpenloginSessionManager };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport base64urlLib from 'base64url';\nimport _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport { TORUS_SAPPHIRE_NETWORK, TORUS_LEGACY_NETWORK } from '@toruslabs/constants';\nexport { TORUS_LEGACY_NETWORK, TORUS_SAPPHIRE_NETWORK } from '@toruslabs/constants';\nimport Color from 'color';\n\nconst base64url = base64urlLib;\nfunction safebtoa(str) {\n  return base64url.encode(str);\n}\nfunction safeatob(str) {\n  // Going backwards: from bytestream, to percent-encoding, to original string.\n  return base64url.decode(str);\n}\nfunction base64toJSON(b64str) {\n  return JSON.parse(base64url.decode(b64str));\n}\nfunction jsonToBase64(json) {\n  return base64url.encode(JSON.stringify(json));\n}\nfunction storageAvailable(type) {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage;\n  try {\n    storage = window[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (err) {\n    const error = err;\n    return error && (\n    // everything except Firefox\n    error.code === 22 ||\n    // Firefox\n    error.code === 1014 ||\n    // test name field too, because code might not be present\n    // everything except Firefox\n    error.name === \"QuotaExceededError\" ||\n    // Firefox\n    error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n    // acknowledge QuotaExceededError only if there's something already stored\n    storageExists && storageLength !== 0;\n  }\n}\n\nclass MemoryStore {\n  constructor() {\n    _defineProperty(this, \"store\", new Map());\n  }\n  getItem(key) {\n    return this.store.get(key) || null;\n  }\n  setItem(key, value) {\n    this.store.set(key, value);\n  }\n  removeItem(key) {\n    this.store.delete(key);\n  }\n}\nclass BrowserStorage {\n  constructor(storeKey, storage) {\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"_storeKey\", void 0);\n    this.storage = storage;\n    this._storeKey = storeKey;\n    try {\n      if (!storage.getItem(storeKey)) {\n        this.resetStore();\n      }\n    } catch (error) {\n      // Storage is not available\n    }\n  }\n  static getInstance(key) {\n    let storageKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"local\";\n    if (!this.instanceMap.has(key)) {\n      let storage;\n      if (storageKey === \"local\" && storageAvailable(\"localStorage\")) {\n        storage = window.localStorage;\n      } else if (storageKey === \"session\" && storageAvailable(\"sessionStorage\")) {\n        storage = window.sessionStorage;\n      } else {\n        storage = new MemoryStore();\n      }\n      this.instanceMap.set(key, new this(key, storage));\n    }\n    return this.instanceMap.get(key);\n  }\n  toJSON() {\n    return this.storage.getItem(this._storeKey);\n  }\n  resetStore() {\n    const currStore = this.getStore();\n    this.storage.removeItem(this._storeKey);\n    return currStore;\n  }\n  getStore() {\n    return JSON.parse(this.storage.getItem(this._storeKey) || \"{}\");\n  }\n  get(key) {\n    const store = JSON.parse(this.storage.getItem(this._storeKey) || \"{}\");\n    return store[key];\n  }\n  set(key, value) {\n    const store = JSON.parse(this.storage.getItem(this._storeKey) || \"{}\");\n    store[key] = value;\n    this.storage.setItem(this._storeKey, JSON.stringify(store));\n  }\n}\n_defineProperty(BrowserStorage, \"instanceMap\", new Map());\n\nconst storeKey = \"openlogin_store\";\nconst UX_MODE = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\"\n};\nconst OPENLOGIN_NETWORK = _objectSpread(_objectSpread({}, TORUS_SAPPHIRE_NETWORK), TORUS_LEGACY_NETWORK);\nconst SUPPORTED_KEY_CURVES = {\n  SECP256K1: \"secp256k1\",\n  ED25519: \"ed25519\"\n};\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  FARCASTER: \"farcaster\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n  SMS_PASSWORDLESS: \"sms_passwordless\",\n  WEBAUTHN: \"webauthn\",\n  JWT: \"jwt\"\n};\nconst MFA_LEVELS = {\n  DEFAULT: \"default\",\n  OPTIONAL: \"optional\",\n  MANDATORY: \"mandatory\",\n  NONE: \"none\"\n};\nconst OPENLOGIN_ACTIONS = {\n  LOGIN: \"login\",\n  ENABLE_MFA: \"enable_mfa\",\n  MANAGE_MFA: \"manage_mfa\",\n  MODIFY_SOCIAL_FACTOR: \"modify_social_factor\"\n};\nconst BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  STAGING: \"staging\",\n  TESTING: \"testing\"\n};\n\n/**\n * {@label loginProviderType}\n */\n\n// autocomplete workaround https://github.com/microsoft/TypeScript/issues/29729\n\nconst LANGUAGES = {\n  en: \"en\",\n  ja: \"ja\",\n  ko: \"ko\",\n  de: \"de\",\n  zh: \"zh\",\n  es: \"es\",\n  fr: \"fr\",\n  pt: \"pt\",\n  nl: \"nl\",\n  tr: \"tr\"\n};\nconst LANGUAGE_MAP = {\n  en: \"english\",\n  ja: \"japanese\",\n  ko: \"korean\",\n  de: \"german\",\n  zh: \"mandarin\",\n  es: \"spanish\",\n  fr: \"french\",\n  pt: \"portuguese\",\n  nl: \"dutch\",\n  tr: \"turkish\"\n};\nconst THEME_MODES = {\n  light: \"light\",\n  dark: \"dark\",\n  auto: \"auto\"\n};\nconst MFA_FACTOR = {\n  DEVICE: \"deviceShareFactor\",\n  BACKUP_SHARE: \"backUpShareFactor\",\n  SOCIAL_BACKUP: \"socialBackupFactor\",\n  PASSWORD: \"passwordFactor\",\n  PASSKEYS: \"passkeysFactor\",\n  AUTHENTICATOR: \"authenticatorFactor\"\n};\n\nfunction getColorsList() {\n  let colorsAmount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;\n  let colorsShiftAmount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;\n  let mixColor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"black\";\n  let rotate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let saturation = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 20;\n  let mainColor = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"#0346ff\";\n  const colorsList = [];\n  let step;\n  for (step = 0; step < colorsAmount; step += 1) {\n    colorsList.push(Color(mainColor).rotate((step + 1) / colorsAmount * -rotate).saturate((step + 1) / colorsAmount * (saturation / 100)).mix(Color(mixColor), colorsShiftAmount / 100 * (step + 1) / colorsAmount).hex());\n  }\n  return colorsList;\n}\nfunction generateWhiteLabelTheme(primary) {\n  const darkSet = getColorsList(3, 50, \"black\", 0, 20, primary);\n  const lightSet = getColorsList(6, 85, \"white\", 0, 20, primary);\n  return [...darkSet.reverse(), primary, ...lightSet];\n}\nfunction applyWhiteLabelTheme(rootElement, theme) {\n  if (theme.primary) {\n    const themeSet = generateWhiteLabelTheme(theme.primary);\n    rootElement.style.setProperty(\"--app-primary-900\", themeSet[0]);\n    rootElement.style.setProperty(\"--app-primary-800\", themeSet[1]);\n    rootElement.style.setProperty(\"--app-primary-700\", themeSet[2]);\n    rootElement.style.setProperty(\"--app-primary-600\", themeSet[3]);\n    rootElement.style.setProperty(\"--app-primary-500\", themeSet[4]);\n    rootElement.style.setProperty(\"--app-primary-400\", themeSet[5]);\n    rootElement.style.setProperty(\"--app-primary-300\", themeSet[6]);\n    rootElement.style.setProperty(\"--app-primary-200\", themeSet[7]);\n    rootElement.style.setProperty(\"--app-primary-100\", themeSet[8]);\n    rootElement.style.setProperty(\"--app-primary-50\", themeSet[9]);\n  }\n  if (theme.onPrimary) {\n    rootElement.style.setProperty(\"--app-on-primary\", theme.onPrimary);\n  }\n}\n\nexport { BUILD_ENV, BrowserStorage, LANGUAGES, LANGUAGE_MAP, LOGIN_PROVIDER, MFA_FACTOR, MFA_LEVELS, MemoryStore, OPENLOGIN_ACTIONS, OPENLOGIN_NETWORK, SUPPORTED_KEY_CURVES, THEME_MODES, UX_MODE, applyWhiteLabelTheme, base64toJSON, base64url, generateWhiteLabelTheme, getColorsList, jsonToBase64, safeatob, safebtoa, storageAvailable, storeKey };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { sign, getPublic } from '@toruslabs/eccrypto';\nimport { setLogLevel, post } from '@toruslabs/http-helpers';\nimport { keccak256, encryptData, decryptData } from '@toruslabs/metadata-helpers';\nimport { io } from 'socket.io-client';\nimport log$1 from 'loglevel';\n\nvar log = log$1.getLogger(\"SecurePubSub\");\n\nclass SecurePubSub {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _defineProperty(this, \"options\", void 0);\n    _defineProperty(this, \"SOCKET_CONN\", null);\n    this.options = options;\n    this.options.timeout = options.timeout || 600; // 10 mins is default timeout\n    this.options.serverUrl = options.serverUrl || \"https://session.web3auth.io\";\n    this.options.enableLogging = options.enableLogging || false;\n    this.options.namespace = options.namespace || \"\";\n    this.options.sameIpCheck = options.sameIpCheck || false;\n    this.options.sameOriginCheck = options.sameOriginCheck || false;\n    if (this.options.enableLogging) log.enableAll();else log.disableAll();\n  }\n  static setLogLevel(level) {\n    log.setLevel(level);\n    setLogLevel(level);\n  }\n  async publish(topic, message) {\n    const topicPrivKey = keccak256(Buffer.from(topic, \"utf8\"));\n    const encryptedData = await encryptData(topicPrivKey.toString(\"hex\"), message);\n    const signature = await sign(topicPrivKey, keccak256(Buffer.from(encryptedData, \"utf8\")));\n    const fetchBody = {\n      key: getPublic(topicPrivKey).toString(\"hex\"),\n      // already padded\n      data: encryptedData,\n      signature: signature.toString(\"hex\"),\n      timeout: this.options.timeout,\n      namespace: this.options.namespace,\n      sameIpCheck: this.options.sameIpCheck,\n      sameOriginCheck: this.options.sameOriginCheck\n    };\n    return post(`${this.options.serverUrl}/channel/set`, fetchBody);\n  }\n  async subscribe(topic) {\n    let isPromisePending = true;\n    const topicPrivKey = keccak256(Buffer.from(topic, \"utf8\"));\n    const topicPubKey = getPublic(topicPrivKey).toString(\"hex\"); // already padded\n    const currentSocketConnection = this.getSocketConnection();\n    if (currentSocketConnection.connected) {\n      log.debug(\"already connected with socket\");\n      currentSocketConnection.emit(\"check_auth_status\", topicPubKey, {\n        namespace: this.options.namespace,\n        sameIpCheck: this.options.sameIpCheck,\n        sameOriginCheck: this.options.sameOriginCheck\n      });\n    } else {\n      currentSocketConnection.once(\"connect\", () => {\n        log.debug(\"connected with socket\");\n        currentSocketConnection.emit(\"check_auth_status\", topicPubKey, {\n          namespace: this.options.namespace,\n          sameIpCheck: this.options.sameIpCheck,\n          sameOriginCheck: this.options.sameOriginCheck\n        });\n      });\n    }\n    const reconnect = () => {\n      currentSocketConnection.once(\"connect\", async () => {\n        log.debug(\"connected with socket using reconnect\");\n        if (isPromisePending) currentSocketConnection.emit(\"check_auth_status\", topicPubKey, {\n          namespace: this.options.namespace,\n          sameIpCheck: this.options.sameIpCheck,\n          sameOriginCheck: this.options.sameOriginCheck\n        });\n      });\n    };\n    const visibilityListener = () => {\n      if (!isPromisePending) document.removeEventListener(\"visibilitychange\", visibilityListener);\n      // if not connected, then wait for connection and ping server for latest msg.\n      if (!currentSocketConnection.connected && document.visibilityState === \"visible\") {\n        reconnect();\n      }\n    };\n    const disconnectListener = () => {\n      log.debug(\"socket disconnected\", isPromisePending);\n      if (isPromisePending) {\n        log.error(\"socket disconnected unexpectedly, reconnecting socket\");\n        reconnect();\n      } else {\n        currentSocketConnection.removeListener(\"disconnect\", disconnectListener);\n      }\n    };\n    currentSocketConnection.on(\"disconnect\", disconnectListener);\n    const returnPromise = new Promise((resolve, reject) => {\n      const listener = async ev => {\n        try {\n          const decData = await decryptData(topicPrivKey.toString(\"hex\"), ev);\n          log.info(\"got data\", decData);\n          resolve(decData);\n        } catch (error) {\n          log.error(error);\n          reject(error);\n        } finally {\n          isPromisePending = false;\n          document.removeEventListener(\"visibilitychange\", visibilityListener);\n        }\n      };\n      log.info(\"listening to\", `${topicPubKey}_success`);\n      currentSocketConnection.once(`${topicPubKey}_success`, listener);\n    });\n    if (typeof document !== \"undefined\") document.addEventListener(\"visibilitychange\", visibilityListener);\n    return returnPromise;\n  }\n  cleanup() {\n    if (this.SOCKET_CONN) {\n      this.SOCKET_CONN.disconnect();\n      this.SOCKET_CONN = null;\n    }\n  }\n  getSocketConnection() {\n    if (this.SOCKET_CONN) return this.SOCKET_CONN;\n    const localSocketConnection = io(this.options.serverUrl, {\n      transports: [\"websocket\", \"polling\"],\n      // use WebSocket first, if available\n      withCredentials: true,\n      reconnectionDelayMax: 10000,\n      reconnectionAttempts: 10\n    });\n    localSocketConnection.on(\"connect_error\", err => {\n      // revert to classic upgrade\n      localSocketConnection.io.opts.transports = [\"polling\", \"websocket\"];\n      log.error(\"connect error\", err);\n    });\n    localSocketConnection.on(\"connect\", async () => {\n      const {\n        engine\n      } = localSocketConnection.io;\n      log.debug(\"initially connected to\", engine.transport.name); // in most cases, prints \"polling\"\n      engine.once(\"upgrade\", () => {\n        // called when the transport is upgraded (i.e. from HTTP long-polling to WebSocket)\n        log.debug(\"upgraded\", engine.transport.name); // in most cases, prints \"websocket\"\n      });\n      engine.once(\"close\", reason => {\n        // called when the underlying connection is closed\n        log.debug(\"connection closed\", reason);\n      });\n    });\n    localSocketConnection.on(\"error\", err => {\n      log.error(\"socket errored\", err);\n      localSocketConnection.disconnect();\n    });\n    this.SOCKET_CONN = localSocketConnection;\n    return this.SOCKET_CONN;\n  }\n}\n\nexport { SecurePubSub };\n", "import { OPENLOGIN_NETWORK, UX_MODE, SUPPORTED_KEY_CURVES } from '@toruslabs/openlogin-utils';\nexport * from '@toruslabs/openlogin-utils';\nimport _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport OpenLogin from '@toruslabs/openlogin';\nimport { BaseAdapter, WALLET_ADAPTERS, ADAPTER_NAMESPACES, ADAPTER_CATEGORY, ADAPTER_STATUS, CHAIN_NAMESPACES, WalletInitializationError, log, ADAPTER_EVENTS, WalletLoginError, Web3AuthError } from '@web3auth/base';\nimport merge from 'lodash.merge';\n\nconst getOpenloginDefaultOptions = () => {\n  return {\n    adapterSettings: {\n      network: OPENLOGIN_NETWORK.SAPPHIRE_MAINNET,\n      clientId: \"\",\n      uxMode: UX_MODE.POPUP\n    },\n    loginSettings: {},\n    privateKeyProvider: undefined\n  };\n};\n\nclass OpenloginAdapter extends BaseAdapter {\n  constructor(params = {}) {\n    super(params);\n    _defineProperty(this, \"name\", WALLET_ADAPTERS.OPENLOGIN);\n    _defineProperty(this, \"adapterNamespace\", ADAPTER_NAMESPACES.MULTICHAIN);\n    _defineProperty(this, \"type\", ADAPTER_CATEGORY.IN_APP);\n    _defineProperty(this, \"openloginInstance\", null);\n    _defineProperty(this, \"status\", ADAPTER_STATUS.NOT_READY);\n    _defineProperty(this, \"currentChainNamespace\", CHAIN_NAMESPACES.EIP155);\n    _defineProperty(this, \"privateKeyProvider\", null);\n    _defineProperty(this, \"openloginOptions\", void 0);\n    _defineProperty(this, \"loginSettings\", {\n      loginProvider: \"\"\n    });\n    this.setAdapterSettings(_objectSpread(_objectSpread({}, params.adapterSettings), {}, {\n      chainConfig: params.chainConfig,\n      clientId: params.clientId || \"\",\n      sessionTime: params.sessionTime,\n      web3AuthNetwork: params.web3AuthNetwork,\n      useCoreKitKey: params.useCoreKitKey,\n      privateKeyProvider: params.privateKeyProvider\n    }));\n    this.loginSettings = params.loginSettings || {\n      loginProvider: \"\"\n    };\n    this.privateKeyProvider = params.privateKeyProvider || null;\n  }\n  get chainConfigProxy() {\n    return this.chainConfig ? _objectSpread({}, this.chainConfig) : null;\n  }\n  get provider() {\n    if (this.status !== ADAPTER_STATUS.NOT_READY && this.privateKeyProvider) {\n      return this.privateKeyProvider;\n    }\n    return null;\n  }\n  set provider(_) {\n    throw new Error(\"Not implemented\");\n  }\n  async init(options) {\n    super.checkInitializationRequirements();\n    if (!this.clientId) throw WalletInitializationError.invalidParams(\"clientId is required before openlogin's initialization\");\n    if (!this.openloginOptions) throw WalletInitializationError.invalidParams(\"openloginOptions is required before openlogin's initialization\");\n    const isRedirectResult = this.openloginOptions.uxMode === UX_MODE.REDIRECT;\n    this.openloginOptions = _objectSpread(_objectSpread({}, this.openloginOptions), {}, {\n      replaceUrlOnRedirect: isRedirectResult,\n      useCoreKitKey: this.useCoreKitKey\n    });\n    this.openloginInstance = new OpenLogin(_objectSpread(_objectSpread({}, this.openloginOptions), {}, {\n      clientId: this.clientId,\n      network: this.openloginOptions.network || this.web3AuthNetwork || OPENLOGIN_NETWORK.SAPPHIRE_MAINNET\n    }));\n    log.debug(\"initializing openlogin adapter init\");\n    await this.openloginInstance.init();\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"chainConfig is required before initialization\");\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.OPENLOGIN);\n    try {\n      log.debug(\"initializing openlogin adapter\");\n      const finalPrivKey = this._getFinalPrivKey();\n      // connect only if it is redirect result or if connect (adapter is cached/already connected in same session) is true\n      if (finalPrivKey && (options.autoConnect || isRedirectResult)) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached openlogin provider\", error);\n      this.emit(\"ERRORED\", error);\n    }\n  }\n  async connect(params = {\n    loginProvider: \"\"\n  }) {\n    super.checkConnectionRequirements();\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, _objectSpread(_objectSpread({}, params), {}, {\n      adapter: WALLET_ADAPTERS.OPENLOGIN\n    }));\n    try {\n      await this.connectWithProvider(params);\n      return this.provider;\n    } catch (error) {\n      log.error(\"Failed to connect with openlogin provider\", error);\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      if (error !== null && error !== void 0 && error.message.includes(\"user closed popup\")) {\n        throw WalletLoginError.popupClosed();\n      } else if (error instanceof Web3AuthError) {\n        throw error;\n      }\n      throw WalletLoginError.connectionError(\"Failed to login with openlogin\", error);\n    }\n  }\n  async enableMFA(params = {\n    loginProvider: \"\"\n  }) {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.openloginInstance) throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n    try {\n      await this.openloginInstance.enableMFA(params);\n    } catch (error) {\n      log.error(\"Failed to enable MFA with openlogin provider\", error);\n      if (error instanceof Web3AuthError) {\n        throw error;\n      }\n      throw WalletLoginError.connectionError(\"Failed to enable MFA with openlogin\", error);\n    }\n  }\n  async disconnect(options = {\n    cleanup: false\n  }) {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.openloginInstance) throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n    await this.openloginInstance.logout();\n    if (options.cleanup) {\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.openloginInstance = null;\n      this.privateKeyProvider = null;\n    } else {\n      // ready to be connected again\n      this.status = ADAPTER_STATUS.READY;\n    }\n    this.rehydrated = false;\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n  async authenticateUser() {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    const userInfo = await this.getUserInfo();\n    return {\n      idToken: userInfo.idToken\n    };\n  }\n  async getUserInfo() {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.openloginInstance) throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n    const userInfo = this.openloginInstance.getUserInfo();\n    return userInfo;\n  }\n\n  // should be called only before initialization.\n  setAdapterSettings(adapterSettings) {\n    super.setAdapterSettings(adapterSettings);\n    const defaultOptions = getOpenloginDefaultOptions();\n    log.info(\"setting adapter settings\", adapterSettings);\n    this.openloginOptions = merge(defaultOptions.adapterSettings, this.openloginOptions, adapterSettings);\n    if (adapterSettings.web3AuthNetwork) {\n      this.openloginOptions.network = adapterSettings.web3AuthNetwork;\n    }\n    if (adapterSettings.privateKeyProvider) {\n      this.privateKeyProvider = adapterSettings.privateKeyProvider;\n    }\n  }\n  async addChain(chainConfig, init = false) {\n    var _this$privateKeyProvi;\n    super.checkAddChainRequirements(chainConfig, init);\n    (_this$privateKeyProvi = this.privateKeyProvider) === null || _this$privateKeyProvi === void 0 || _this$privateKeyProvi.addChain(chainConfig);\n    this.addChainConfig(chainConfig);\n  }\n  async switchChain(params, init = false) {\n    var _this$privateKeyProvi2;\n    super.checkSwitchChainRequirements(params, init);\n    await ((_this$privateKeyProvi2 = this.privateKeyProvider) === null || _this$privateKeyProvi2 === void 0 ? void 0 : _this$privateKeyProvi2.switchChain(params));\n    this.setAdapterSettings({\n      chainConfig: this.getChainConfig(params.chainId)\n    });\n  }\n  _getFinalPrivKey() {\n    if (!this.openloginInstance) return \"\";\n    let finalPrivKey = this.openloginInstance.privKey;\n    // coreKitKey is available only for custom verifiers by default\n    if (this.useCoreKitKey) {\n      // this is to check if the user has already logged in but coreKitKey is not available.\n      // when useCoreKitKey is set to true.\n      // This is to ensure that when there is no user session active, we don't throw an exception.\n      if (this.openloginInstance.privKey && !this.openloginInstance.coreKitKey) {\n        throw WalletLoginError.coreKitKeyNotFound();\n      }\n      finalPrivKey = this.openloginInstance.coreKitKey;\n    }\n    return finalPrivKey;\n  }\n  _getFinalEd25519PrivKey() {\n    if (!this.openloginInstance) return \"\";\n    let finalPrivKey = this.openloginInstance.ed25519PrivKey;\n    // coreKitKey is available only for custom verifiers by default\n    if (this.useCoreKitKey) {\n      // this is to check if the user has already logged in but coreKitKey is not available.\n      // when useCoreKitKey is set to true.\n      // This is to ensure that when there is no user session active, we don't throw an exception.\n      if (this.openloginInstance.ed25519PrivKey && !this.openloginInstance.coreKitEd25519Key) {\n        throw WalletLoginError.coreKitKeyNotFound();\n      }\n      finalPrivKey = this.openloginInstance.coreKitEd25519Key;\n    }\n    return finalPrivKey;\n  }\n  async connectWithProvider(params = {\n    loginProvider: \"\"\n  }) {\n    var _params$extraLoginOpt;\n    if (!this.privateKeyProvider) throw WalletInitializationError.invalidParams(\"PrivateKey Provider is required before initialization\");\n    if (!this.openloginInstance) throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n    const keyAvailable = this._getFinalPrivKey();\n    // if not logged in then login\n    if (!keyAvailable || (_params$extraLoginOpt = params.extraLoginOptions) !== null && _params$extraLoginOpt !== void 0 && _params$extraLoginOpt.id_token) {\n      var _params$extraLoginOpt2;\n      if (!this.loginSettings.curve) {\n        this.loginSettings.curve = this.currentChainNamespace === CHAIN_NAMESPACES.SOLANA ? SUPPORTED_KEY_CURVES.ED25519 : SUPPORTED_KEY_CURVES.SECP256K1;\n      }\n      if (!params.loginProvider && !this.loginSettings.loginProvider) throw WalletInitializationError.invalidParams(\"loginProvider is required for login\");\n      await this.openloginInstance.login(merge(this.loginSettings, params, {\n        extraLoginOptions: _objectSpread(_objectSpread({}, params.extraLoginOptions || {}), {}, {\n          login_hint: params.login_hint || ((_params$extraLoginOpt2 = params.extraLoginOptions) === null || _params$extraLoginOpt2 === void 0 ? void 0 : _params$extraLoginOpt2.login_hint)\n        })\n      }));\n    }\n    let finalPrivKey = this._getFinalPrivKey();\n    if (finalPrivKey) {\n      if (this.currentChainNamespace === CHAIN_NAMESPACES.SOLANA) {\n        finalPrivKey = this._getFinalEd25519PrivKey();\n      }\n      await this.privateKeyProvider.setupProvider(finalPrivKey);\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.emit(ADAPTER_EVENTS.CONNECTED, {\n        adapter: WALLET_ADAPTERS.OPENLOGIN,\n        reconnected: this.rehydrated,\n        provider: this.provider\n      });\n    }\n  }\n}\n\nexport { OpenloginAdapter, getOpenloginDefaultOptions };\n"],
  "mappings": "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",
  "names": ["base64urlLib", "storeKey", "Color", "import_loglevel", "import_base64url", "import_color", "base64url", "base64urlLib", "safeatob", "base64url", "jsonToBase64", "base64url", "storageAvailable", "MemoryStore", "BrowserStorage", "storeKey", "UX_MODE", "OPENLOGIN_NETWORK", "LOGIN_PROVIDER", "OPENLOGIN_ACTIONS", "BUILD_ENV", "log$1", "loglevel", "safeatob", "loglevel", "LOGIN_PROVIDER", "OPENLOGIN_NETWORK", "BUILD_ENV", "UX_MODE", "BrowserStorage", "OPENLOGIN_ACTIONS", "jsonToBase64", "loginUrl", "merge"]
}
