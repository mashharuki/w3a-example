{
  "version": 3,
  "sources": ["../../json-rpc-random-id/index.js", "../../@web3auth/base-provider/dist/baseProvider.esm.js"],
  "sourcesContent": ["module.exports = IdIterator\n\nfunction IdIterator(opts){\n  opts = opts || {}\n  var max = opts.max || Number.MAX_SAFE_INTEGER\n  var idCounter = typeof opts.start !== 'undefined' ? opts.start : Math.floor(Math.random() * max)\n\n  return function createRandomId () {\n    idCounter = idCounter % max\n    return idCounter++\n  }\n\n}", "import _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { BaseController, createEventEmitterProxy, createFetchMiddleware } from '@toruslabs/base-controllers';\nimport { rpcErrors, mergeMiddleware, JRPCEngine, providerFromEngine, providerErrors, createScaffoldMiddleware, createAsyncMiddleware } from '@toruslabs/openlogin-jrpc';\nimport { WalletInitializationError, WalletProviderError } from '@web3auth/base';\nimport getCreateRandomId from 'json-rpc-random-id';\n\nclass BaseProvider extends BaseController {\n  constructor({\n    config,\n    state\n  }) {\n    super({\n      config,\n      state\n    });\n    // should be Assigned in setupProvider\n    _defineProperty(this, \"_providerEngineProxy\", null);\n    if (!config.chainConfig) throw WalletInitializationError.invalidProviderConfigError(\"Please provide chainConfig\");\n    if (!config.chainConfig.chainId) throw WalletInitializationError.invalidProviderConfigError(\"Please provide chainId inside chainConfig\");\n    if (!config.chainConfig.rpcTarget) throw WalletInitializationError.invalidProviderConfigError(\"Please provide rpcTarget inside chainConfig\");\n    this.defaultState = {\n      chainId: \"loading\"\n    };\n    this.defaultConfig = {\n      chainConfig: config.chainConfig,\n      networks: {\n        [config.chainConfig.chainId]: config.chainConfig\n      }\n    };\n    super.initialize();\n  }\n  get currentChainConfig() {\n    return this.config.chainConfig;\n  }\n  get provider() {\n    return this._providerEngineProxy;\n  }\n  get chainId() {\n    return this.state.chainId;\n  }\n  set provider(_) {\n    throw new Error(\"Method not implemented.\");\n  }\n  async request(args) {\n    var _this$provider;\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw rpcErrors.invalidRequest({\n        message: WalletProviderError.invalidRequestArgs().message,\n        data: _objectSpread(_objectSpread({}, args || {}), {}, {\n          cause: WalletProviderError.invalidRequestArgs().message\n        })\n      });\n    }\n    const {\n      method,\n      params\n    } = args;\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw rpcErrors.invalidRequest({\n        message: WalletProviderError.invalidRequestMethod().message,\n        data: _objectSpread(_objectSpread({}, args || {}), {}, {\n          cause: WalletProviderError.invalidRequestMethod().message\n        })\n      });\n    }\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw rpcErrors.invalidRequest({\n        message: WalletProviderError.invalidRequestParams().message,\n        data: _objectSpread(_objectSpread({}, args || {}), {}, {\n          cause: WalletProviderError.invalidRequestParams().message\n        })\n      });\n    }\n    return (_this$provider = this.provider) === null || _this$provider === void 0 ? void 0 : _this$provider.request(args);\n  }\n  sendAsync(req, callback) {\n    if (callback) return this.send(req, callback);\n    return this.request(req);\n  }\n  send(req, callback) {\n    this.request(req).then(res => callback(null, {\n      result: res\n    })).catch(err => callback(err, null));\n  }\n  addChain(chainConfig) {\n    if (!chainConfig.chainId) throw rpcErrors.invalidParams(\"chainId is required\");\n    if (!chainConfig.rpcTarget) throw rpcErrors.invalidParams(\"chainId is required\");\n    this.configure({\n      networks: _objectSpread(_objectSpread({}, this.config.networks), {}, {\n        [chainConfig.chainId]: chainConfig\n      })\n    });\n  }\n  getChainConfig(chainId) {\n    var _this$config$networks;\n    const chainConfig = (_this$config$networks = this.config.networks) === null || _this$config$networks === void 0 ? void 0 : _this$config$networks[chainId];\n    if (!chainConfig) throw rpcErrors.invalidRequest(`Chain ${chainId} is not supported, please add chainConfig for it`);\n    return chainConfig;\n  }\n  updateProviderEngineProxy(provider) {\n    if (this._providerEngineProxy) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this._providerEngineProxy.setTarget(provider);\n    } else {\n      this._providerEngineProxy = createEventEmitterProxy(provider);\n    }\n  }\n  getProviderEngineProxy() {\n    return this._providerEngineProxy;\n  }\n}\n\nfunction createChainIdMiddleware(chainId) {\n  return (req, res, next, end) => {\n    if (req.method === \"chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\nfunction createProviderConfigMiddleware(providerConfig) {\n  return (req, res, next, end) => {\n    if (req.method === \"provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\nfunction createJsonRpcClient(providerConfig) {\n  const {\n    chainId,\n    rpcTarget\n  } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({\n    rpcTarget\n  });\n  const networkMiddleware = mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return {\n    networkMiddleware,\n    fetchMiddleware\n  };\n}\n\nvar _CommonJRPCProvider;\nclass CommonJRPCProvider extends BaseProvider {\n  constructor({\n    config,\n    state\n  }) {\n    super({\n      config,\n      state\n    });\n  }\n  async setupProvider() {\n    const {\n      networkMiddleware\n    } = createJsonRpcClient(this.config.chainConfig);\n    const engine = new JRPCEngine();\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    const newChainId = this.config.chainConfig.chainId;\n    if (this.state.chainId !== newChainId) {\n      this.emit(\"chainChanged\", newChainId);\n      this.emit(\"connect\", {\n        chainId: newChainId\n      });\n    }\n    this.update({\n      chainId: this.config.chainConfig.chainId\n    });\n  }\n  async switchChain(params) {\n    if (!this._providerEngineProxy) throw providerErrors.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\"\n    });\n    this.configure({\n      chainConfig\n    });\n    await this.setupProvider();\n  }\n  updateProviderEngineProxy(provider) {\n    if (this._providerEngineProxy) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this._providerEngineProxy.setTarget(provider);\n    } else {\n      this._providerEngineProxy = createEventEmitterProxy(provider);\n    }\n  }\n  getProviderEngineProxy() {\n    return this._providerEngineProxy;\n  }\n  lookupNetwork() {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n_CommonJRPCProvider = CommonJRPCProvider;\n_defineProperty(CommonJRPCProvider, \"getProviderInstance\", async params => {\n  const providerFactory = new _CommonJRPCProvider({\n    config: {\n      chainConfig: params.chainConfig\n    }\n  });\n  await providerFactory.setupProvider();\n  return providerFactory;\n});\n\nvar _CommonPrivateKeyProvider;\nclass CommonPrivateKeyProvider extends BaseProvider {\n  constructor({\n    config,\n    state\n  }) {\n    super({\n      config,\n      state\n    });\n    // should be Assigned in setupProvider\n    _defineProperty(this, \"_providerEngineProxy\", null);\n  }\n  get provider() {\n    return this._providerEngineProxy;\n  }\n  set provider(_) {\n    throw new Error(\"Method not implemented.\");\n  }\n  addChain(_) {\n    throw new Error(\"Method not implemented.\");\n  }\n  async setupProvider(privKey) {\n    const privKeyMiddleware = this.getPrivKeyMiddleware(privKey);\n    const engine = new JRPCEngine();\n    engine.push(privKeyMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n  }\n  updateProviderEngineProxy(provider) {\n    if (this._providerEngineProxy) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this._providerEngineProxy.setTarget(provider);\n    } else {\n      this._providerEngineProxy = createEventEmitterProxy(provider);\n    }\n  }\n  async switchChain(_) {\n    return Promise.resolve();\n  }\n  getProviderEngineProxy() {\n    return this._providerEngineProxy;\n  }\n  async lookupNetwork() {\n    return Promise.resolve(\"\");\n  }\n  getPrivKeyMiddleware(privKey) {\n    const middleware = {\n      getPrivatekey: async () => {\n        return privKey;\n      }\n    };\n    return this.createPrivKeyMiddleware(middleware);\n  }\n  createPrivKeyMiddleware({\n    getPrivatekey\n  }) {\n    async function getPrivatekeyHandler(_, res) {\n      res.result = await getPrivatekey();\n    }\n    return createScaffoldMiddleware({\n      private_key: createAsyncMiddleware(getPrivatekeyHandler)\n    });\n  }\n}\n_CommonPrivateKeyProvider = CommonPrivateKeyProvider;\n_defineProperty(CommonPrivateKeyProvider, \"getProviderInstance\", async params => {\n  const providerFactory = new _CommonPrivateKeyProvider({\n    config: {\n      chainConfig: params.chainConfig\n    }\n  });\n  await providerFactory.setupProvider(params.privKey);\n  return providerFactory;\n});\n\nconst createRandomId = getCreateRandomId();\n\nexport { BaseProvider, CommonJRPCProvider, CommonPrivateKeyProvider, createRandomId };\n"],
  "mappings": "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",
  "names": ["createRandomId", "getCreateRandomId"]
}
