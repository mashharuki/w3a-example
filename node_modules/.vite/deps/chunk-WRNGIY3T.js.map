{
  "version": 3,
  "sources": ["../../jsonschema/lib/helpers.js", "../../jsonschema/lib/attribute.js", "../../jsonschema/lib/scan.js", "../../jsonschema/lib/validator.js", "../../jsonschema/lib/index.js"],
  "sourcesContent": ["'use strict';\n\nvar uri = require('url');\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, path, name, argument) {\n  if(Array.isArray(path)){\n    this.path = path;\n    this.property = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else if(path !== undefined){\n    this.property = path;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    var id = schema.$id || schema.id;\n    this.schema = id || schema;\n  }\n  if (instance !== undefined) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.options = options;\n  this.path = ctx.path;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.throwFirst = options && options.throwFirst;\n  this.throwAll = options && options.throwAll;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.path);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.path, detail.name, detail.argument);\n  }\n\n  this.errors.push(err);\n  if (this.throwFirst) {\n    throw new ValidatorResultError(this);\n  }else if(this.throwError){\n    throw err;\n  }\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    this.errors = this.errors.concat(res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\nmodule.exports.ValidatorResultError = ValidatorResultError;\nfunction ValidatorResultError(result) {\n  if(Error.captureStackTrace){\n    Error.captureStackTrace(this, ValidatorResultError);\n  }\n  this.instance = result.instance;\n  this.schema = result.schema;\n  this.options = result.options;\n  this.errors = result.errors;\n}\nValidatorResultError.prototype = new Error();\nValidatorResultError.prototype.constructor = ValidatorResultError;\nValidatorResultError.prototype.name = \"Validation Error\";\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  {\n    constructor: {value: SchemaError, enumerable: false},\n    name: {value: 'SchemaError', enumerable: false},\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, path, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  if(Array.isArray(path)){\n    this.path = path;\n    this.propertyPath = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else{\n    this.propertyPath = path;\n  }\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var path = (propertyName===undefined) ? this.path : this.path.concat([propertyName]);\n  var id = schema.$id || schema.id;\n  var base = uri.resolve(this.base, id||'');\n  var ctx = new SchemaContext(schema, this.options, path, base, Object.create(this.schemas));\n  if(id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n};\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  // 7.3.1. Dates, Times, and Duration\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n  'duration': /P(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S)|\\d+(D|M(\\d+D)?|Y(\\d+M(\\d+D)?)?)(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S))?|\\d+W)/i,\n\n  // 7.3.2. Email Addresses\n  // TODO: fix the email production\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'idn-email': /^(\"(?:[!#-\\[\\]-\\u{10FFFF}]|\\\\[\\t -\\u{10FFFF}])*\"|[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*)@([!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*|\\[[!-Z\\^-\\u{10FFFF}]*\\])$/u,\n\n  // 7.3.3. Hostnames\n\n  // 7.3.4. IP Addresses\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  // FIXME whitespace is invalid\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n\n  // 7.3.5. Resource Identifiers\n  // TODO: A more accurate regular expression for \"uri\" goes:\n  // [A-Za-z][+\\-.0-9A-Za-z]*:((/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?)?#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])|/?%[0-9A-Fa-f]{2}|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*(#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?)?\n  'uri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'uri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/,\n  'iri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'iri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~-\\u{10FFFF}]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~-\\u{10FFFF}])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/u,\n  'uuid': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n\n  // 7.3.6. uri-template\n  'uri-template': /(%[0-9a-f]{2}|[!#$&(-;=?@\\[\\]_a-z~]|\\{[!#&+,./;=?@|]?(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?(,(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?)*\\})*/iu,\n\n  // 7.3.7. JSON Pointers\n  'json-pointer': /^(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*$/iu,\n  'relative-json-pointer': /^\\d+(#|(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*)$/iu,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n\n  // 7.3.8. regex\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n\n  // Other definitions\n  // \"style\" was removed from JSON Schema in draft-4 and is deprecated\n  'style': /[\\r\\n\\t ]*[^\\r\\n\\t ][^:]*:[\\r\\n\\t ]*[^\\r\\n\\t ;]*[\\r\\n\\t ]*;?/,\n  // \"color\" was removed from JSON Schema in draft-4 and is deprecated\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/,\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e);\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e);\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key]);\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n}\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n  // ~ must be encoded explicitly because hacks\n  // the slash is encoded by encodeURIComponent\n  return a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\nexports.isSchema = function isSchema(val){\n  return (typeof val === 'object' && val) || (typeof val === 'boolean');\n};\n\n", "'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'additionalItems': true,\n  'then': true,\n  'else': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true,\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      if(!v) return;\n      var id = v.$id || v.id;\n      return id ? ('<' + id + '>') : (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  var throwAll = options.throwAll;\n  options.throwError = false;\n  options.throwAll = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n  options.throwAll = throwAll;\n\n  if (!res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n    ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      var id = v.$id || v.id;\n      if(id) return '<' + id + '>';\n      return(v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var id = v.$id || v.id;\n      var msg = id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n    ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    var id = v.$id || v.id;\n    return id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates \"then\" or \"else\" depending on the result of validating \"if\"\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.if = function validateIf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) return null;\n  if (!helpers.isSchema(schema.if)) throw new Error('Expected \"if\" keyword to be a schema');\n  var ifValid = testSchemaNoThrow.call(this, instance, options, ctx, null, schema.if);\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var res;\n  if(ifValid){\n    if (schema.then === undefined) return;\n    if (!helpers.isSchema(schema.then)) throw new Error('Expected \"then\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.then, options, ctx.makeChild(schema.then));\n    result.importErrors(res);\n  }else{\n    if (schema.else === undefined) return;\n    if (!helpers.isSchema(schema.else)) throw new Error('Expected \"else\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.else, options, ctx.makeChild(schema.else));\n    result.importErrors(res);\n  }\n  return result;\n};\n\nfunction getEnumerableProperty(object, key){\n  // Determine if `key` shows up in `for(var key in object)`\n  // First test Object.hasOwnProperty.call as an optimization: that guarantees it does\n  if(Object.hasOwnProperty.call(object, key)) return object[key];\n  // Test `key in object` as an optimization; false means it won't\n  if(!(key in object)) return;\n  while( (object = Object.getPrototypeOf(object)) ){\n    if(Object.propertyIsEnumerable.call(object, key)) return object[key];\n  }\n}\n\n/**\n * Validates propertyNames\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.propertyNames = function validatePropertyNames (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var subschema = schema.propertyNames!==undefined ? schema.propertyNames : {};\n  if(!helpers.isSchema(subschema)) throw new SchemaError('Expected \"propertyNames\" to be a schema (object or boolean)');\n\n  for (var property in instance) {\n    if(getEnumerableProperty(instance, property) !== undefined){\n      var res = this.validateSchema(property, subschema, options, ctx.makeChild(subschema));\n      result.importErrors(res);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    var subschema = properties[property];\n    if(subschema===undefined){\n      continue;\n    }else if(subschema===null){\n      throw new SchemaError('Unexpected null, expected schema in \"properties\"');\n    }\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, subschema, options, ctx);\n    }\n    var prop = getEnumerableProperty(instance, property);\n    var res = this.validateSchema(prop, subschema, options, ctx.makeChild(subschema, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existence tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"is not allowed to have the additional property \" + JSON.stringify(property),\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var subschema = patternProperties[pattern];\n      if(subschema===undefined){\n        continue;\n      }else if(subschema===null){\n        throw new SchemaError('Unexpected null, expected schema in \"patternProperties\"');\n      }\n      try {\n        var regexp = new RegExp(pattern, 'u');\n      } catch(_e) {\n        // In the event the stricter handling causes an error, fall back on the forgiving handling\n        // DEPRECATED\n        regexp = new RegExp(pattern);\n      }\n      if (!regexp.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, subschema, options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], subschema, options, ctx.makeChild(subschema, property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.items===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    if(Array.isArray(schema.items)){\n      var items =  schema.items[i]===undefined ? schema.additionalItems : schema.items[i];\n    }else{\n      var items = schema.items;\n    }\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates the \"contains\" keyword\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.contains = function validateContains (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.contains===undefined) return;\n  if (!helpers.isSchema(schema.contains)) throw new Error('Expected \"contains\" keyword to be a schema');\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var count = instance.some(function (value, i) {\n    var res = self.validateSchema(value, schema.contains, options, ctx.makeChild(schema.contains, i));\n    return res.errors.length===0;\n  });\n  if(count===false){\n    result.addError({\n      name: 'contains',\n      argument: schema.contains,\n      message: \"must contain an item matching given schema\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    if(!(instance > schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than \" + schema.minimum,\n      });\n    }\n  } else {\n    if(!(instance >= schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than or equal to \" + schema.minimum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    if(!(instance < schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than \" + schema.maximum,\n      });\n    }\n  } else {\n    if(!(instance <= schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than or equal to \" + schema.maximum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMinimum = function validateExclusiveMinimum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMinimum, which is handled by the \"minimum\" keyword.\n  if(typeof schema.exclusiveMinimum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance > schema.exclusiveMinimum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMinimum',\n      argument: schema.exclusiveMinimum,\n      message: \"must be strictly greater than \" + schema.exclusiveMinimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMaximum = function validateExclusiveMaximum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMaximum, which is handled by the \"maximum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance < schema.exclusiveMaximum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMaximum',\n      argument: schema.exclusiveMaximum,\n      message: \"must be strictly less than \" + schema.exclusiveMaximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument),\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatibility with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\",\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(getEnumerableProperty(instance, n)===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var pattern = schema.pattern;\n  try {\n    var regexp = new RegExp(pattern, 'u');\n  } catch(_e) {\n    // In the event the stricter handling causes an error, fall back on the forgiving handling\n    // DEPRECATED\n    regexp = new RegExp(pattern);\n  }\n  if (!instance.match(regexp)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern.toString()),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (schema.uniqueItems!==true) return;\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var id = type && (type.$id || type.id);\n      var schemaId = id || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n", "\"use strict\";\n\nvar urilib = require('url');\nvar helpers = require('./helpers');\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var id = schema.$id || schema.id;\n    var ourBase = id ? urilib.resolve(baseuri, id) : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+ourBase+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', (Array.isArray(schema.items)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', (Array.isArray(schema.extends)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!Array.isArray(schemas)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n};\n", "'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  var base = urilib.resolve(options.base||anonymousBase, id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n", "'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidatorResultError = require('./helpers').ValidatorResultError;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n"],
  "mappings": "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",
  "names": ["ValidationError", "ValidatorResult", "SchemaError", "SchemaContext", "makeSuffix", "validateMultipleOfOrDivisbleBy", "schema", "Validator", "uri"]
}
