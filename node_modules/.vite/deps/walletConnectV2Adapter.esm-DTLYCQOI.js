import {
  BaseEvmAdapter
} from "./chunk-TEDY7VSB.js";
import {
  require_lodash as require_lodash2
} from "./chunk-WULWOCVO.js";
import {
  createChainSwitchMiddleware,
  createEthMiddleware,
  createJsonRpcClient
} from "./chunk-O4RLF2VJ.js";
import "./chunk-WRNGIY3T.js";
import {
  BaseProvider
} from "./chunk-5WR3TXTD.js";
import "./chunk-NPEP3W7F.js";
import "./chunk-WPDCR5GE.js";
import "./chunk-EUPFMFTY.js";
import "./chunk-K6CC7U6K.js";
import "./chunk-66NAV3HW.js";
import "./chunk-656XUC5S.js";
import {
  require_elliptic
} from "./chunk-2I7FAV7Q.js";
import {
  require_empty_module
} from "./chunk-ML3C5VKE.js";
import {
  ADAPTER_CATEGORY,
  ADAPTER_EVENTS,
  ADAPTER_NAMESPACES,
  ADAPTER_STATUS,
  CHAIN_NAMESPACES,
  JRPCEngine,
  WALLET_ADAPTERS,
  WalletInitializationError,
  WalletLoginError,
  Web3AuthError,
  getChainConfig,
  loglevel,
  providerErrors,
  providerFromEngine,
  require_lodash,
  rpcErrors
} from "./chunk-K4C2RABW.js";
import {
  require_events
} from "./chunk-GJBZJ4UL.js";
import {
  _defineProperty,
  _objectSpread2
} from "./chunk-MBKDGBSM.js";
import "./chunk-ATDVI3CM.js";
import "./chunk-CFIX2DL5.js";
import {
  __commonJS,
  __esm,
  __export,
  __reExport,
  __require,
  __toCommonJS,
  __toESM
} from "./chunk-256EKJAK.js";

// node_modules/tslib/tslib.es6.js
var tslib_es6_exports = {};
__export(tslib_es6_exports, {
  __assign: () => __assign,
  __asyncDelegator: () => __asyncDelegator,
  __asyncGenerator: () => __asyncGenerator,
  __asyncValues: () => __asyncValues,
  __await: () => __await,
  __awaiter: () => __awaiter,
  __classPrivateFieldGet: () => __classPrivateFieldGet,
  __classPrivateFieldSet: () => __classPrivateFieldSet,
  __createBinding: () => __createBinding,
  __decorate: () => __decorate,
  __exportStar: () => __exportStar,
  __extends: () => __extends,
  __generator: () => __generator,
  __importDefault: () => __importDefault,
  __importStar: () => __importStar,
  __makeTemplateObject: () => __makeTemplateObject,
  __metadata: () => __metadata,
  __param: () => __param,
  __read: () => __read,
  __rest: () => __rest,
  __spread: () => __spread,
  __spreadArrays: () => __spreadArrays,
  __values: () => __values
});
function __extends(d3, b3) {
  extendStatics(d3, b3);
  function __() {
    this.constructor = d3;
  }
  d3.prototype = b3 === null ? Object.create(b3) : (__.prototype = b3.prototype, new __());
}
function __rest(s3, e2) {
  var t = {};
  for (var p3 in s3) if (Object.prototype.hasOwnProperty.call(s3, p3) && e2.indexOf(p3) < 0)
    t[p3] = s3[p3];
  if (s3 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i4 = 0, p3 = Object.getOwnPropertySymbols(s3); i4 < p3.length; i4++) {
      if (e2.indexOf(p3[i4]) < 0 && Object.prototype.propertyIsEnumerable.call(s3, p3[i4]))
        t[p3[i4]] = s3[p3[i4]];
    }
  return t;
}
function __decorate(decorators, target, key, desc) {
  var c5 = arguments.length, r3 = c5 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d3;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i4 = decorators.length - 1; i4 >= 0; i4--) if (d3 = decorators[i4]) r3 = (c5 < 3 ? d3(r3) : c5 > 3 ? d3(target, key, r3) : d3(target, key)) || r3;
  return c5 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
}
function __param(paramIndex, decorator) {
  return function(target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P3, generator) {
  function adopt(value) {
    return value instanceof P3 ? value : new P3(function(resolve) {
      resolve(value);
    });
  }
  return new (P3 || (P3 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _3 = { label: 0, sent: function() {
    if (t[0] & 1) throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f4, y6, t, g3;
  return g3 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
    return this;
  }), g3;
  function verb(n5) {
    return function(v3) {
      return step([n5, v3]);
    };
  }
  function step(op) {
    if (f4) throw new TypeError("Generator is already executing.");
    while (_3) try {
      if (f4 = 1, y6 && (t = op[0] & 2 ? y6["return"] : op[0] ? y6["throw"] || ((t = y6["return"]) && t.call(y6), 0) : y6.next) && !(t = t.call(y6, op[1])).done) return t;
      if (y6 = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _3.label++;
          return { value: op[1], done: false };
        case 5:
          _3.label++;
          y6 = op[1];
          op = [0];
          continue;
        case 7:
          op = _3.ops.pop();
          _3.trys.pop();
          continue;
        default:
          if (!(t = _3.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _3 = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _3.label = op[1];
            break;
          }
          if (op[0] === 6 && _3.label < t[1]) {
            _3.label = t[1];
            t = op;
            break;
          }
          if (t && _3.label < t[2]) {
            _3.label = t[2];
            _3.ops.push(op);
            break;
          }
          if (t[2]) _3.ops.pop();
          _3.trys.pop();
          continue;
      }
      op = body.call(thisArg, _3);
    } catch (e2) {
      op = [6, e2];
      y6 = 0;
    } finally {
      f4 = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __createBinding(o4, m2, k4, k22) {
  if (k22 === void 0) k22 = k4;
  o4[k22] = m2[k4];
}
function __exportStar(m2, exports) {
  for (var p3 in m2) if (p3 !== "default" && !exports.hasOwnProperty(p3)) exports[p3] = m2[p3];
}
function __values(o4) {
  var s3 = typeof Symbol === "function" && Symbol.iterator, m2 = s3 && o4[s3], i4 = 0;
  if (m2) return m2.call(o4);
  if (o4 && typeof o4.length === "number") return {
    next: function() {
      if (o4 && i4 >= o4.length) o4 = void 0;
      return { value: o4 && o4[i4++], done: !o4 };
    }
  };
  throw new TypeError(s3 ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o4, n5) {
  var m2 = typeof Symbol === "function" && o4[Symbol.iterator];
  if (!m2) return o4;
  var i4 = m2.call(o4), r3, ar3 = [], e2;
  try {
    while ((n5 === void 0 || n5-- > 0) && !(r3 = i4.next()).done) ar3.push(r3.value);
  } catch (error) {
    e2 = { error };
  } finally {
    try {
      if (r3 && !r3.done && (m2 = i4["return"])) m2.call(i4);
    } finally {
      if (e2) throw e2.error;
    }
  }
  return ar3;
}
function __spread() {
  for (var ar3 = [], i4 = 0; i4 < arguments.length; i4++)
    ar3 = ar3.concat(__read(arguments[i4]));
  return ar3;
}
function __spreadArrays() {
  for (var s3 = 0, i4 = 0, il = arguments.length; i4 < il; i4++) s3 += arguments[i4].length;
  for (var r3 = Array(s3), k4 = 0, i4 = 0; i4 < il; i4++)
    for (var a4 = arguments[i4], j5 = 0, jl = a4.length; j5 < jl; j5++, k4++)
      r3[k4] = a4[j5];
  return r3;
}
function __await(v3) {
  return this instanceof __await ? (this.v = v3, this) : new __await(v3);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g3 = generator.apply(thisArg, _arguments || []), i4, q = [];
  return i4 = {}, verb("next"), verb("throw"), verb("return"), i4[Symbol.asyncIterator] = function() {
    return this;
  }, i4;
  function verb(n5) {
    if (g3[n5]) i4[n5] = function(v3) {
      return new Promise(function(a4, b3) {
        q.push([n5, v3, a4, b3]) > 1 || resume(n5, v3);
      });
    };
  }
  function resume(n5, v3) {
    try {
      step(g3[n5](v3));
    } catch (e2) {
      settle(q[0][3], e2);
    }
  }
  function step(r3) {
    r3.value instanceof __await ? Promise.resolve(r3.value.v).then(fulfill, reject) : settle(q[0][2], r3);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f4, v3) {
    if (f4(v3), q.shift(), q.length) resume(q[0][0], q[0][1]);
  }
}
function __asyncDelegator(o4) {
  var i4, p3;
  return i4 = {}, verb("next"), verb("throw", function(e2) {
    throw e2;
  }), verb("return"), i4[Symbol.iterator] = function() {
    return this;
  }, i4;
  function verb(n5, f4) {
    i4[n5] = o4[n5] ? function(v3) {
      return (p3 = !p3) ? { value: __await(o4[n5](v3)), done: n5 === "return" } : f4 ? f4(v3) : v3;
    } : f4;
  }
}
function __asyncValues(o4) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m2 = o4[Symbol.asyncIterator], i4;
  return m2 ? m2.call(o4) : (o4 = typeof __values === "function" ? __values(o4) : o4[Symbol.iterator](), i4 = {}, verb("next"), verb("throw"), verb("return"), i4[Symbol.asyncIterator] = function() {
    return this;
  }, i4);
  function verb(n5) {
    i4[n5] = o4[n5] && function(v3) {
      return new Promise(function(resolve, reject) {
        v3 = o4[n5](v3), settle(resolve, reject, v3.done, v3.value);
      });
    };
  }
  function settle(resolve, reject, d3, v3) {
    Promise.resolve(v3).then(function(v4) {
      resolve({ value: v4, done: d3 });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", { value: raw });
  } else {
    cooked.raw = raw;
  }
  return cooked;
}
function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) {
    for (var k4 in mod) if (Object.hasOwnProperty.call(mod, k4)) result[k4] = mod[k4];
  }
  result.default = mod;
  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : { default: mod };
}
function __classPrivateFieldGet(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }
  return privateMap.get(receiver);
}
function __classPrivateFieldSet(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }
  privateMap.set(receiver, value);
  return value;
}
var extendStatics, __assign;
var init_tslib_es6 = __esm({
  "node_modules/tslib/tslib.es6.js"() {
    extendStatics = function(d3, b3) {
      extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b4) {
        d4.__proto__ = b4;
      } || function(d4, b4) {
        for (var p3 in b4) if (b4.hasOwnProperty(p3)) d4[p3] = b4[p3];
      };
      return extendStatics(d3, b3);
    };
    __assign = function() {
      __assign = Object.assign || function __assign2(t) {
        for (var s3, i4 = 1, n5 = arguments.length; i4 < n5; i4++) {
          s3 = arguments[i4];
          for (var p3 in s3) if (Object.prototype.hasOwnProperty.call(s3, p3)) t[p3] = s3[p3];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/delay.js
var require_delay = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/delay.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.delay = void 0;
    function delay(timeout) {
      return new Promise((resolve) => {
        setTimeout(() => {
          resolve(true);
        }, timeout);
      });
    }
    exports.delay = delay;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/misc.js
var require_misc = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/misc.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ONE_THOUSAND = exports.ONE_HUNDRED = void 0;
    exports.ONE_HUNDRED = 100;
    exports.ONE_THOUSAND = 1e3;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/time.js
var require_time = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/time.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ONE_YEAR = exports.FOUR_WEEKS = exports.THREE_WEEKS = exports.TWO_WEEKS = exports.ONE_WEEK = exports.THIRTY_DAYS = exports.SEVEN_DAYS = exports.FIVE_DAYS = exports.THREE_DAYS = exports.ONE_DAY = exports.TWENTY_FOUR_HOURS = exports.TWELVE_HOURS = exports.SIX_HOURS = exports.THREE_HOURS = exports.ONE_HOUR = exports.SIXTY_MINUTES = exports.THIRTY_MINUTES = exports.TEN_MINUTES = exports.FIVE_MINUTES = exports.ONE_MINUTE = exports.SIXTY_SECONDS = exports.THIRTY_SECONDS = exports.TEN_SECONDS = exports.FIVE_SECONDS = exports.ONE_SECOND = void 0;
    exports.ONE_SECOND = 1;
    exports.FIVE_SECONDS = 5;
    exports.TEN_SECONDS = 10;
    exports.THIRTY_SECONDS = 30;
    exports.SIXTY_SECONDS = 60;
    exports.ONE_MINUTE = exports.SIXTY_SECONDS;
    exports.FIVE_MINUTES = exports.ONE_MINUTE * 5;
    exports.TEN_MINUTES = exports.ONE_MINUTE * 10;
    exports.THIRTY_MINUTES = exports.ONE_MINUTE * 30;
    exports.SIXTY_MINUTES = exports.ONE_MINUTE * 60;
    exports.ONE_HOUR = exports.SIXTY_MINUTES;
    exports.THREE_HOURS = exports.ONE_HOUR * 3;
    exports.SIX_HOURS = exports.ONE_HOUR * 6;
    exports.TWELVE_HOURS = exports.ONE_HOUR * 12;
    exports.TWENTY_FOUR_HOURS = exports.ONE_HOUR * 24;
    exports.ONE_DAY = exports.TWENTY_FOUR_HOURS;
    exports.THREE_DAYS = exports.ONE_DAY * 3;
    exports.FIVE_DAYS = exports.ONE_DAY * 5;
    exports.SEVEN_DAYS = exports.ONE_DAY * 7;
    exports.THIRTY_DAYS = exports.ONE_DAY * 30;
    exports.ONE_WEEK = exports.SEVEN_DAYS;
    exports.TWO_WEEKS = exports.ONE_WEEK * 2;
    exports.THREE_WEEKS = exports.ONE_WEEK * 3;
    exports.FOUR_WEEKS = exports.ONE_WEEK * 4;
    exports.ONE_YEAR = exports.ONE_DAY * 365;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/index.js
var require_constants = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_misc(), exports);
    tslib_1.__exportStar(require_time(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/convert.js
var require_convert = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/convert.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fromMiliseconds = exports.toMiliseconds = void 0;
    var constants_1 = require_constants();
    function toMiliseconds(seconds) {
      return seconds * constants_1.ONE_THOUSAND;
    }
    exports.toMiliseconds = toMiliseconds;
    function fromMiliseconds2(miliseconds) {
      return Math.floor(miliseconds / constants_1.ONE_THOUSAND);
    }
    exports.fromMiliseconds = fromMiliseconds2;
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/index.js
var require_utils = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_delay(), exports);
    tslib_1.__exportStar(require_convert(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/watch.js
var require_watch = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/watch.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Watch = void 0;
    var Watch = class {
      constructor() {
        this.timestamps = /* @__PURE__ */ new Map();
      }
      start(label) {
        if (this.timestamps.has(label)) {
          throw new Error(`Watch already started for label: ${label}`);
        }
        this.timestamps.set(label, { started: Date.now() });
      }
      stop(label) {
        const timestamp = this.get(label);
        if (typeof timestamp.elapsed !== "undefined") {
          throw new Error(`Watch already stopped for label: ${label}`);
        }
        const elapsed = Date.now() - timestamp.started;
        this.timestamps.set(label, { started: timestamp.started, elapsed });
      }
      get(label) {
        const timestamp = this.timestamps.get(label);
        if (typeof timestamp === "undefined") {
          throw new Error(`No timestamp found for label: ${label}`);
        }
        return timestamp;
      }
      elapsed(label) {
        const timestamp = this.get(label);
        const elapsed = timestamp.elapsed || Date.now() - timestamp.started;
        return elapsed;
      }
    };
    exports.Watch = Watch;
    exports.default = Watch;
  }
});

// node_modules/@walletconnect/time/dist/cjs/types/watch.js
var require_watch2 = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/types/watch.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IWatch = void 0;
    var IWatch = class {
    };
    exports.IWatch = IWatch;
  }
});

// node_modules/@walletconnect/time/dist/cjs/types/index.js
var require_types = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/types/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_watch2(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/index.js
var require_cjs = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_utils(), exports);
    tslib_1.__exportStar(require_watch(), exports);
    tslib_1.__exportStar(require_types(), exports);
    tslib_1.__exportStar(require_constants(), exports);
  }
});

// node_modules/quick-format-unescaped/index.js
var require_quick_format_unescaped = __commonJS({
  "node_modules/quick-format-unescaped/index.js"(exports, module) {
    "use strict";
    function tryStringify(o4) {
      try {
        return JSON.stringify(o4);
      } catch (e2) {
        return '"[Circular]"';
      }
    }
    module.exports = format;
    function format(f4, args, opts) {
      var ss2 = opts && opts.stringify || tryStringify;
      var offset = 1;
      if (typeof f4 === "object" && f4 !== null) {
        var len = args.length + offset;
        if (len === 1) return f4;
        var objects = new Array(len);
        objects[0] = ss2(f4);
        for (var index = 1; index < len; index++) {
          objects[index] = ss2(args[index]);
        }
        return objects.join(" ");
      }
      if (typeof f4 !== "string") {
        return f4;
      }
      var argLen = args.length;
      if (argLen === 0) return f4;
      var str = "";
      var a4 = 1 - offset;
      var lastPos = -1;
      var flen = f4 && f4.length || 0;
      for (var i4 = 0; i4 < flen; ) {
        if (f4.charCodeAt(i4) === 37 && i4 + 1 < flen) {
          lastPos = lastPos > -1 ? lastPos : 0;
          switch (f4.charCodeAt(i4 + 1)) {
            case 100:
            case 102:
              if (a4 >= argLen)
                break;
              if (args[a4] == null) break;
              if (lastPos < i4)
                str += f4.slice(lastPos, i4);
              str += Number(args[a4]);
              lastPos = i4 + 2;
              i4++;
              break;
            case 105:
              if (a4 >= argLen)
                break;
              if (args[a4] == null) break;
              if (lastPos < i4)
                str += f4.slice(lastPos, i4);
              str += Math.floor(Number(args[a4]));
              lastPos = i4 + 2;
              i4++;
              break;
            case 79:
            case 111:
            case 106:
              if (a4 >= argLen)
                break;
              if (args[a4] === void 0) break;
              if (lastPos < i4)
                str += f4.slice(lastPos, i4);
              var type = typeof args[a4];
              if (type === "string") {
                str += "'" + args[a4] + "'";
                lastPos = i4 + 2;
                i4++;
                break;
              }
              if (type === "function") {
                str += args[a4].name || "<anonymous>";
                lastPos = i4 + 2;
                i4++;
                break;
              }
              str += ss2(args[a4]);
              lastPos = i4 + 2;
              i4++;
              break;
            case 115:
              if (a4 >= argLen)
                break;
              if (lastPos < i4)
                str += f4.slice(lastPos, i4);
              str += String(args[a4]);
              lastPos = i4 + 2;
              i4++;
              break;
            case 37:
              if (lastPos < i4)
                str += f4.slice(lastPos, i4);
              str += "%";
              lastPos = i4 + 2;
              i4++;
              a4--;
              break;
          }
          ++a4;
        }
        ++i4;
      }
      if (lastPos === -1)
        return f4;
      else if (lastPos < flen) {
        str += f4.slice(lastPos);
      }
      return str;
    }
  }
});

// node_modules/pino/browser.js
var require_browser = __commonJS({
  "node_modules/pino/browser.js"(exports, module) {
    "use strict";
    var format = require_quick_format_unescaped();
    module.exports = pino;
    var _console = pfGlobalThisOrFallback().console || {};
    var stdSerializers = {
      mapHttpRequest: mock,
      mapHttpResponse: mock,
      wrapRequestSerializer: passthrough,
      wrapResponseSerializer: passthrough,
      wrapErrorSerializer: passthrough,
      req: mock,
      res: mock,
      err: asErrValue
    };
    function shouldSerialize(serialize, serializers) {
      if (Array.isArray(serialize)) {
        const hasToFilter = serialize.filter(function(k4) {
          return k4 !== "!stdSerializers.err";
        });
        return hasToFilter;
      } else if (serialize === true) {
        return Object.keys(serializers);
      }
      return false;
    }
    function pino(opts) {
      opts = opts || {};
      opts.browser = opts.browser || {};
      const transmit2 = opts.browser.transmit;
      if (transmit2 && typeof transmit2.send !== "function") {
        throw Error("pino: transmit option must have a send function");
      }
      const proto = opts.browser.write || _console;
      if (opts.browser.write) opts.browser.asObject = true;
      const serializers = opts.serializers || {};
      const serialize = shouldSerialize(opts.browser.serialize, serializers);
      let stdErrSerialize = opts.browser.serialize;
      if (Array.isArray(opts.browser.serialize) && opts.browser.serialize.indexOf("!stdSerializers.err") > -1) stdErrSerialize = false;
      const levels = ["error", "fatal", "warn", "info", "debug", "trace"];
      if (typeof proto === "function") {
        proto.error = proto.fatal = proto.warn = proto.info = proto.debug = proto.trace = proto;
      }
      if (opts.enabled === false) opts.level = "silent";
      const level = opts.level || "info";
      const logger = Object.create(proto);
      if (!logger.log) logger.log = noop;
      Object.defineProperty(logger, "levelVal", {
        get: getLevelVal
      });
      Object.defineProperty(logger, "level", {
        get: getLevel,
        set: setLevel
      });
      const setOpts = {
        transmit: transmit2,
        serialize,
        asObject: opts.browser.asObject,
        levels,
        timestamp: getTimeFunction(opts)
      };
      logger.levels = pino.levels;
      logger.level = level;
      logger.setMaxListeners = logger.getMaxListeners = logger.emit = logger.addListener = logger.on = logger.prependListener = logger.once = logger.prependOnceListener = logger.removeListener = logger.removeAllListeners = logger.listeners = logger.listenerCount = logger.eventNames = logger.write = logger.flush = noop;
      logger.serializers = serializers;
      logger._serialize = serialize;
      logger._stdErrSerialize = stdErrSerialize;
      logger.child = child;
      if (transmit2) logger._logEvent = createLogEventShape();
      function getLevelVal() {
        return this.level === "silent" ? Infinity : this.levels.values[this.level];
      }
      function getLevel() {
        return this._level;
      }
      function setLevel(level2) {
        if (level2 !== "silent" && !this.levels.values[level2]) {
          throw Error("unknown level " + level2);
        }
        this._level = level2;
        set2(setOpts, logger, "error", "log");
        set2(setOpts, logger, "fatal", "error");
        set2(setOpts, logger, "warn", "error");
        set2(setOpts, logger, "info", "log");
        set2(setOpts, logger, "debug", "log");
        set2(setOpts, logger, "trace", "log");
      }
      function child(bindings, childOptions) {
        if (!bindings) {
          throw new Error("missing bindings for child Pino");
        }
        childOptions = childOptions || {};
        if (serialize && bindings.serializers) {
          childOptions.serializers = bindings.serializers;
        }
        const childOptionsSerializers = childOptions.serializers;
        if (serialize && childOptionsSerializers) {
          var childSerializers = Object.assign({}, serializers, childOptionsSerializers);
          var childSerialize = opts.browser.serialize === true ? Object.keys(childSerializers) : serialize;
          delete bindings.serializers;
          applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize);
        }
        function Child(parent) {
          this._childLevel = (parent._childLevel | 0) + 1;
          this.error = bind(parent, bindings, "error");
          this.fatal = bind(parent, bindings, "fatal");
          this.warn = bind(parent, bindings, "warn");
          this.info = bind(parent, bindings, "info");
          this.debug = bind(parent, bindings, "debug");
          this.trace = bind(parent, bindings, "trace");
          if (childSerializers) {
            this.serializers = childSerializers;
            this._serialize = childSerialize;
          }
          if (transmit2) {
            this._logEvent = createLogEventShape(
              [].concat(parent._logEvent.bindings, bindings)
            );
          }
        }
        Child.prototype = this;
        return new Child(this);
      }
      return logger;
    }
    pino.levels = {
      values: {
        fatal: 60,
        error: 50,
        warn: 40,
        info: 30,
        debug: 20,
        trace: 10
      },
      labels: {
        10: "trace",
        20: "debug",
        30: "info",
        40: "warn",
        50: "error",
        60: "fatal"
      }
    };
    pino.stdSerializers = stdSerializers;
    pino.stdTimeFunctions = Object.assign({}, { nullTime, epochTime, unixTime, isoTime });
    function set2(opts, logger, level, fallback) {
      const proto = Object.getPrototypeOf(logger);
      logger[level] = logger.levelVal > logger.levels.values[level] ? noop : proto[level] ? proto[level] : _console[level] || _console[fallback] || noop;
      wrap(opts, logger, level);
    }
    function wrap(opts, logger, level) {
      if (!opts.transmit && logger[level] === noop) return;
      logger[level] = /* @__PURE__ */ function(write) {
        return function LOG() {
          const ts2 = opts.timestamp();
          const args = new Array(arguments.length);
          const proto = Object.getPrototypeOf && Object.getPrototypeOf(this) === _console ? _console : this;
          for (var i4 = 0; i4 < args.length; i4++) args[i4] = arguments[i4];
          if (opts.serialize && !opts.asObject) {
            applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize);
          }
          if (opts.asObject) write.call(proto, asObject(this, level, args, ts2));
          else write.apply(proto, args);
          if (opts.transmit) {
            const transmitLevel = opts.transmit.level || logger.level;
            const transmitValue = pino.levels.values[transmitLevel];
            const methodValue = pino.levels.values[level];
            if (methodValue < transmitValue) return;
            transmit(this, {
              ts: ts2,
              methodLevel: level,
              methodValue,
              transmitLevel,
              transmitValue: pino.levels.values[opts.transmit.level || logger.level],
              send: opts.transmit.send,
              val: logger.levelVal
            }, args);
          }
        };
      }(logger[level]);
    }
    function asObject(logger, level, args, ts2) {
      if (logger._serialize) applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize);
      const argsCloned = args.slice();
      let msg = argsCloned[0];
      const o4 = {};
      if (ts2) {
        o4.time = ts2;
      }
      o4.level = pino.levels.values[level];
      let lvl = (logger._childLevel | 0) + 1;
      if (lvl < 1) lvl = 1;
      if (msg !== null && typeof msg === "object") {
        while (lvl-- && typeof argsCloned[0] === "object") {
          Object.assign(o4, argsCloned.shift());
        }
        msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : void 0;
      } else if (typeof msg === "string") msg = format(argsCloned.shift(), argsCloned);
      if (msg !== void 0) o4.msg = msg;
      return o4;
    }
    function applySerializers(args, serialize, serializers, stdErrSerialize) {
      for (const i4 in args) {
        if (stdErrSerialize && args[i4] instanceof Error) {
          args[i4] = pino.stdSerializers.err(args[i4]);
        } else if (typeof args[i4] === "object" && !Array.isArray(args[i4])) {
          for (const k4 in args[i4]) {
            if (serialize && serialize.indexOf(k4) > -1 && k4 in serializers) {
              args[i4][k4] = serializers[k4](args[i4][k4]);
            }
          }
        }
      }
    }
    function bind(parent, bindings, level) {
      return function() {
        const args = new Array(1 + arguments.length);
        args[0] = bindings;
        for (var i4 = 1; i4 < args.length; i4++) {
          args[i4] = arguments[i4 - 1];
        }
        return parent[level].apply(this, args);
      };
    }
    function transmit(logger, opts, args) {
      const send = opts.send;
      const ts2 = opts.ts;
      const methodLevel = opts.methodLevel;
      const methodValue = opts.methodValue;
      const val = opts.val;
      const bindings = logger._logEvent.bindings;
      applySerializers(
        args,
        logger._serialize || Object.keys(logger.serializers),
        logger.serializers,
        logger._stdErrSerialize === void 0 ? true : logger._stdErrSerialize
      );
      logger._logEvent.ts = ts2;
      logger._logEvent.messages = args.filter(function(arg) {
        return bindings.indexOf(arg) === -1;
      });
      logger._logEvent.level.label = methodLevel;
      logger._logEvent.level.value = methodValue;
      send(methodLevel, logger._logEvent, val);
      logger._logEvent = createLogEventShape(bindings);
    }
    function createLogEventShape(bindings) {
      return {
        ts: 0,
        messages: [],
        bindings: bindings || [],
        level: { label: "", value: 0 }
      };
    }
    function asErrValue(err) {
      const obj = {
        type: err.constructor.name,
        msg: err.message,
        stack: err.stack
      };
      for (const key in err) {
        if (obj[key] === void 0) {
          obj[key] = err[key];
        }
      }
      return obj;
    }
    function getTimeFunction(opts) {
      if (typeof opts.timestamp === "function") {
        return opts.timestamp;
      }
      if (opts.timestamp === false) {
        return nullTime;
      }
      return epochTime;
    }
    function mock() {
      return {};
    }
    function passthrough(a4) {
      return a4;
    }
    function noop() {
    }
    function nullTime() {
      return false;
    }
    function epochTime() {
      return Date.now();
    }
    function unixTime() {
      return Math.round(Date.now() / 1e3);
    }
    function isoTime() {
      return new Date(Date.now()).toISOString();
    }
    function pfGlobalThisOrFallback() {
      function defd(o4) {
        return typeof o4 !== "undefined" && o4;
      }
      try {
        if (typeof globalThis !== "undefined") return globalThis;
        Object.defineProperty(Object.prototype, "globalThis", {
          get: function() {
            delete Object.prototype.globalThis;
            return this.globalThis = this;
          },
          configurable: true
        });
        return globalThis;
      } catch (e2) {
        return defd(self) || defd(window) || defd(this) || {};
      }
    }
  }
});

// node_modules/@stablelib/random/lib/source/browser.js
var require_browser2 = __commonJS({
  "node_modules/@stablelib/random/lib/source/browser.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BrowserRandomSource = void 0;
    var QUOTA = 65536;
    var BrowserRandomSource = class {
      constructor() {
        this.isAvailable = false;
        this.isInstantiated = false;
        const browserCrypto = typeof self !== "undefined" ? self.crypto || self.msCrypto : null;
        if (browserCrypto && browserCrypto.getRandomValues !== void 0) {
          this._crypto = browserCrypto;
          this.isAvailable = true;
          this.isInstantiated = true;
        }
      }
      randomBytes(length2) {
        if (!this.isAvailable || !this._crypto) {
          throw new Error("Browser random byte generator is not available.");
        }
        const out = new Uint8Array(length2);
        for (let i4 = 0; i4 < out.length; i4 += QUOTA) {
          this._crypto.getRandomValues(out.subarray(i4, i4 + Math.min(out.length - i4, QUOTA)));
        }
        return out;
      }
    };
    exports.BrowserRandomSource = BrowserRandomSource;
  }
});

// node_modules/@stablelib/wipe/lib/wipe.js
var require_wipe = __commonJS({
  "node_modules/@stablelib/wipe/lib/wipe.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function wipe(array) {
      for (var i4 = 0; i4 < array.length; i4++) {
        array[i4] = 0;
      }
      return array;
    }
    exports.wipe = wipe;
  }
});

// node_modules/@stablelib/random/lib/source/node.js
var require_node = __commonJS({
  "node_modules/@stablelib/random/lib/source/node.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NodeRandomSource = void 0;
    var wipe_1 = require_wipe();
    var NodeRandomSource = class {
      constructor() {
        this.isAvailable = false;
        this.isInstantiated = false;
        if (typeof __require !== "undefined") {
          const nodeCrypto = require_empty_module();
          if (nodeCrypto && nodeCrypto.randomBytes) {
            this._crypto = nodeCrypto;
            this.isAvailable = true;
            this.isInstantiated = true;
          }
        }
      }
      randomBytes(length2) {
        if (!this.isAvailable || !this._crypto) {
          throw new Error("Node.js random byte generator is not available.");
        }
        let buffer = this._crypto.randomBytes(length2);
        if (buffer.length !== length2) {
          throw new Error("NodeRandomSource: got fewer bytes than requested");
        }
        const out = new Uint8Array(length2);
        for (let i4 = 0; i4 < out.length; i4++) {
          out[i4] = buffer[i4];
        }
        (0, wipe_1.wipe)(buffer);
        return out;
      }
    };
    exports.NodeRandomSource = NodeRandomSource;
  }
});

// node_modules/@stablelib/random/lib/source/system.js
var require_system = __commonJS({
  "node_modules/@stablelib/random/lib/source/system.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SystemRandomSource = void 0;
    var browser_1 = require_browser2();
    var node_1 = require_node();
    var SystemRandomSource = class {
      constructor() {
        this.isAvailable = false;
        this.name = "";
        this._source = new browser_1.BrowserRandomSource();
        if (this._source.isAvailable) {
          this.isAvailable = true;
          this.name = "Browser";
          return;
        }
        this._source = new node_1.NodeRandomSource();
        if (this._source.isAvailable) {
          this.isAvailable = true;
          this.name = "Node";
          return;
        }
      }
      randomBytes(length2) {
        if (!this.isAvailable) {
          throw new Error("System random byte generator is not available.");
        }
        return this._source.randomBytes(length2);
      }
    };
    exports.SystemRandomSource = SystemRandomSource;
  }
});

// node_modules/@stablelib/int/lib/int.js
var require_int = __commonJS({
  "node_modules/@stablelib/int/lib/int.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function imulShim(a4, b3) {
      var ah2 = a4 >>> 16 & 65535, al = a4 & 65535;
      var bh2 = b3 >>> 16 & 65535, bl = b3 & 65535;
      return al * bl + (ah2 * bl + al * bh2 << 16 >>> 0) | 0;
    }
    exports.mul = Math.imul || imulShim;
    function add(a4, b3) {
      return a4 + b3 | 0;
    }
    exports.add = add;
    function sub(a4, b3) {
      return a4 - b3 | 0;
    }
    exports.sub = sub;
    function rotl(x5, n5) {
      return x5 << n5 | x5 >>> 32 - n5;
    }
    exports.rotl = rotl;
    function rotr(x5, n5) {
      return x5 << 32 - n5 | x5 >>> n5;
    }
    exports.rotr = rotr;
    function isIntegerShim(n5) {
      return typeof n5 === "number" && isFinite(n5) && Math.floor(n5) === n5;
    }
    exports.isInteger = Number.isInteger || isIntegerShim;
    exports.MAX_SAFE_INTEGER = 9007199254740991;
    exports.isSafeInteger = function(n5) {
      return exports.isInteger(n5) && (n5 >= -exports.MAX_SAFE_INTEGER && n5 <= exports.MAX_SAFE_INTEGER);
    };
  }
});

// node_modules/@stablelib/binary/lib/binary.js
var require_binary = __commonJS({
  "node_modules/@stablelib/binary/lib/binary.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var int_1 = require_int();
    function readInt16BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 0] << 8 | array[offset + 1]) << 16 >> 16;
    }
    exports.readInt16BE = readInt16BE;
    function readUint16BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 0] << 8 | array[offset + 1]) >>> 0;
    }
    exports.readUint16BE = readUint16BE;
    function readInt16LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 1] << 8 | array[offset]) << 16 >> 16;
    }
    exports.readInt16LE = readInt16LE;
    function readUint16LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 1] << 8 | array[offset]) >>> 0;
    }
    exports.readUint16LE = readUint16LE;
    function writeUint16BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(2);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 8;
      out[offset + 1] = value >>> 0;
      return out;
    }
    exports.writeUint16BE = writeUint16BE;
    exports.writeInt16BE = writeUint16BE;
    function writeUint16LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(2);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 0;
      out[offset + 1] = value >>> 8;
      return out;
    }
    exports.writeUint16LE = writeUint16LE;
    exports.writeInt16LE = writeUint16LE;
    function readInt32BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return array[offset] << 24 | array[offset + 1] << 16 | array[offset + 2] << 8 | array[offset + 3];
    }
    exports.readInt32BE = readInt32BE;
    function readUint32BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset] << 24 | array[offset + 1] << 16 | array[offset + 2] << 8 | array[offset + 3]) >>> 0;
    }
    exports.readUint32BE = readUint32BE;
    function readInt32LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return array[offset + 3] << 24 | array[offset + 2] << 16 | array[offset + 1] << 8 | array[offset];
    }
    exports.readInt32LE = readInt32LE;
    function readUint32LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 3] << 24 | array[offset + 2] << 16 | array[offset + 1] << 8 | array[offset]) >>> 0;
    }
    exports.readUint32LE = readUint32LE;
    function writeUint32BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 24;
      out[offset + 1] = value >>> 16;
      out[offset + 2] = value >>> 8;
      out[offset + 3] = value >>> 0;
      return out;
    }
    exports.writeUint32BE = writeUint32BE;
    exports.writeInt32BE = writeUint32BE;
    function writeUint32LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 0;
      out[offset + 1] = value >>> 8;
      out[offset + 2] = value >>> 16;
      out[offset + 3] = value >>> 24;
      return out;
    }
    exports.writeUint32LE = writeUint32LE;
    exports.writeInt32LE = writeUint32LE;
    function readInt64BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var hi3 = readInt32BE(array, offset);
      var lo2 = readInt32BE(array, offset + 4);
      return hi3 * 4294967296 + lo2 - (lo2 >> 31) * 4294967296;
    }
    exports.readInt64BE = readInt64BE;
    function readUint64BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var hi3 = readUint32BE(array, offset);
      var lo2 = readUint32BE(array, offset + 4);
      return hi3 * 4294967296 + lo2;
    }
    exports.readUint64BE = readUint64BE;
    function readInt64LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var lo2 = readInt32LE(array, offset);
      var hi3 = readInt32LE(array, offset + 4);
      return hi3 * 4294967296 + lo2 - (lo2 >> 31) * 4294967296;
    }
    exports.readInt64LE = readInt64LE;
    function readUint64LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var lo2 = readUint32LE(array, offset);
      var hi3 = readUint32LE(array, offset + 4);
      return hi3 * 4294967296 + lo2;
    }
    exports.readUint64LE = readUint64LE;
    function writeUint64BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      writeUint32BE(value / 4294967296 >>> 0, out, offset);
      writeUint32BE(value >>> 0, out, offset + 4);
      return out;
    }
    exports.writeUint64BE = writeUint64BE;
    exports.writeInt64BE = writeUint64BE;
    function writeUint64LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      writeUint32LE(value >>> 0, out, offset);
      writeUint32LE(value / 4294967296 >>> 0, out, offset + 4);
      return out;
    }
    exports.writeUint64LE = writeUint64LE;
    exports.writeInt64LE = writeUint64LE;
    function readUintBE(bitLength, array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("readUintBE supports only bitLengths divisible by 8");
      }
      if (bitLength / 8 > array.length - offset) {
        throw new Error("readUintBE: array is too short for the given bitLength");
      }
      var result = 0;
      var mul = 1;
      for (var i4 = bitLength / 8 + offset - 1; i4 >= offset; i4--) {
        result += array[i4] * mul;
        mul *= 256;
      }
      return result;
    }
    exports.readUintBE = readUintBE;
    function readUintLE(bitLength, array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("readUintLE supports only bitLengths divisible by 8");
      }
      if (bitLength / 8 > array.length - offset) {
        throw new Error("readUintLE: array is too short for the given bitLength");
      }
      var result = 0;
      var mul = 1;
      for (var i4 = offset; i4 < offset + bitLength / 8; i4++) {
        result += array[i4] * mul;
        mul *= 256;
      }
      return result;
    }
    exports.readUintLE = readUintLE;
    function writeUintBE(bitLength, value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(bitLength / 8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("writeUintBE supports only bitLengths divisible by 8");
      }
      if (!int_1.isSafeInteger(value)) {
        throw new Error("writeUintBE value must be an integer");
      }
      var div = 1;
      for (var i4 = bitLength / 8 + offset - 1; i4 >= offset; i4--) {
        out[i4] = value / div & 255;
        div *= 256;
      }
      return out;
    }
    exports.writeUintBE = writeUintBE;
    function writeUintLE(bitLength, value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(bitLength / 8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("writeUintLE supports only bitLengths divisible by 8");
      }
      if (!int_1.isSafeInteger(value)) {
        throw new Error("writeUintLE value must be an integer");
      }
      var div = 1;
      for (var i4 = offset; i4 < offset + bitLength / 8; i4++) {
        out[i4] = value / div & 255;
        div *= 256;
      }
      return out;
    }
    exports.writeUintLE = writeUintLE;
    function readFloat32BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat32(offset);
    }
    exports.readFloat32BE = readFloat32BE;
    function readFloat32LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat32(offset, true);
    }
    exports.readFloat32LE = readFloat32LE;
    function readFloat64BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat64(offset);
    }
    exports.readFloat64BE = readFloat64BE;
    function readFloat64LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat64(offset, true);
    }
    exports.readFloat64LE = readFloat64LE;
    function writeFloat32BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat32(offset, value);
      return out;
    }
    exports.writeFloat32BE = writeFloat32BE;
    function writeFloat32LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat32(offset, value, true);
      return out;
    }
    exports.writeFloat32LE = writeFloat32LE;
    function writeFloat64BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat64(offset, value);
      return out;
    }
    exports.writeFloat64BE = writeFloat64BE;
    function writeFloat64LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat64(offset, value, true);
      return out;
    }
    exports.writeFloat64LE = writeFloat64LE;
  }
});

// node_modules/@stablelib/random/lib/random.js
var require_random = __commonJS({
  "node_modules/@stablelib/random/lib/random.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.randomStringForEntropy = exports.randomString = exports.randomUint32 = exports.randomBytes = exports.defaultRandomSource = void 0;
    var system_1 = require_system();
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    exports.defaultRandomSource = new system_1.SystemRandomSource();
    function randomBytes2(length2, prng = exports.defaultRandomSource) {
      return prng.randomBytes(length2);
    }
    exports.randomBytes = randomBytes2;
    function randomUint32(prng = exports.defaultRandomSource) {
      const buf = randomBytes2(4, prng);
      const result = (0, binary_1.readUint32LE)(buf);
      (0, wipe_1.wipe)(buf);
      return result;
    }
    exports.randomUint32 = randomUint32;
    var ALPHANUMERIC = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
    function randomString(length2, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {
      if (charset.length < 2) {
        throw new Error("randomString charset is too short");
      }
      if (charset.length > 256) {
        throw new Error("randomString charset is too long");
      }
      let out = "";
      const charsLen = charset.length;
      const maxByte = 256 - 256 % charsLen;
      while (length2 > 0) {
        const buf = randomBytes2(Math.ceil(length2 * 256 / maxByte), prng);
        for (let i4 = 0; i4 < buf.length && length2 > 0; i4++) {
          const randomByte = buf[i4];
          if (randomByte < maxByte) {
            out += charset.charAt(randomByte % charsLen);
            length2--;
          }
        }
        (0, wipe_1.wipe)(buf);
      }
      return out;
    }
    exports.randomString = randomString;
    function randomStringForEntropy(bits, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {
      const length2 = Math.ceil(bits / (Math.log(charset.length) / Math.LN2));
      return randomString(length2, charset, prng);
    }
    exports.randomStringForEntropy = randomStringForEntropy;
  }
});

// node_modules/@stablelib/sha512/lib/sha512.js
var require_sha512 = __commonJS({
  "node_modules/@stablelib/sha512/lib/sha512.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    exports.DIGEST_LENGTH = 64;
    exports.BLOCK_SIZE = 128;
    var SHA512 = (
      /** @class */
      function() {
        function SHA5122() {
          this.digestLength = exports.DIGEST_LENGTH;
          this.blockSize = exports.BLOCK_SIZE;
          this._stateHi = new Int32Array(8);
          this._stateLo = new Int32Array(8);
          this._tempHi = new Int32Array(16);
          this._tempLo = new Int32Array(16);
          this._buffer = new Uint8Array(256);
          this._bufferLength = 0;
          this._bytesHashed = 0;
          this._finished = false;
          this.reset();
        }
        SHA5122.prototype._initState = function() {
          this._stateHi[0] = 1779033703;
          this._stateHi[1] = 3144134277;
          this._stateHi[2] = 1013904242;
          this._stateHi[3] = 2773480762;
          this._stateHi[4] = 1359893119;
          this._stateHi[5] = 2600822924;
          this._stateHi[6] = 528734635;
          this._stateHi[7] = 1541459225;
          this._stateLo[0] = 4089235720;
          this._stateLo[1] = 2227873595;
          this._stateLo[2] = 4271175723;
          this._stateLo[3] = 1595750129;
          this._stateLo[4] = 2917565137;
          this._stateLo[5] = 725511199;
          this._stateLo[6] = 4215389547;
          this._stateLo[7] = 327033209;
        };
        SHA5122.prototype.reset = function() {
          this._initState();
          this._bufferLength = 0;
          this._bytesHashed = 0;
          this._finished = false;
          return this;
        };
        SHA5122.prototype.clean = function() {
          wipe_1.wipe(this._buffer);
          wipe_1.wipe(this._tempHi);
          wipe_1.wipe(this._tempLo);
          this.reset();
        };
        SHA5122.prototype.update = function(data, dataLength) {
          if (dataLength === void 0) {
            dataLength = data.length;
          }
          if (this._finished) {
            throw new Error("SHA512: can't update because hash was finished.");
          }
          var dataPos = 0;
          this._bytesHashed += dataLength;
          if (this._bufferLength > 0) {
            while (this._bufferLength < exports.BLOCK_SIZE && dataLength > 0) {
              this._buffer[this._bufferLength++] = data[dataPos++];
              dataLength--;
            }
            if (this._bufferLength === this.blockSize) {
              hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, this.blockSize);
              this._bufferLength = 0;
            }
          }
          if (dataLength >= this.blockSize) {
            dataPos = hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, data, dataPos, dataLength);
            dataLength %= this.blockSize;
          }
          while (dataLength > 0) {
            this._buffer[this._bufferLength++] = data[dataPos++];
            dataLength--;
          }
          return this;
        };
        SHA5122.prototype.finish = function(out) {
          if (!this._finished) {
            var bytesHashed = this._bytesHashed;
            var left = this._bufferLength;
            var bitLenHi = bytesHashed / 536870912 | 0;
            var bitLenLo = bytesHashed << 3;
            var padLength = bytesHashed % 128 < 112 ? 128 : 256;
            this._buffer[left] = 128;
            for (var i4 = left + 1; i4 < padLength - 8; i4++) {
              this._buffer[i4] = 0;
            }
            binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);
            binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);
            hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, padLength);
            this._finished = true;
          }
          for (var i4 = 0; i4 < this.digestLength / 8; i4++) {
            binary_1.writeUint32BE(this._stateHi[i4], out, i4 * 8);
            binary_1.writeUint32BE(this._stateLo[i4], out, i4 * 8 + 4);
          }
          return this;
        };
        SHA5122.prototype.digest = function() {
          var out = new Uint8Array(this.digestLength);
          this.finish(out);
          return out;
        };
        SHA5122.prototype.saveState = function() {
          if (this._finished) {
            throw new Error("SHA256: cannot save finished state");
          }
          return {
            stateHi: new Int32Array(this._stateHi),
            stateLo: new Int32Array(this._stateLo),
            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
            bufferLength: this._bufferLength,
            bytesHashed: this._bytesHashed
          };
        };
        SHA5122.prototype.restoreState = function(savedState) {
          this._stateHi.set(savedState.stateHi);
          this._stateLo.set(savedState.stateLo);
          this._bufferLength = savedState.bufferLength;
          if (savedState.buffer) {
            this._buffer.set(savedState.buffer);
          }
          this._bytesHashed = savedState.bytesHashed;
          this._finished = false;
          return this;
        };
        SHA5122.prototype.cleanSavedState = function(savedState) {
          wipe_1.wipe(savedState.stateHi);
          wipe_1.wipe(savedState.stateLo);
          if (savedState.buffer) {
            wipe_1.wipe(savedState.buffer);
          }
          savedState.bufferLength = 0;
          savedState.bytesHashed = 0;
        };
        return SHA5122;
      }()
    );
    exports.SHA512 = SHA512;
    var K4 = new Int32Array([
      1116352408,
      3609767458,
      1899447441,
      602891725,
      3049323471,
      3964484399,
      3921009573,
      2173295548,
      961987163,
      4081628472,
      1508970993,
      3053834265,
      2453635748,
      2937671579,
      2870763221,
      3664609560,
      3624381080,
      2734883394,
      310598401,
      1164996542,
      607225278,
      1323610764,
      1426881987,
      3590304994,
      1925078388,
      4068182383,
      2162078206,
      991336113,
      2614888103,
      633803317,
      3248222580,
      3479774868,
      3835390401,
      2666613458,
      4022224774,
      944711139,
      264347078,
      2341262773,
      604807628,
      2007800933,
      770255983,
      1495990901,
      1249150122,
      1856431235,
      1555081692,
      3175218132,
      1996064986,
      2198950837,
      2554220882,
      3999719339,
      2821834349,
      766784016,
      2952996808,
      2566594879,
      3210313671,
      3203337956,
      3336571891,
      1034457026,
      3584528711,
      2466948901,
      113926993,
      3758326383,
      338241895,
      168717936,
      666307205,
      1188179964,
      773529912,
      1546045734,
      1294757372,
      1522805485,
      1396182291,
      2643833823,
      1695183700,
      2343527390,
      1986661051,
      1014477480,
      2177026350,
      1206759142,
      2456956037,
      344077627,
      2730485921,
      1290863460,
      2820302411,
      3158454273,
      3259730800,
      3505952657,
      3345764771,
      106217008,
      3516065817,
      3606008344,
      3600352804,
      1432725776,
      4094571909,
      1467031594,
      275423344,
      851169720,
      430227734,
      3100823752,
      506948616,
      1363258195,
      659060556,
      3750685593,
      883997877,
      3785050280,
      958139571,
      3318307427,
      1322822218,
      3812723403,
      1537002063,
      2003034995,
      1747873779,
      3602036899,
      1955562222,
      1575990012,
      2024104815,
      1125592928,
      2227730452,
      2716904306,
      2361852424,
      442776044,
      2428436474,
      593698344,
      2756734187,
      3733110249,
      3204031479,
      2999351573,
      3329325298,
      3815920427,
      3391569614,
      3928383900,
      3515267271,
      566280711,
      3940187606,
      3454069534,
      4118630271,
      4000239992,
      116418474,
      1914138554,
      174292421,
      2731055270,
      289380356,
      3203993006,
      460393269,
      320620315,
      685471733,
      587496836,
      852142971,
      1086792851,
      1017036298,
      365543100,
      1126000580,
      2618297676,
      1288033470,
      3409855158,
      1501505948,
      4234509866,
      1607167915,
      987167468,
      1816402316,
      1246189591
    ]);
    function hashBlocks(wh2, wl, hh2, hl, m2, pos, len) {
      var ah0 = hh2[0], ah1 = hh2[1], ah2 = hh2[2], ah3 = hh2[3], ah4 = hh2[4], ah5 = hh2[5], ah6 = hh2[6], ah7 = hh2[7], al0 = hl[0], al1 = hl[1], al2 = hl[2], al3 = hl[3], al4 = hl[4], al5 = hl[5], al6 = hl[6], al7 = hl[7];
      var h5, l4;
      var th, tl;
      var a4, b3, c5, d3;
      while (len >= 128) {
        for (var i4 = 0; i4 < 16; i4++) {
          var j5 = 8 * i4 + pos;
          wh2[i4] = binary_1.readUint32BE(m2, j5);
          wl[i4] = binary_1.readUint32BE(m2, j5 + 4);
        }
        for (var i4 = 0; i4 < 80; i4++) {
          var bh0 = ah0;
          var bh1 = ah1;
          var bh2 = ah2;
          var bh3 = ah3;
          var bh4 = ah4;
          var bh5 = ah5;
          var bh6 = ah6;
          var bh7 = ah7;
          var bl0 = al0;
          var bl1 = al1;
          var bl2 = al2;
          var bl3 = al3;
          var bl4 = al4;
          var bl5 = al5;
          var bl6 = al6;
          var bl7 = al7;
          h5 = ah7;
          l4 = al7;
          a4 = l4 & 65535;
          b3 = l4 >>> 16;
          c5 = h5 & 65535;
          d3 = h5 >>> 16;
          h5 = (ah4 >>> 14 | al4 << 32 - 14) ^ (ah4 >>> 18 | al4 << 32 - 18) ^ (al4 >>> 41 - 32 | ah4 << 32 - (41 - 32));
          l4 = (al4 >>> 14 | ah4 << 32 - 14) ^ (al4 >>> 18 | ah4 << 32 - 18) ^ (ah4 >>> 41 - 32 | al4 << 32 - (41 - 32));
          a4 += l4 & 65535;
          b3 += l4 >>> 16;
          c5 += h5 & 65535;
          d3 += h5 >>> 16;
          h5 = ah4 & ah5 ^ ~ah4 & ah6;
          l4 = al4 & al5 ^ ~al4 & al6;
          a4 += l4 & 65535;
          b3 += l4 >>> 16;
          c5 += h5 & 65535;
          d3 += h5 >>> 16;
          h5 = K4[i4 * 2];
          l4 = K4[i4 * 2 + 1];
          a4 += l4 & 65535;
          b3 += l4 >>> 16;
          c5 += h5 & 65535;
          d3 += h5 >>> 16;
          h5 = wh2[i4 % 16];
          l4 = wl[i4 % 16];
          a4 += l4 & 65535;
          b3 += l4 >>> 16;
          c5 += h5 & 65535;
          d3 += h5 >>> 16;
          b3 += a4 >>> 16;
          c5 += b3 >>> 16;
          d3 += c5 >>> 16;
          th = c5 & 65535 | d3 << 16;
          tl = a4 & 65535 | b3 << 16;
          h5 = th;
          l4 = tl;
          a4 = l4 & 65535;
          b3 = l4 >>> 16;
          c5 = h5 & 65535;
          d3 = h5 >>> 16;
          h5 = (ah0 >>> 28 | al0 << 32 - 28) ^ (al0 >>> 34 - 32 | ah0 << 32 - (34 - 32)) ^ (al0 >>> 39 - 32 | ah0 << 32 - (39 - 32));
          l4 = (al0 >>> 28 | ah0 << 32 - 28) ^ (ah0 >>> 34 - 32 | al0 << 32 - (34 - 32)) ^ (ah0 >>> 39 - 32 | al0 << 32 - (39 - 32));
          a4 += l4 & 65535;
          b3 += l4 >>> 16;
          c5 += h5 & 65535;
          d3 += h5 >>> 16;
          h5 = ah0 & ah1 ^ ah0 & ah2 ^ ah1 & ah2;
          l4 = al0 & al1 ^ al0 & al2 ^ al1 & al2;
          a4 += l4 & 65535;
          b3 += l4 >>> 16;
          c5 += h5 & 65535;
          d3 += h5 >>> 16;
          b3 += a4 >>> 16;
          c5 += b3 >>> 16;
          d3 += c5 >>> 16;
          bh7 = c5 & 65535 | d3 << 16;
          bl7 = a4 & 65535 | b3 << 16;
          h5 = bh3;
          l4 = bl3;
          a4 = l4 & 65535;
          b3 = l4 >>> 16;
          c5 = h5 & 65535;
          d3 = h5 >>> 16;
          h5 = th;
          l4 = tl;
          a4 += l4 & 65535;
          b3 += l4 >>> 16;
          c5 += h5 & 65535;
          d3 += h5 >>> 16;
          b3 += a4 >>> 16;
          c5 += b3 >>> 16;
          d3 += c5 >>> 16;
          bh3 = c5 & 65535 | d3 << 16;
          bl3 = a4 & 65535 | b3 << 16;
          ah1 = bh0;
          ah2 = bh1;
          ah3 = bh2;
          ah4 = bh3;
          ah5 = bh4;
          ah6 = bh5;
          ah7 = bh6;
          ah0 = bh7;
          al1 = bl0;
          al2 = bl1;
          al3 = bl2;
          al4 = bl3;
          al5 = bl4;
          al6 = bl5;
          al7 = bl6;
          al0 = bl7;
          if (i4 % 16 === 15) {
            for (var j5 = 0; j5 < 16; j5++) {
              h5 = wh2[j5];
              l4 = wl[j5];
              a4 = l4 & 65535;
              b3 = l4 >>> 16;
              c5 = h5 & 65535;
              d3 = h5 >>> 16;
              h5 = wh2[(j5 + 9) % 16];
              l4 = wl[(j5 + 9) % 16];
              a4 += l4 & 65535;
              b3 += l4 >>> 16;
              c5 += h5 & 65535;
              d3 += h5 >>> 16;
              th = wh2[(j5 + 1) % 16];
              tl = wl[(j5 + 1) % 16];
              h5 = (th >>> 1 | tl << 32 - 1) ^ (th >>> 8 | tl << 32 - 8) ^ th >>> 7;
              l4 = (tl >>> 1 | th << 32 - 1) ^ (tl >>> 8 | th << 32 - 8) ^ (tl >>> 7 | th << 32 - 7);
              a4 += l4 & 65535;
              b3 += l4 >>> 16;
              c5 += h5 & 65535;
              d3 += h5 >>> 16;
              th = wh2[(j5 + 14) % 16];
              tl = wl[(j5 + 14) % 16];
              h5 = (th >>> 19 | tl << 32 - 19) ^ (tl >>> 61 - 32 | th << 32 - (61 - 32)) ^ th >>> 6;
              l4 = (tl >>> 19 | th << 32 - 19) ^ (th >>> 61 - 32 | tl << 32 - (61 - 32)) ^ (tl >>> 6 | th << 32 - 6);
              a4 += l4 & 65535;
              b3 += l4 >>> 16;
              c5 += h5 & 65535;
              d3 += h5 >>> 16;
              b3 += a4 >>> 16;
              c5 += b3 >>> 16;
              d3 += c5 >>> 16;
              wh2[j5] = c5 & 65535 | d3 << 16;
              wl[j5] = a4 & 65535 | b3 << 16;
            }
          }
        }
        h5 = ah0;
        l4 = al0;
        a4 = l4 & 65535;
        b3 = l4 >>> 16;
        c5 = h5 & 65535;
        d3 = h5 >>> 16;
        h5 = hh2[0];
        l4 = hl[0];
        a4 += l4 & 65535;
        b3 += l4 >>> 16;
        c5 += h5 & 65535;
        d3 += h5 >>> 16;
        b3 += a4 >>> 16;
        c5 += b3 >>> 16;
        d3 += c5 >>> 16;
        hh2[0] = ah0 = c5 & 65535 | d3 << 16;
        hl[0] = al0 = a4 & 65535 | b3 << 16;
        h5 = ah1;
        l4 = al1;
        a4 = l4 & 65535;
        b3 = l4 >>> 16;
        c5 = h5 & 65535;
        d3 = h5 >>> 16;
        h5 = hh2[1];
        l4 = hl[1];
        a4 += l4 & 65535;
        b3 += l4 >>> 16;
        c5 += h5 & 65535;
        d3 += h5 >>> 16;
        b3 += a4 >>> 16;
        c5 += b3 >>> 16;
        d3 += c5 >>> 16;
        hh2[1] = ah1 = c5 & 65535 | d3 << 16;
        hl[1] = al1 = a4 & 65535 | b3 << 16;
        h5 = ah2;
        l4 = al2;
        a4 = l4 & 65535;
        b3 = l4 >>> 16;
        c5 = h5 & 65535;
        d3 = h5 >>> 16;
        h5 = hh2[2];
        l4 = hl[2];
        a4 += l4 & 65535;
        b3 += l4 >>> 16;
        c5 += h5 & 65535;
        d3 += h5 >>> 16;
        b3 += a4 >>> 16;
        c5 += b3 >>> 16;
        d3 += c5 >>> 16;
        hh2[2] = ah2 = c5 & 65535 | d3 << 16;
        hl[2] = al2 = a4 & 65535 | b3 << 16;
        h5 = ah3;
        l4 = al3;
        a4 = l4 & 65535;
        b3 = l4 >>> 16;
        c5 = h5 & 65535;
        d3 = h5 >>> 16;
        h5 = hh2[3];
        l4 = hl[3];
        a4 += l4 & 65535;
        b3 += l4 >>> 16;
        c5 += h5 & 65535;
        d3 += h5 >>> 16;
        b3 += a4 >>> 16;
        c5 += b3 >>> 16;
        d3 += c5 >>> 16;
        hh2[3] = ah3 = c5 & 65535 | d3 << 16;
        hl[3] = al3 = a4 & 65535 | b3 << 16;
        h5 = ah4;
        l4 = al4;
        a4 = l4 & 65535;
        b3 = l4 >>> 16;
        c5 = h5 & 65535;
        d3 = h5 >>> 16;
        h5 = hh2[4];
        l4 = hl[4];
        a4 += l4 & 65535;
        b3 += l4 >>> 16;
        c5 += h5 & 65535;
        d3 += h5 >>> 16;
        b3 += a4 >>> 16;
        c5 += b3 >>> 16;
        d3 += c5 >>> 16;
        hh2[4] = ah4 = c5 & 65535 | d3 << 16;
        hl[4] = al4 = a4 & 65535 | b3 << 16;
        h5 = ah5;
        l4 = al5;
        a4 = l4 & 65535;
        b3 = l4 >>> 16;
        c5 = h5 & 65535;
        d3 = h5 >>> 16;
        h5 = hh2[5];
        l4 = hl[5];
        a4 += l4 & 65535;
        b3 += l4 >>> 16;
        c5 += h5 & 65535;
        d3 += h5 >>> 16;
        b3 += a4 >>> 16;
        c5 += b3 >>> 16;
        d3 += c5 >>> 16;
        hh2[5] = ah5 = c5 & 65535 | d3 << 16;
        hl[5] = al5 = a4 & 65535 | b3 << 16;
        h5 = ah6;
        l4 = al6;
        a4 = l4 & 65535;
        b3 = l4 >>> 16;
        c5 = h5 & 65535;
        d3 = h5 >>> 16;
        h5 = hh2[6];
        l4 = hl[6];
        a4 += l4 & 65535;
        b3 += l4 >>> 16;
        c5 += h5 & 65535;
        d3 += h5 >>> 16;
        b3 += a4 >>> 16;
        c5 += b3 >>> 16;
        d3 += c5 >>> 16;
        hh2[6] = ah6 = c5 & 65535 | d3 << 16;
        hl[6] = al6 = a4 & 65535 | b3 << 16;
        h5 = ah7;
        l4 = al7;
        a4 = l4 & 65535;
        b3 = l4 >>> 16;
        c5 = h5 & 65535;
        d3 = h5 >>> 16;
        h5 = hh2[7];
        l4 = hl[7];
        a4 += l4 & 65535;
        b3 += l4 >>> 16;
        c5 += h5 & 65535;
        d3 += h5 >>> 16;
        b3 += a4 >>> 16;
        c5 += b3 >>> 16;
        d3 += c5 >>> 16;
        hh2[7] = ah7 = c5 & 65535 | d3 << 16;
        hl[7] = al7 = a4 & 65535 | b3 << 16;
        pos += 128;
        len -= 128;
      }
      return pos;
    }
    function hash(data) {
      var h5 = new SHA512();
      h5.update(data);
      var digest2 = h5.digest();
      h5.clean();
      return digest2;
    }
    exports.hash = hash;
  }
});

// node_modules/@stablelib/ed25519/lib/ed25519.js
var require_ed25519 = __commonJS({
  "node_modules/@stablelib/ed25519/lib/ed25519.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.convertSecretKeyToX25519 = exports.convertPublicKeyToX25519 = exports.verify = exports.sign = exports.extractPublicKeyFromSecretKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.SEED_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = exports.SIGNATURE_LENGTH = void 0;
    var random_1 = require_random();
    var sha512_1 = require_sha512();
    var wipe_1 = require_wipe();
    exports.SIGNATURE_LENGTH = 64;
    exports.PUBLIC_KEY_LENGTH = 32;
    exports.SECRET_KEY_LENGTH = 64;
    exports.SEED_LENGTH = 32;
    function gf2(init) {
      const r3 = new Float64Array(16);
      if (init) {
        for (let i4 = 0; i4 < init.length; i4++) {
          r3[i4] = init[i4];
        }
      }
      return r3;
    }
    var _9 = new Uint8Array(32);
    _9[0] = 9;
    var gf0 = gf2();
    var gf1 = gf2([1]);
    var D2 = gf2([
      30883,
      4953,
      19914,
      30187,
      55467,
      16705,
      2637,
      112,
      59544,
      30585,
      16505,
      36039,
      65139,
      11119,
      27886,
      20995
    ]);
    var D22 = gf2([
      61785,
      9906,
      39828,
      60374,
      45398,
      33411,
      5274,
      224,
      53552,
      61171,
      33010,
      6542,
      64743,
      22239,
      55772,
      9222
    ]);
    var X2 = gf2([
      54554,
      36645,
      11616,
      51542,
      42930,
      38181,
      51040,
      26924,
      56412,
      64982,
      57905,
      49316,
      21502,
      52590,
      14035,
      8553
    ]);
    var Y2 = gf2([
      26200,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214
    ]);
    var I3 = gf2([
      41136,
      18958,
      6951,
      50414,
      58488,
      44335,
      6150,
      12099,
      55207,
      15867,
      153,
      11085,
      57099,
      20417,
      9344,
      11139
    ]);
    function set25519(r3, a4) {
      for (let i4 = 0; i4 < 16; i4++) {
        r3[i4] = a4[i4] | 0;
      }
    }
    function car25519(o4) {
      let c5 = 1;
      for (let i4 = 0; i4 < 16; i4++) {
        let v3 = o4[i4] + c5 + 65535;
        c5 = Math.floor(v3 / 65536);
        o4[i4] = v3 - c5 * 65536;
      }
      o4[0] += c5 - 1 + 37 * (c5 - 1);
    }
    function sel25519(p3, q, b3) {
      const c5 = ~(b3 - 1);
      for (let i4 = 0; i4 < 16; i4++) {
        const t = c5 & (p3[i4] ^ q[i4]);
        p3[i4] ^= t;
        q[i4] ^= t;
      }
    }
    function pack25519(o4, n5) {
      const m2 = gf2();
      const t = gf2();
      for (let i4 = 0; i4 < 16; i4++) {
        t[i4] = n5[i4];
      }
      car25519(t);
      car25519(t);
      car25519(t);
      for (let j5 = 0; j5 < 2; j5++) {
        m2[0] = t[0] - 65517;
        for (let i4 = 1; i4 < 15; i4++) {
          m2[i4] = t[i4] - 65535 - (m2[i4 - 1] >> 16 & 1);
          m2[i4 - 1] &= 65535;
        }
        m2[15] = t[15] - 32767 - (m2[14] >> 16 & 1);
        const b3 = m2[15] >> 16 & 1;
        m2[14] &= 65535;
        sel25519(t, m2, 1 - b3);
      }
      for (let i4 = 0; i4 < 16; i4++) {
        o4[2 * i4] = t[i4] & 255;
        o4[2 * i4 + 1] = t[i4] >> 8;
      }
    }
    function verify32(x5, y6) {
      let d3 = 0;
      for (let i4 = 0; i4 < 32; i4++) {
        d3 |= x5[i4] ^ y6[i4];
      }
      return (1 & d3 - 1 >>> 8) - 1;
    }
    function neq25519(a4, b3) {
      const c5 = new Uint8Array(32);
      const d3 = new Uint8Array(32);
      pack25519(c5, a4);
      pack25519(d3, b3);
      return verify32(c5, d3);
    }
    function par25519(a4) {
      const d3 = new Uint8Array(32);
      pack25519(d3, a4);
      return d3[0] & 1;
    }
    function unpack25519(o4, n5) {
      for (let i4 = 0; i4 < 16; i4++) {
        o4[i4] = n5[2 * i4] + (n5[2 * i4 + 1] << 8);
      }
      o4[15] &= 32767;
    }
    function add(o4, a4, b3) {
      for (let i4 = 0; i4 < 16; i4++) {
        o4[i4] = a4[i4] + b3[i4];
      }
    }
    function sub(o4, a4, b3) {
      for (let i4 = 0; i4 < 16; i4++) {
        o4[i4] = a4[i4] - b3[i4];
      }
    }
    function mul(o4, a4, b3) {
      let v3, c5, t02 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b02 = b3[0], b1 = b3[1], b22 = b3[2], b32 = b3[3], b4 = b3[4], b5 = b3[5], b6 = b3[6], b7 = b3[7], b8 = b3[8], b9 = b3[9], b10 = b3[10], b11 = b3[11], b12 = b3[12], b13 = b3[13], b14 = b3[14], b15 = b3[15];
      v3 = a4[0];
      t02 += v3 * b02;
      t1 += v3 * b1;
      t2 += v3 * b22;
      t3 += v3 * b32;
      t4 += v3 * b4;
      t5 += v3 * b5;
      t6 += v3 * b6;
      t7 += v3 * b7;
      t8 += v3 * b8;
      t9 += v3 * b9;
      t10 += v3 * b10;
      t11 += v3 * b11;
      t12 += v3 * b12;
      t13 += v3 * b13;
      t14 += v3 * b14;
      t15 += v3 * b15;
      v3 = a4[1];
      t1 += v3 * b02;
      t2 += v3 * b1;
      t3 += v3 * b22;
      t4 += v3 * b32;
      t5 += v3 * b4;
      t6 += v3 * b5;
      t7 += v3 * b6;
      t8 += v3 * b7;
      t9 += v3 * b8;
      t10 += v3 * b9;
      t11 += v3 * b10;
      t12 += v3 * b11;
      t13 += v3 * b12;
      t14 += v3 * b13;
      t15 += v3 * b14;
      t16 += v3 * b15;
      v3 = a4[2];
      t2 += v3 * b02;
      t3 += v3 * b1;
      t4 += v3 * b22;
      t5 += v3 * b32;
      t6 += v3 * b4;
      t7 += v3 * b5;
      t8 += v3 * b6;
      t9 += v3 * b7;
      t10 += v3 * b8;
      t11 += v3 * b9;
      t12 += v3 * b10;
      t13 += v3 * b11;
      t14 += v3 * b12;
      t15 += v3 * b13;
      t16 += v3 * b14;
      t17 += v3 * b15;
      v3 = a4[3];
      t3 += v3 * b02;
      t4 += v3 * b1;
      t5 += v3 * b22;
      t6 += v3 * b32;
      t7 += v3 * b4;
      t8 += v3 * b5;
      t9 += v3 * b6;
      t10 += v3 * b7;
      t11 += v3 * b8;
      t12 += v3 * b9;
      t13 += v3 * b10;
      t14 += v3 * b11;
      t15 += v3 * b12;
      t16 += v3 * b13;
      t17 += v3 * b14;
      t18 += v3 * b15;
      v3 = a4[4];
      t4 += v3 * b02;
      t5 += v3 * b1;
      t6 += v3 * b22;
      t7 += v3 * b32;
      t8 += v3 * b4;
      t9 += v3 * b5;
      t10 += v3 * b6;
      t11 += v3 * b7;
      t12 += v3 * b8;
      t13 += v3 * b9;
      t14 += v3 * b10;
      t15 += v3 * b11;
      t16 += v3 * b12;
      t17 += v3 * b13;
      t18 += v3 * b14;
      t19 += v3 * b15;
      v3 = a4[5];
      t5 += v3 * b02;
      t6 += v3 * b1;
      t7 += v3 * b22;
      t8 += v3 * b32;
      t9 += v3 * b4;
      t10 += v3 * b5;
      t11 += v3 * b6;
      t12 += v3 * b7;
      t13 += v3 * b8;
      t14 += v3 * b9;
      t15 += v3 * b10;
      t16 += v3 * b11;
      t17 += v3 * b12;
      t18 += v3 * b13;
      t19 += v3 * b14;
      t20 += v3 * b15;
      v3 = a4[6];
      t6 += v3 * b02;
      t7 += v3 * b1;
      t8 += v3 * b22;
      t9 += v3 * b32;
      t10 += v3 * b4;
      t11 += v3 * b5;
      t12 += v3 * b6;
      t13 += v3 * b7;
      t14 += v3 * b8;
      t15 += v3 * b9;
      t16 += v3 * b10;
      t17 += v3 * b11;
      t18 += v3 * b12;
      t19 += v3 * b13;
      t20 += v3 * b14;
      t21 += v3 * b15;
      v3 = a4[7];
      t7 += v3 * b02;
      t8 += v3 * b1;
      t9 += v3 * b22;
      t10 += v3 * b32;
      t11 += v3 * b4;
      t12 += v3 * b5;
      t13 += v3 * b6;
      t14 += v3 * b7;
      t15 += v3 * b8;
      t16 += v3 * b9;
      t17 += v3 * b10;
      t18 += v3 * b11;
      t19 += v3 * b12;
      t20 += v3 * b13;
      t21 += v3 * b14;
      t22 += v3 * b15;
      v3 = a4[8];
      t8 += v3 * b02;
      t9 += v3 * b1;
      t10 += v3 * b22;
      t11 += v3 * b32;
      t12 += v3 * b4;
      t13 += v3 * b5;
      t14 += v3 * b6;
      t15 += v3 * b7;
      t16 += v3 * b8;
      t17 += v3 * b9;
      t18 += v3 * b10;
      t19 += v3 * b11;
      t20 += v3 * b12;
      t21 += v3 * b13;
      t22 += v3 * b14;
      t23 += v3 * b15;
      v3 = a4[9];
      t9 += v3 * b02;
      t10 += v3 * b1;
      t11 += v3 * b22;
      t12 += v3 * b32;
      t13 += v3 * b4;
      t14 += v3 * b5;
      t15 += v3 * b6;
      t16 += v3 * b7;
      t17 += v3 * b8;
      t18 += v3 * b9;
      t19 += v3 * b10;
      t20 += v3 * b11;
      t21 += v3 * b12;
      t22 += v3 * b13;
      t23 += v3 * b14;
      t24 += v3 * b15;
      v3 = a4[10];
      t10 += v3 * b02;
      t11 += v3 * b1;
      t12 += v3 * b22;
      t13 += v3 * b32;
      t14 += v3 * b4;
      t15 += v3 * b5;
      t16 += v3 * b6;
      t17 += v3 * b7;
      t18 += v3 * b8;
      t19 += v3 * b9;
      t20 += v3 * b10;
      t21 += v3 * b11;
      t22 += v3 * b12;
      t23 += v3 * b13;
      t24 += v3 * b14;
      t25 += v3 * b15;
      v3 = a4[11];
      t11 += v3 * b02;
      t12 += v3 * b1;
      t13 += v3 * b22;
      t14 += v3 * b32;
      t15 += v3 * b4;
      t16 += v3 * b5;
      t17 += v3 * b6;
      t18 += v3 * b7;
      t19 += v3 * b8;
      t20 += v3 * b9;
      t21 += v3 * b10;
      t22 += v3 * b11;
      t23 += v3 * b12;
      t24 += v3 * b13;
      t25 += v3 * b14;
      t26 += v3 * b15;
      v3 = a4[12];
      t12 += v3 * b02;
      t13 += v3 * b1;
      t14 += v3 * b22;
      t15 += v3 * b32;
      t16 += v3 * b4;
      t17 += v3 * b5;
      t18 += v3 * b6;
      t19 += v3 * b7;
      t20 += v3 * b8;
      t21 += v3 * b9;
      t22 += v3 * b10;
      t23 += v3 * b11;
      t24 += v3 * b12;
      t25 += v3 * b13;
      t26 += v3 * b14;
      t27 += v3 * b15;
      v3 = a4[13];
      t13 += v3 * b02;
      t14 += v3 * b1;
      t15 += v3 * b22;
      t16 += v3 * b32;
      t17 += v3 * b4;
      t18 += v3 * b5;
      t19 += v3 * b6;
      t20 += v3 * b7;
      t21 += v3 * b8;
      t22 += v3 * b9;
      t23 += v3 * b10;
      t24 += v3 * b11;
      t25 += v3 * b12;
      t26 += v3 * b13;
      t27 += v3 * b14;
      t28 += v3 * b15;
      v3 = a4[14];
      t14 += v3 * b02;
      t15 += v3 * b1;
      t16 += v3 * b22;
      t17 += v3 * b32;
      t18 += v3 * b4;
      t19 += v3 * b5;
      t20 += v3 * b6;
      t21 += v3 * b7;
      t22 += v3 * b8;
      t23 += v3 * b9;
      t24 += v3 * b10;
      t25 += v3 * b11;
      t26 += v3 * b12;
      t27 += v3 * b13;
      t28 += v3 * b14;
      t29 += v3 * b15;
      v3 = a4[15];
      t15 += v3 * b02;
      t16 += v3 * b1;
      t17 += v3 * b22;
      t18 += v3 * b32;
      t19 += v3 * b4;
      t20 += v3 * b5;
      t21 += v3 * b6;
      t22 += v3 * b7;
      t23 += v3 * b8;
      t24 += v3 * b9;
      t25 += v3 * b10;
      t26 += v3 * b11;
      t27 += v3 * b12;
      t28 += v3 * b13;
      t29 += v3 * b14;
      t30 += v3 * b15;
      t02 += 38 * t16;
      t1 += 38 * t17;
      t2 += 38 * t18;
      t3 += 38 * t19;
      t4 += 38 * t20;
      t5 += 38 * t21;
      t6 += 38 * t22;
      t7 += 38 * t23;
      t8 += 38 * t24;
      t9 += 38 * t25;
      t10 += 38 * t26;
      t11 += 38 * t27;
      t12 += 38 * t28;
      t13 += 38 * t29;
      t14 += 38 * t30;
      c5 = 1;
      v3 = t02 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t02 = v3 - c5 * 65536;
      v3 = t1 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t1 = v3 - c5 * 65536;
      v3 = t2 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t2 = v3 - c5 * 65536;
      v3 = t3 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t3 = v3 - c5 * 65536;
      v3 = t4 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t4 = v3 - c5 * 65536;
      v3 = t5 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t5 = v3 - c5 * 65536;
      v3 = t6 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t6 = v3 - c5 * 65536;
      v3 = t7 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t7 = v3 - c5 * 65536;
      v3 = t8 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t8 = v3 - c5 * 65536;
      v3 = t9 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t9 = v3 - c5 * 65536;
      v3 = t10 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t10 = v3 - c5 * 65536;
      v3 = t11 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t11 = v3 - c5 * 65536;
      v3 = t12 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t12 = v3 - c5 * 65536;
      v3 = t13 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t13 = v3 - c5 * 65536;
      v3 = t14 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t14 = v3 - c5 * 65536;
      v3 = t15 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t15 = v3 - c5 * 65536;
      t02 += c5 - 1 + 37 * (c5 - 1);
      c5 = 1;
      v3 = t02 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t02 = v3 - c5 * 65536;
      v3 = t1 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t1 = v3 - c5 * 65536;
      v3 = t2 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t2 = v3 - c5 * 65536;
      v3 = t3 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t3 = v3 - c5 * 65536;
      v3 = t4 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t4 = v3 - c5 * 65536;
      v3 = t5 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t5 = v3 - c5 * 65536;
      v3 = t6 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t6 = v3 - c5 * 65536;
      v3 = t7 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t7 = v3 - c5 * 65536;
      v3 = t8 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t8 = v3 - c5 * 65536;
      v3 = t9 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t9 = v3 - c5 * 65536;
      v3 = t10 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t10 = v3 - c5 * 65536;
      v3 = t11 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t11 = v3 - c5 * 65536;
      v3 = t12 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t12 = v3 - c5 * 65536;
      v3 = t13 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t13 = v3 - c5 * 65536;
      v3 = t14 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t14 = v3 - c5 * 65536;
      v3 = t15 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t15 = v3 - c5 * 65536;
      t02 += c5 - 1 + 37 * (c5 - 1);
      o4[0] = t02;
      o4[1] = t1;
      o4[2] = t2;
      o4[3] = t3;
      o4[4] = t4;
      o4[5] = t5;
      o4[6] = t6;
      o4[7] = t7;
      o4[8] = t8;
      o4[9] = t9;
      o4[10] = t10;
      o4[11] = t11;
      o4[12] = t12;
      o4[13] = t13;
      o4[14] = t14;
      o4[15] = t15;
    }
    function square(o4, a4) {
      mul(o4, a4, a4);
    }
    function inv25519(o4, i4) {
      const c5 = gf2();
      let a4;
      for (a4 = 0; a4 < 16; a4++) {
        c5[a4] = i4[a4];
      }
      for (a4 = 253; a4 >= 0; a4--) {
        square(c5, c5);
        if (a4 !== 2 && a4 !== 4) {
          mul(c5, c5, i4);
        }
      }
      for (a4 = 0; a4 < 16; a4++) {
        o4[a4] = c5[a4];
      }
    }
    function pow2523(o4, i4) {
      const c5 = gf2();
      let a4;
      for (a4 = 0; a4 < 16; a4++) {
        c5[a4] = i4[a4];
      }
      for (a4 = 250; a4 >= 0; a4--) {
        square(c5, c5);
        if (a4 !== 1) {
          mul(c5, c5, i4);
        }
      }
      for (a4 = 0; a4 < 16; a4++) {
        o4[a4] = c5[a4];
      }
    }
    function edadd(p3, q) {
      const a4 = gf2(), b3 = gf2(), c5 = gf2(), d3 = gf2(), e2 = gf2(), f4 = gf2(), g3 = gf2(), h5 = gf2(), t = gf2();
      sub(a4, p3[1], p3[0]);
      sub(t, q[1], q[0]);
      mul(a4, a4, t);
      add(b3, p3[0], p3[1]);
      add(t, q[0], q[1]);
      mul(b3, b3, t);
      mul(c5, p3[3], q[3]);
      mul(c5, c5, D22);
      mul(d3, p3[2], q[2]);
      add(d3, d3, d3);
      sub(e2, b3, a4);
      sub(f4, d3, c5);
      add(g3, d3, c5);
      add(h5, b3, a4);
      mul(p3[0], e2, f4);
      mul(p3[1], h5, g3);
      mul(p3[2], g3, f4);
      mul(p3[3], e2, h5);
    }
    function cswap(p3, q, b3) {
      for (let i4 = 0; i4 < 4; i4++) {
        sel25519(p3[i4], q[i4], b3);
      }
    }
    function pack(r3, p3) {
      const tx = gf2(), ty = gf2(), zi2 = gf2();
      inv25519(zi2, p3[2]);
      mul(tx, p3[0], zi2);
      mul(ty, p3[1], zi2);
      pack25519(r3, ty);
      r3[31] ^= par25519(tx) << 7;
    }
    function scalarmult(p3, q, s3) {
      set25519(p3[0], gf0);
      set25519(p3[1], gf1);
      set25519(p3[2], gf1);
      set25519(p3[3], gf0);
      for (let i4 = 255; i4 >= 0; --i4) {
        const b3 = s3[i4 / 8 | 0] >> (i4 & 7) & 1;
        cswap(p3, q, b3);
        edadd(q, p3);
        edadd(p3, p3);
        cswap(p3, q, b3);
      }
    }
    function scalarbase(p3, s3) {
      const q = [gf2(), gf2(), gf2(), gf2()];
      set25519(q[0], X2);
      set25519(q[1], Y2);
      set25519(q[2], gf1);
      mul(q[3], X2, Y2);
      scalarmult(p3, q, s3);
    }
    function generateKeyPairFromSeed2(seed) {
      if (seed.length !== exports.SEED_LENGTH) {
        throw new Error(`ed25519: seed must be ${exports.SEED_LENGTH} bytes`);
      }
      const d3 = (0, sha512_1.hash)(seed);
      d3[0] &= 248;
      d3[31] &= 127;
      d3[31] |= 64;
      const publicKey = new Uint8Array(32);
      const p3 = [gf2(), gf2(), gf2(), gf2()];
      scalarbase(p3, d3);
      pack(publicKey, p3);
      const secretKey = new Uint8Array(64);
      secretKey.set(seed);
      secretKey.set(publicKey, 32);
      return {
        publicKey,
        secretKey
      };
    }
    exports.generateKeyPairFromSeed = generateKeyPairFromSeed2;
    function generateKeyPair3(prng) {
      const seed = (0, random_1.randomBytes)(32, prng);
      const result = generateKeyPairFromSeed2(seed);
      (0, wipe_1.wipe)(seed);
      return result;
    }
    exports.generateKeyPair = generateKeyPair3;
    function extractPublicKeyFromSecretKey(secretKey) {
      if (secretKey.length !== exports.SECRET_KEY_LENGTH) {
        throw new Error(`ed25519: secret key must be ${exports.SECRET_KEY_LENGTH} bytes`);
      }
      return new Uint8Array(secretKey.subarray(32));
    }
    exports.extractPublicKeyFromSecretKey = extractPublicKeyFromSecretKey;
    var L4 = new Float64Array([
      237,
      211,
      245,
      92,
      26,
      99,
      18,
      88,
      214,
      156,
      247,
      162,
      222,
      249,
      222,
      20,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      16
    ]);
    function modL(r3, x5) {
      let carry;
      let i4;
      let j5;
      let k4;
      for (i4 = 63; i4 >= 32; --i4) {
        carry = 0;
        for (j5 = i4 - 32, k4 = i4 - 12; j5 < k4; ++j5) {
          x5[j5] += carry - 16 * x5[i4] * L4[j5 - (i4 - 32)];
          carry = Math.floor((x5[j5] + 128) / 256);
          x5[j5] -= carry * 256;
        }
        x5[j5] += carry;
        x5[i4] = 0;
      }
      carry = 0;
      for (j5 = 0; j5 < 32; j5++) {
        x5[j5] += carry - (x5[31] >> 4) * L4[j5];
        carry = x5[j5] >> 8;
        x5[j5] &= 255;
      }
      for (j5 = 0; j5 < 32; j5++) {
        x5[j5] -= carry * L4[j5];
      }
      for (i4 = 0; i4 < 32; i4++) {
        x5[i4 + 1] += x5[i4] >> 8;
        r3[i4] = x5[i4] & 255;
      }
    }
    function reduce(r3) {
      const x5 = new Float64Array(64);
      for (let i4 = 0; i4 < 64; i4++) {
        x5[i4] = r3[i4];
      }
      for (let i4 = 0; i4 < 64; i4++) {
        r3[i4] = 0;
      }
      modL(r3, x5);
    }
    function sign2(secretKey, message) {
      const x5 = new Float64Array(64);
      const p3 = [gf2(), gf2(), gf2(), gf2()];
      const d3 = (0, sha512_1.hash)(secretKey.subarray(0, 32));
      d3[0] &= 248;
      d3[31] &= 127;
      d3[31] |= 64;
      const signature = new Uint8Array(64);
      signature.set(d3.subarray(32), 32);
      const hs2 = new sha512_1.SHA512();
      hs2.update(signature.subarray(32));
      hs2.update(message);
      const r3 = hs2.digest();
      hs2.clean();
      reduce(r3);
      scalarbase(p3, r3);
      pack(signature, p3);
      hs2.reset();
      hs2.update(signature.subarray(0, 32));
      hs2.update(secretKey.subarray(32));
      hs2.update(message);
      const h5 = hs2.digest();
      reduce(h5);
      for (let i4 = 0; i4 < 32; i4++) {
        x5[i4] = r3[i4];
      }
      for (let i4 = 0; i4 < 32; i4++) {
        for (let j5 = 0; j5 < 32; j5++) {
          x5[i4 + j5] += h5[i4] * d3[j5];
        }
      }
      modL(signature.subarray(32), x5);
      return signature;
    }
    exports.sign = sign2;
    function unpackneg(r3, p3) {
      const t = gf2(), chk = gf2(), num = gf2(), den = gf2(), den2 = gf2(), den4 = gf2(), den6 = gf2();
      set25519(r3[2], gf1);
      unpack25519(r3[1], p3);
      square(num, r3[1]);
      mul(den, num, D2);
      sub(num, num, r3[2]);
      add(den, r3[2], den);
      square(den2, den);
      square(den4, den2);
      mul(den6, den4, den2);
      mul(t, den6, num);
      mul(t, t, den);
      pow2523(t, t);
      mul(t, t, num);
      mul(t, t, den);
      mul(t, t, den);
      mul(r3[0], t, den);
      square(chk, r3[0]);
      mul(chk, chk, den);
      if (neq25519(chk, num)) {
        mul(r3[0], r3[0], I3);
      }
      square(chk, r3[0]);
      mul(chk, chk, den);
      if (neq25519(chk, num)) {
        return -1;
      }
      if (par25519(r3[0]) === p3[31] >> 7) {
        sub(r3[0], gf0, r3[0]);
      }
      mul(r3[3], r3[0], r3[1]);
      return 0;
    }
    function verify2(publicKey, message, signature) {
      const t = new Uint8Array(32);
      const p3 = [gf2(), gf2(), gf2(), gf2()];
      const q = [gf2(), gf2(), gf2(), gf2()];
      if (signature.length !== exports.SIGNATURE_LENGTH) {
        throw new Error(`ed25519: signature must be ${exports.SIGNATURE_LENGTH} bytes`);
      }
      if (unpackneg(q, publicKey)) {
        return false;
      }
      const hs2 = new sha512_1.SHA512();
      hs2.update(signature.subarray(0, 32));
      hs2.update(publicKey);
      hs2.update(message);
      const h5 = hs2.digest();
      reduce(h5);
      scalarmult(p3, q, h5);
      scalarbase(q, signature.subarray(32));
      edadd(p3, q);
      pack(t, p3);
      if (verify32(signature, t)) {
        return false;
      }
      return true;
    }
    exports.verify = verify2;
    function convertPublicKeyToX25519(publicKey) {
      let q = [gf2(), gf2(), gf2(), gf2()];
      if (unpackneg(q, publicKey)) {
        throw new Error("Ed25519: invalid public key");
      }
      let a4 = gf2();
      let b3 = gf2();
      let y6 = q[1];
      add(a4, gf1, y6);
      sub(b3, gf1, y6);
      inv25519(b3, b3);
      mul(a4, a4, b3);
      let z3 = new Uint8Array(32);
      pack25519(z3, a4);
      return z3;
    }
    exports.convertPublicKeyToX25519 = convertPublicKeyToX25519;
    function convertSecretKeyToX25519(secretKey) {
      const d3 = (0, sha512_1.hash)(secretKey.subarray(0, 32));
      d3[0] &= 248;
      d3[31] &= 127;
      d3[31] |= 64;
      const o4 = new Uint8Array(d3.subarray(0, 32));
      (0, wipe_1.wipe)(d3);
      return o4;
    }
    exports.convertSecretKeyToX25519 = convertSecretKeyToX25519;
  }
});

// node_modules/@walletconnect/window-getters/dist/cjs/index.js
var require_cjs2 = __commonJS({
  "node_modules/@walletconnect/window-getters/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;
    function getFromWindow(name2) {
      let res = void 0;
      if (typeof window !== "undefined" && typeof window[name2] !== "undefined") {
        res = window[name2];
      }
      return res;
    }
    exports.getFromWindow = getFromWindow;
    function getFromWindowOrThrow(name2) {
      const res = getFromWindow(name2);
      if (!res) {
        throw new Error(`${name2} is not defined in Window`);
      }
      return res;
    }
    exports.getFromWindowOrThrow = getFromWindowOrThrow;
    function getDocumentOrThrow() {
      return getFromWindowOrThrow("document");
    }
    exports.getDocumentOrThrow = getDocumentOrThrow;
    function getDocument() {
      return getFromWindow("document");
    }
    exports.getDocument = getDocument;
    function getNavigatorOrThrow() {
      return getFromWindowOrThrow("navigator");
    }
    exports.getNavigatorOrThrow = getNavigatorOrThrow;
    function getNavigator() {
      return getFromWindow("navigator");
    }
    exports.getNavigator = getNavigator;
    function getLocationOrThrow() {
      return getFromWindowOrThrow("location");
    }
    exports.getLocationOrThrow = getLocationOrThrow;
    function getLocation() {
      return getFromWindow("location");
    }
    exports.getLocation = getLocation;
    function getCryptoOrThrow() {
      return getFromWindowOrThrow("crypto");
    }
    exports.getCryptoOrThrow = getCryptoOrThrow;
    function getCrypto() {
      return getFromWindow("crypto");
    }
    exports.getCrypto = getCrypto;
    function getLocalStorageOrThrow() {
      return getFromWindowOrThrow("localStorage");
    }
    exports.getLocalStorageOrThrow = getLocalStorageOrThrow;
    function getLocalStorage() {
      return getFromWindow("localStorage");
    }
    exports.getLocalStorage = getLocalStorage;
  }
});

// node_modules/@walletconnect/window-metadata/dist/cjs/index.js
var require_cjs3 = __commonJS({
  "node_modules/@walletconnect/window-metadata/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getWindowMetadata = void 0;
    var window_getters_1 = require_cjs2();
    function getWindowMetadata() {
      let doc;
      let loc;
      try {
        doc = window_getters_1.getDocumentOrThrow();
        loc = window_getters_1.getLocationOrThrow();
      } catch (e2) {
        return null;
      }
      function getIcons() {
        const links = doc.getElementsByTagName("link");
        const icons2 = [];
        for (let i4 = 0; i4 < links.length; i4++) {
          const link = links[i4];
          const rel = link.getAttribute("rel");
          if (rel) {
            if (rel.toLowerCase().indexOf("icon") > -1) {
              const href = link.getAttribute("href");
              if (href) {
                if (href.toLowerCase().indexOf("https:") === -1 && href.toLowerCase().indexOf("http:") === -1 && href.indexOf("//") !== 0) {
                  let absoluteHref = loc.protocol + "//" + loc.host;
                  if (href.indexOf("/") === 0) {
                    absoluteHref += href;
                  } else {
                    const path = loc.pathname.split("/");
                    path.pop();
                    const finalPath = path.join("/");
                    absoluteHref += finalPath + "/" + href;
                  }
                  icons2.push(absoluteHref);
                } else if (href.indexOf("//") === 0) {
                  const absoluteUrl = loc.protocol + href;
                  icons2.push(absoluteUrl);
                } else {
                  icons2.push(href);
                }
              }
            }
          }
        }
        return icons2;
      }
      function getWindowMetadataOfAny(...args) {
        const metaTags = doc.getElementsByTagName("meta");
        for (let i4 = 0; i4 < metaTags.length; i4++) {
          const tag = metaTags[i4];
          const attributes = ["itemprop", "property", "name"].map((target) => tag.getAttribute(target)).filter((attr) => {
            if (attr) {
              return args.includes(attr);
            }
            return false;
          });
          if (attributes.length && attributes) {
            const content = tag.getAttribute("content");
            if (content) {
              return content;
            }
          }
        }
        return "";
      }
      function getName() {
        let name3 = getWindowMetadataOfAny("name", "og:site_name", "og:title", "twitter:title");
        if (!name3) {
          name3 = doc.title;
        }
        return name3;
      }
      function getDescription() {
        const description2 = getWindowMetadataOfAny("description", "og:description", "twitter:description", "keywords");
        return description2;
      }
      const name2 = getName();
      const description = getDescription();
      const url = loc.origin;
      const icons = getIcons();
      const meta = {
        description,
        url,
        icons,
        name: name2
      };
      return meta;
    }
    exports.getWindowMetadata = getWindowMetadata;
  }
});

// node_modules/strict-uri-encode/index.js
var require_strict_uri_encode = __commonJS({
  "node_modules/strict-uri-encode/index.js"(exports, module) {
    "use strict";
    module.exports = (str) => encodeURIComponent(str).replace(/[!'()*]/g, (x5) => `%${x5.charCodeAt(0).toString(16).toUpperCase()}`);
  }
});

// node_modules/decode-uri-component/index.js
var require_decode_uri_component = __commonJS({
  "node_modules/decode-uri-component/index.js"(exports, module) {
    "use strict";
    var token = "%[a-f0-9]{2}";
    var singleMatcher = new RegExp("(" + token + ")|([^%]+?)", "gi");
    var multiMatcher = new RegExp("(" + token + ")+", "gi");
    function decodeComponents(components, split) {
      try {
        return [decodeURIComponent(components.join(""))];
      } catch (err) {
      }
      if (components.length === 1) {
        return components;
      }
      split = split || 1;
      var left = components.slice(0, split);
      var right = components.slice(split);
      return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
    }
    function decode6(input) {
      try {
        return decodeURIComponent(input);
      } catch (err) {
        var tokens = input.match(singleMatcher) || [];
        for (var i4 = 1; i4 < tokens.length; i4++) {
          input = decodeComponents(tokens, i4).join("");
          tokens = input.match(singleMatcher) || [];
        }
        return input;
      }
    }
    function customDecodeURIComponent(input) {
      var replaceMap = {
        "%FE%FF": "��",
        "%FF%FE": "��"
      };
      var match = multiMatcher.exec(input);
      while (match) {
        try {
          replaceMap[match[0]] = decodeURIComponent(match[0]);
        } catch (err) {
          var result = decode6(match[0]);
          if (result !== match[0]) {
            replaceMap[match[0]] = result;
          }
        }
        match = multiMatcher.exec(input);
      }
      replaceMap["%C2"] = "�";
      var entries = Object.keys(replaceMap);
      for (var i4 = 0; i4 < entries.length; i4++) {
        var key = entries[i4];
        input = input.replace(new RegExp(key, "g"), replaceMap[key]);
      }
      return input;
    }
    module.exports = function(encodedURI) {
      if (typeof encodedURI !== "string") {
        throw new TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof encodedURI + "`");
      }
      try {
        encodedURI = encodedURI.replace(/\+/g, " ");
        return decodeURIComponent(encodedURI);
      } catch (err) {
        return customDecodeURIComponent(encodedURI);
      }
    };
  }
});

// node_modules/split-on-first/index.js
var require_split_on_first = __commonJS({
  "node_modules/split-on-first/index.js"(exports, module) {
    "use strict";
    module.exports = (string3, separator) => {
      if (!(typeof string3 === "string" && typeof separator === "string")) {
        throw new TypeError("Expected the arguments to be of type `string`");
      }
      if (separator === "") {
        return [string3];
      }
      const separatorIndex = string3.indexOf(separator);
      if (separatorIndex === -1) {
        return [string3];
      }
      return [
        string3.slice(0, separatorIndex),
        string3.slice(separatorIndex + separator.length)
      ];
    };
  }
});

// node_modules/filter-obj/index.js
var require_filter_obj = __commonJS({
  "node_modules/filter-obj/index.js"(exports, module) {
    "use strict";
    module.exports = function(obj, predicate) {
      var ret = {};
      var keys2 = Object.keys(obj);
      var isArr = Array.isArray(predicate);
      for (var i4 = 0; i4 < keys2.length; i4++) {
        var key = keys2[i4];
        var val = obj[key];
        if (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {
          ret[key] = val;
        }
      }
      return ret;
    };
  }
});

// node_modules/query-string/index.js
var require_query_string = __commonJS({
  "node_modules/query-string/index.js"(exports) {
    "use strict";
    var strictUriEncode = require_strict_uri_encode();
    var decodeComponent = require_decode_uri_component();
    var splitOnFirst = require_split_on_first();
    var filterObject = require_filter_obj();
    var isNullOrUndefined = (value) => value === null || value === void 0;
    var encodeFragmentIdentifier = Symbol("encodeFragmentIdentifier");
    function encoderForArrayFormat(options) {
      switch (options.arrayFormat) {
        case "index":
          return (key) => (result, value) => {
            const index = result.length;
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), "[", index, "]"].join("")];
            }
            return [
              ...result,
              [encode5(key, options), "[", encode5(index, options), "]=", encode5(value, options)].join("")
            ];
          };
        case "bracket":
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), "[]"].join("")];
            }
            return [...result, [encode5(key, options), "[]=", encode5(value, options)].join("")];
          };
        case "colon-list-separator":
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), ":list="].join("")];
            }
            return [...result, [encode5(key, options), ":list=", encode5(value, options)].join("")];
          };
        case "comma":
        case "separator":
        case "bracket-separator": {
          const keyValueSep = options.arrayFormat === "bracket-separator" ? "[]=" : "=";
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            value = value === null ? "" : value;
            if (result.length === 0) {
              return [[encode5(key, options), keyValueSep, encode5(value, options)].join("")];
            }
            return [[result, encode5(value, options)].join(options.arrayFormatSeparator)];
          };
        }
        default:
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, encode5(key, options)];
            }
            return [...result, [encode5(key, options), "=", encode5(value, options)].join("")];
          };
      }
    }
    function parserForArrayFormat(options) {
      let result;
      switch (options.arrayFormat) {
        case "index":
          return (key, value, accumulator) => {
            result = /\[(\d*)\]$/.exec(key);
            key = key.replace(/\[\d*\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = {};
            }
            accumulator[key][result[1]] = value;
          };
        case "bracket":
          return (key, value, accumulator) => {
            result = /(\[\])$/.exec(key);
            key = key.replace(/\[\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = [value];
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
        case "colon-list-separator":
          return (key, value, accumulator) => {
            result = /(:list)$/.exec(key);
            key = key.replace(/:list$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = [value];
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
        case "comma":
        case "separator":
          return (key, value, accumulator) => {
            const isArray = typeof value === "string" && value.includes(options.arrayFormatSeparator);
            const isEncodedArray = typeof value === "string" && !isArray && decode6(value, options).includes(options.arrayFormatSeparator);
            value = isEncodedArray ? decode6(value, options) : value;
            const newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map((item) => decode6(item, options)) : value === null ? value : decode6(value, options);
            accumulator[key] = newValue;
          };
        case "bracket-separator":
          return (key, value, accumulator) => {
            const isArray = /(\[\])$/.test(key);
            key = key.replace(/\[\]$/, "");
            if (!isArray) {
              accumulator[key] = value ? decode6(value, options) : value;
              return;
            }
            const arrayValue = value === null ? [] : value.split(options.arrayFormatSeparator).map((item) => decode6(item, options));
            if (accumulator[key] === void 0) {
              accumulator[key] = arrayValue;
              return;
            }
            accumulator[key] = [].concat(accumulator[key], arrayValue);
          };
        default:
          return (key, value, accumulator) => {
            if (accumulator[key] === void 0) {
              accumulator[key] = value;
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
      }
    }
    function validateArrayFormatSeparator(value) {
      if (typeof value !== "string" || value.length !== 1) {
        throw new TypeError("arrayFormatSeparator must be single character string");
      }
    }
    function encode5(value, options) {
      if (options.encode) {
        return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
      }
      return value;
    }
    function decode6(value, options) {
      if (options.decode) {
        return decodeComponent(value);
      }
      return value;
    }
    function keysSorter(input) {
      if (Array.isArray(input)) {
        return input.sort();
      }
      if (typeof input === "object") {
        return keysSorter(Object.keys(input)).sort((a4, b3) => Number(a4) - Number(b3)).map((key) => input[key]);
      }
      return input;
    }
    function removeHash(input) {
      const hashStart = input.indexOf("#");
      if (hashStart !== -1) {
        input = input.slice(0, hashStart);
      }
      return input;
    }
    function getHash(url) {
      let hash = "";
      const hashStart = url.indexOf("#");
      if (hashStart !== -1) {
        hash = url.slice(hashStart);
      }
      return hash;
    }
    function extract(input) {
      input = removeHash(input);
      const queryStart = input.indexOf("?");
      if (queryStart === -1) {
        return "";
      }
      return input.slice(queryStart + 1);
    }
    function parseValue(value, options) {
      if (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === "string" && value.trim() !== "")) {
        value = Number(value);
      } else if (options.parseBooleans && value !== null && (value.toLowerCase() === "true" || value.toLowerCase() === "false")) {
        value = value.toLowerCase() === "true";
      }
      return value;
    }
    function parse2(query, options) {
      options = Object.assign({
        decode: true,
        sort: true,
        arrayFormat: "none",
        arrayFormatSeparator: ",",
        parseNumbers: false,
        parseBooleans: false
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const formatter = parserForArrayFormat(options);
      const ret = /* @__PURE__ */ Object.create(null);
      if (typeof query !== "string") {
        return ret;
      }
      query = query.trim().replace(/^[?#&]/, "");
      if (!query) {
        return ret;
      }
      for (const param of query.split("&")) {
        if (param === "") {
          continue;
        }
        let [key, value] = splitOnFirst(options.decode ? param.replace(/\+/g, " ") : param, "=");
        value = value === void 0 ? null : ["comma", "separator", "bracket-separator"].includes(options.arrayFormat) ? value : decode6(value, options);
        formatter(decode6(key, options), value, ret);
      }
      for (const key of Object.keys(ret)) {
        const value = ret[key];
        if (typeof value === "object" && value !== null) {
          for (const k4 of Object.keys(value)) {
            value[k4] = parseValue(value[k4], options);
          }
        } else {
          ret[key] = parseValue(value, options);
        }
      }
      if (options.sort === false) {
        return ret;
      }
      return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {
        const value = ret[key];
        if (Boolean(value) && typeof value === "object" && !Array.isArray(value)) {
          result[key] = keysSorter(value);
        } else {
          result[key] = value;
        }
        return result;
      }, /* @__PURE__ */ Object.create(null));
    }
    exports.extract = extract;
    exports.parse = parse2;
    exports.stringify = (object, options) => {
      if (!object) {
        return "";
      }
      options = Object.assign({
        encode: true,
        strict: true,
        arrayFormat: "none",
        arrayFormatSeparator: ","
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const shouldFilter = (key) => options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === "";
      const formatter = encoderForArrayFormat(options);
      const objectCopy = {};
      for (const key of Object.keys(object)) {
        if (!shouldFilter(key)) {
          objectCopy[key] = object[key];
        }
      }
      const keys2 = Object.keys(objectCopy);
      if (options.sort !== false) {
        keys2.sort(options.sort);
      }
      return keys2.map((key) => {
        const value = object[key];
        if (value === void 0) {
          return "";
        }
        if (value === null) {
          return encode5(key, options);
        }
        if (Array.isArray(value)) {
          if (value.length === 0 && options.arrayFormat === "bracket-separator") {
            return encode5(key, options) + "[]";
          }
          return value.reduce(formatter(key), []).join("&");
        }
        return encode5(key, options) + "=" + encode5(value, options);
      }).filter((x5) => x5.length > 0).join("&");
    };
    exports.parseUrl = (url, options) => {
      options = Object.assign({
        decode: true
      }, options);
      const [url_, hash] = splitOnFirst(url, "#");
      return Object.assign(
        {
          url: url_.split("?")[0] || "",
          query: parse2(extract(url), options)
        },
        options && options.parseFragmentIdentifier && hash ? { fragmentIdentifier: decode6(hash, options) } : {}
      );
    };
    exports.stringifyUrl = (object, options) => {
      options = Object.assign({
        encode: true,
        strict: true,
        [encodeFragmentIdentifier]: true
      }, options);
      const url = removeHash(object.url).split("?")[0] || "";
      const queryFromUrl = exports.extract(object.url);
      const parsedQueryFromUrl = exports.parse(queryFromUrl, { sort: false });
      const query = Object.assign(parsedQueryFromUrl, object.query);
      let queryString = exports.stringify(query, options);
      if (queryString) {
        queryString = `?${queryString}`;
      }
      let hash = getHash(object.url);
      if (object.fragmentIdentifier) {
        hash = `#${options[encodeFragmentIdentifier] ? encode5(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;
      }
      return `${url}${queryString}${hash}`;
    };
    exports.pick = (input, filter, options) => {
      options = Object.assign({
        parseFragmentIdentifier: true,
        [encodeFragmentIdentifier]: false
      }, options);
      const { url, query, fragmentIdentifier } = exports.parseUrl(input, options);
      return exports.stringifyUrl({
        url,
        query: filterObject(query, filter),
        fragmentIdentifier
      }, options);
    };
    exports.exclude = (input, filter, options) => {
      const exclusionFilter = Array.isArray(filter) ? (key) => !filter.includes(key) : (key, value) => !filter(key, value);
      return exports.pick(input, exclusionFilter, options);
    };
  }
});

// node_modules/@stablelib/chacha/lib/chacha.js
var require_chacha = __commonJS({
  "node_modules/@stablelib/chacha/lib/chacha.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    var ROUNDS = 20;
    function core(out, input, key) {
      var j02 = 1634760805;
      var j1 = 857760878;
      var j22 = 2036477234;
      var j32 = 1797285236;
      var j42 = key[3] << 24 | key[2] << 16 | key[1] << 8 | key[0];
      var j5 = key[7] << 24 | key[6] << 16 | key[5] << 8 | key[4];
      var j6 = key[11] << 24 | key[10] << 16 | key[9] << 8 | key[8];
      var j7 = key[15] << 24 | key[14] << 16 | key[13] << 8 | key[12];
      var j8 = key[19] << 24 | key[18] << 16 | key[17] << 8 | key[16];
      var j9 = key[23] << 24 | key[22] << 16 | key[21] << 8 | key[20];
      var j10 = key[27] << 24 | key[26] << 16 | key[25] << 8 | key[24];
      var j11 = key[31] << 24 | key[30] << 16 | key[29] << 8 | key[28];
      var j12 = input[3] << 24 | input[2] << 16 | input[1] << 8 | input[0];
      var j13 = input[7] << 24 | input[6] << 16 | input[5] << 8 | input[4];
      var j14 = input[11] << 24 | input[10] << 16 | input[9] << 8 | input[8];
      var j15 = input[15] << 24 | input[14] << 16 | input[13] << 8 | input[12];
      var x02 = j02;
      var x1 = j1;
      var x22 = j22;
      var x32 = j32;
      var x42 = j42;
      var x5 = j5;
      var x6 = j6;
      var x7 = j7;
      var x8 = j8;
      var x9 = j9;
      var x10 = j10;
      var x11 = j11;
      var x12 = j12;
      var x13 = j13;
      var x14 = j14;
      var x15 = j15;
      for (var i4 = 0; i4 < ROUNDS; i4 += 2) {
        x02 = x02 + x42 | 0;
        x12 ^= x02;
        x12 = x12 >>> 32 - 16 | x12 << 16;
        x8 = x8 + x12 | 0;
        x42 ^= x8;
        x42 = x42 >>> 32 - 12 | x42 << 12;
        x1 = x1 + x5 | 0;
        x13 ^= x1;
        x13 = x13 >>> 32 - 16 | x13 << 16;
        x9 = x9 + x13 | 0;
        x5 ^= x9;
        x5 = x5 >>> 32 - 12 | x5 << 12;
        x22 = x22 + x6 | 0;
        x14 ^= x22;
        x14 = x14 >>> 32 - 16 | x14 << 16;
        x10 = x10 + x14 | 0;
        x6 ^= x10;
        x6 = x6 >>> 32 - 12 | x6 << 12;
        x32 = x32 + x7 | 0;
        x15 ^= x32;
        x15 = x15 >>> 32 - 16 | x15 << 16;
        x11 = x11 + x15 | 0;
        x7 ^= x11;
        x7 = x7 >>> 32 - 12 | x7 << 12;
        x22 = x22 + x6 | 0;
        x14 ^= x22;
        x14 = x14 >>> 32 - 8 | x14 << 8;
        x10 = x10 + x14 | 0;
        x6 ^= x10;
        x6 = x6 >>> 32 - 7 | x6 << 7;
        x32 = x32 + x7 | 0;
        x15 ^= x32;
        x15 = x15 >>> 32 - 8 | x15 << 8;
        x11 = x11 + x15 | 0;
        x7 ^= x11;
        x7 = x7 >>> 32 - 7 | x7 << 7;
        x1 = x1 + x5 | 0;
        x13 ^= x1;
        x13 = x13 >>> 32 - 8 | x13 << 8;
        x9 = x9 + x13 | 0;
        x5 ^= x9;
        x5 = x5 >>> 32 - 7 | x5 << 7;
        x02 = x02 + x42 | 0;
        x12 ^= x02;
        x12 = x12 >>> 32 - 8 | x12 << 8;
        x8 = x8 + x12 | 0;
        x42 ^= x8;
        x42 = x42 >>> 32 - 7 | x42 << 7;
        x02 = x02 + x5 | 0;
        x15 ^= x02;
        x15 = x15 >>> 32 - 16 | x15 << 16;
        x10 = x10 + x15 | 0;
        x5 ^= x10;
        x5 = x5 >>> 32 - 12 | x5 << 12;
        x1 = x1 + x6 | 0;
        x12 ^= x1;
        x12 = x12 >>> 32 - 16 | x12 << 16;
        x11 = x11 + x12 | 0;
        x6 ^= x11;
        x6 = x6 >>> 32 - 12 | x6 << 12;
        x22 = x22 + x7 | 0;
        x13 ^= x22;
        x13 = x13 >>> 32 - 16 | x13 << 16;
        x8 = x8 + x13 | 0;
        x7 ^= x8;
        x7 = x7 >>> 32 - 12 | x7 << 12;
        x32 = x32 + x42 | 0;
        x14 ^= x32;
        x14 = x14 >>> 32 - 16 | x14 << 16;
        x9 = x9 + x14 | 0;
        x42 ^= x9;
        x42 = x42 >>> 32 - 12 | x42 << 12;
        x22 = x22 + x7 | 0;
        x13 ^= x22;
        x13 = x13 >>> 32 - 8 | x13 << 8;
        x8 = x8 + x13 | 0;
        x7 ^= x8;
        x7 = x7 >>> 32 - 7 | x7 << 7;
        x32 = x32 + x42 | 0;
        x14 ^= x32;
        x14 = x14 >>> 32 - 8 | x14 << 8;
        x9 = x9 + x14 | 0;
        x42 ^= x9;
        x42 = x42 >>> 32 - 7 | x42 << 7;
        x1 = x1 + x6 | 0;
        x12 ^= x1;
        x12 = x12 >>> 32 - 8 | x12 << 8;
        x11 = x11 + x12 | 0;
        x6 ^= x11;
        x6 = x6 >>> 32 - 7 | x6 << 7;
        x02 = x02 + x5 | 0;
        x15 ^= x02;
        x15 = x15 >>> 32 - 8 | x15 << 8;
        x10 = x10 + x15 | 0;
        x5 ^= x10;
        x5 = x5 >>> 32 - 7 | x5 << 7;
      }
      binary_1.writeUint32LE(x02 + j02 | 0, out, 0);
      binary_1.writeUint32LE(x1 + j1 | 0, out, 4);
      binary_1.writeUint32LE(x22 + j22 | 0, out, 8);
      binary_1.writeUint32LE(x32 + j32 | 0, out, 12);
      binary_1.writeUint32LE(x42 + j42 | 0, out, 16);
      binary_1.writeUint32LE(x5 + j5 | 0, out, 20);
      binary_1.writeUint32LE(x6 + j6 | 0, out, 24);
      binary_1.writeUint32LE(x7 + j7 | 0, out, 28);
      binary_1.writeUint32LE(x8 + j8 | 0, out, 32);
      binary_1.writeUint32LE(x9 + j9 | 0, out, 36);
      binary_1.writeUint32LE(x10 + j10 | 0, out, 40);
      binary_1.writeUint32LE(x11 + j11 | 0, out, 44);
      binary_1.writeUint32LE(x12 + j12 | 0, out, 48);
      binary_1.writeUint32LE(x13 + j13 | 0, out, 52);
      binary_1.writeUint32LE(x14 + j14 | 0, out, 56);
      binary_1.writeUint32LE(x15 + j15 | 0, out, 60);
    }
    function streamXOR(key, nonce, src2, dst, nonceInplaceCounterLength) {
      if (nonceInplaceCounterLength === void 0) {
        nonceInplaceCounterLength = 0;
      }
      if (key.length !== 32) {
        throw new Error("ChaCha: key size must be 32 bytes");
      }
      if (dst.length < src2.length) {
        throw new Error("ChaCha: destination is shorter than source");
      }
      var nc;
      var counterLength;
      if (nonceInplaceCounterLength === 0) {
        if (nonce.length !== 8 && nonce.length !== 12) {
          throw new Error("ChaCha nonce must be 8 or 12 bytes");
        }
        nc = new Uint8Array(16);
        counterLength = nc.length - nonce.length;
        nc.set(nonce, counterLength);
      } else {
        if (nonce.length !== 16) {
          throw new Error("ChaCha nonce with counter must be 16 bytes");
        }
        nc = nonce;
        counterLength = nonceInplaceCounterLength;
      }
      var block = new Uint8Array(64);
      for (var i4 = 0; i4 < src2.length; i4 += 64) {
        core(block, nc, key);
        for (var j5 = i4; j5 < i4 + 64 && j5 < src2.length; j5++) {
          dst[j5] = src2[j5] ^ block[j5 - i4];
        }
        incrementCounter(nc, 0, counterLength);
      }
      wipe_1.wipe(block);
      if (nonceInplaceCounterLength === 0) {
        wipe_1.wipe(nc);
      }
      return dst;
    }
    exports.streamXOR = streamXOR;
    function stream(key, nonce, dst, nonceInplaceCounterLength) {
      if (nonceInplaceCounterLength === void 0) {
        nonceInplaceCounterLength = 0;
      }
      wipe_1.wipe(dst);
      return streamXOR(key, nonce, dst, dst, nonceInplaceCounterLength);
    }
    exports.stream = stream;
    function incrementCounter(counter, pos, len) {
      var carry = 1;
      while (len--) {
        carry = carry + (counter[pos] & 255) | 0;
        counter[pos] = carry & 255;
        carry >>>= 8;
        pos++;
      }
      if (carry > 0) {
        throw new Error("ChaCha: counter overflow");
      }
    }
  }
});

// node_modules/@stablelib/constant-time/lib/constant-time.js
var require_constant_time = __commonJS({
  "node_modules/@stablelib/constant-time/lib/constant-time.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function select(subject, resultIfOne, resultIfZero) {
      return ~(subject - 1) & resultIfOne | subject - 1 & resultIfZero;
    }
    exports.select = select;
    function lessOrEqual(a4, b3) {
      return (a4 | 0) - (b3 | 0) - 1 >>> 31 & 1;
    }
    exports.lessOrEqual = lessOrEqual;
    function compare2(a4, b3) {
      if (a4.length !== b3.length) {
        return 0;
      }
      var result = 0;
      for (var i4 = 0; i4 < a4.length; i4++) {
        result |= a4[i4] ^ b3[i4];
      }
      return 1 & result - 1 >>> 8;
    }
    exports.compare = compare2;
    function equal(a4, b3) {
      if (a4.length === 0 || b3.length === 0) {
        return false;
      }
      return compare2(a4, b3) !== 0;
    }
    exports.equal = equal;
  }
});

// node_modules/@stablelib/poly1305/lib/poly1305.js
var require_poly1305 = __commonJS({
  "node_modules/@stablelib/poly1305/lib/poly1305.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var constant_time_1 = require_constant_time();
    var wipe_1 = require_wipe();
    exports.DIGEST_LENGTH = 16;
    var Poly1305 = (
      /** @class */
      function() {
        function Poly13052(key) {
          this.digestLength = exports.DIGEST_LENGTH;
          this._buffer = new Uint8Array(16);
          this._r = new Uint16Array(10);
          this._h = new Uint16Array(10);
          this._pad = new Uint16Array(8);
          this._leftover = 0;
          this._fin = 0;
          this._finished = false;
          var t02 = key[0] | key[1] << 8;
          this._r[0] = t02 & 8191;
          var t1 = key[2] | key[3] << 8;
          this._r[1] = (t02 >>> 13 | t1 << 3) & 8191;
          var t2 = key[4] | key[5] << 8;
          this._r[2] = (t1 >>> 10 | t2 << 6) & 7939;
          var t3 = key[6] | key[7] << 8;
          this._r[3] = (t2 >>> 7 | t3 << 9) & 8191;
          var t4 = key[8] | key[9] << 8;
          this._r[4] = (t3 >>> 4 | t4 << 12) & 255;
          this._r[5] = t4 >>> 1 & 8190;
          var t5 = key[10] | key[11] << 8;
          this._r[6] = (t4 >>> 14 | t5 << 2) & 8191;
          var t6 = key[12] | key[13] << 8;
          this._r[7] = (t5 >>> 11 | t6 << 5) & 8065;
          var t7 = key[14] | key[15] << 8;
          this._r[8] = (t6 >>> 8 | t7 << 8) & 8191;
          this._r[9] = t7 >>> 5 & 127;
          this._pad[0] = key[16] | key[17] << 8;
          this._pad[1] = key[18] | key[19] << 8;
          this._pad[2] = key[20] | key[21] << 8;
          this._pad[3] = key[22] | key[23] << 8;
          this._pad[4] = key[24] | key[25] << 8;
          this._pad[5] = key[26] | key[27] << 8;
          this._pad[6] = key[28] | key[29] << 8;
          this._pad[7] = key[30] | key[31] << 8;
        }
        Poly13052.prototype._blocks = function(m2, mpos, bytes) {
          var hibit = this._fin ? 0 : 1 << 11;
          var h02 = this._h[0], h1 = this._h[1], h22 = this._h[2], h32 = this._h[3], h42 = this._h[4], h5 = this._h[5], h6 = this._h[6], h7 = this._h[7], h8 = this._h[8], h9 = this._h[9];
          var r02 = this._r[0], r1 = this._r[1], r22 = this._r[2], r3 = this._r[3], r4 = this._r[4], r5 = this._r[5], r6 = this._r[6], r7 = this._r[7], r8 = this._r[8], r9 = this._r[9];
          while (bytes >= 16) {
            var t02 = m2[mpos + 0] | m2[mpos + 1] << 8;
            h02 += t02 & 8191;
            var t1 = m2[mpos + 2] | m2[mpos + 3] << 8;
            h1 += (t02 >>> 13 | t1 << 3) & 8191;
            var t2 = m2[mpos + 4] | m2[mpos + 5] << 8;
            h22 += (t1 >>> 10 | t2 << 6) & 8191;
            var t3 = m2[mpos + 6] | m2[mpos + 7] << 8;
            h32 += (t2 >>> 7 | t3 << 9) & 8191;
            var t4 = m2[mpos + 8] | m2[mpos + 9] << 8;
            h42 += (t3 >>> 4 | t4 << 12) & 8191;
            h5 += t4 >>> 1 & 8191;
            var t5 = m2[mpos + 10] | m2[mpos + 11] << 8;
            h6 += (t4 >>> 14 | t5 << 2) & 8191;
            var t6 = m2[mpos + 12] | m2[mpos + 13] << 8;
            h7 += (t5 >>> 11 | t6 << 5) & 8191;
            var t7 = m2[mpos + 14] | m2[mpos + 15] << 8;
            h8 += (t6 >>> 8 | t7 << 8) & 8191;
            h9 += t7 >>> 5 | hibit;
            var c5 = 0;
            var d02 = c5;
            d02 += h02 * r02;
            d02 += h1 * (5 * r9);
            d02 += h22 * (5 * r8);
            d02 += h32 * (5 * r7);
            d02 += h42 * (5 * r6);
            c5 = d02 >>> 13;
            d02 &= 8191;
            d02 += h5 * (5 * r5);
            d02 += h6 * (5 * r4);
            d02 += h7 * (5 * r3);
            d02 += h8 * (5 * r22);
            d02 += h9 * (5 * r1);
            c5 += d02 >>> 13;
            d02 &= 8191;
            var d1 = c5;
            d1 += h02 * r1;
            d1 += h1 * r02;
            d1 += h22 * (5 * r9);
            d1 += h32 * (5 * r8);
            d1 += h42 * (5 * r7);
            c5 = d1 >>> 13;
            d1 &= 8191;
            d1 += h5 * (5 * r6);
            d1 += h6 * (5 * r5);
            d1 += h7 * (5 * r4);
            d1 += h8 * (5 * r3);
            d1 += h9 * (5 * r22);
            c5 += d1 >>> 13;
            d1 &= 8191;
            var d22 = c5;
            d22 += h02 * r22;
            d22 += h1 * r1;
            d22 += h22 * r02;
            d22 += h32 * (5 * r9);
            d22 += h42 * (5 * r8);
            c5 = d22 >>> 13;
            d22 &= 8191;
            d22 += h5 * (5 * r7);
            d22 += h6 * (5 * r6);
            d22 += h7 * (5 * r5);
            d22 += h8 * (5 * r4);
            d22 += h9 * (5 * r3);
            c5 += d22 >>> 13;
            d22 &= 8191;
            var d3 = c5;
            d3 += h02 * r3;
            d3 += h1 * r22;
            d3 += h22 * r1;
            d3 += h32 * r02;
            d3 += h42 * (5 * r9);
            c5 = d3 >>> 13;
            d3 &= 8191;
            d3 += h5 * (5 * r8);
            d3 += h6 * (5 * r7);
            d3 += h7 * (5 * r6);
            d3 += h8 * (5 * r5);
            d3 += h9 * (5 * r4);
            c5 += d3 >>> 13;
            d3 &= 8191;
            var d4 = c5;
            d4 += h02 * r4;
            d4 += h1 * r3;
            d4 += h22 * r22;
            d4 += h32 * r1;
            d4 += h42 * r02;
            c5 = d4 >>> 13;
            d4 &= 8191;
            d4 += h5 * (5 * r9);
            d4 += h6 * (5 * r8);
            d4 += h7 * (5 * r7);
            d4 += h8 * (5 * r6);
            d4 += h9 * (5 * r5);
            c5 += d4 >>> 13;
            d4 &= 8191;
            var d5 = c5;
            d5 += h02 * r5;
            d5 += h1 * r4;
            d5 += h22 * r3;
            d5 += h32 * r22;
            d5 += h42 * r1;
            c5 = d5 >>> 13;
            d5 &= 8191;
            d5 += h5 * r02;
            d5 += h6 * (5 * r9);
            d5 += h7 * (5 * r8);
            d5 += h8 * (5 * r7);
            d5 += h9 * (5 * r6);
            c5 += d5 >>> 13;
            d5 &= 8191;
            var d6 = c5;
            d6 += h02 * r6;
            d6 += h1 * r5;
            d6 += h22 * r4;
            d6 += h32 * r3;
            d6 += h42 * r22;
            c5 = d6 >>> 13;
            d6 &= 8191;
            d6 += h5 * r1;
            d6 += h6 * r02;
            d6 += h7 * (5 * r9);
            d6 += h8 * (5 * r8);
            d6 += h9 * (5 * r7);
            c5 += d6 >>> 13;
            d6 &= 8191;
            var d7 = c5;
            d7 += h02 * r7;
            d7 += h1 * r6;
            d7 += h22 * r5;
            d7 += h32 * r4;
            d7 += h42 * r3;
            c5 = d7 >>> 13;
            d7 &= 8191;
            d7 += h5 * r22;
            d7 += h6 * r1;
            d7 += h7 * r02;
            d7 += h8 * (5 * r9);
            d7 += h9 * (5 * r8);
            c5 += d7 >>> 13;
            d7 &= 8191;
            var d8 = c5;
            d8 += h02 * r8;
            d8 += h1 * r7;
            d8 += h22 * r6;
            d8 += h32 * r5;
            d8 += h42 * r4;
            c5 = d8 >>> 13;
            d8 &= 8191;
            d8 += h5 * r3;
            d8 += h6 * r22;
            d8 += h7 * r1;
            d8 += h8 * r02;
            d8 += h9 * (5 * r9);
            c5 += d8 >>> 13;
            d8 &= 8191;
            var d9 = c5;
            d9 += h02 * r9;
            d9 += h1 * r8;
            d9 += h22 * r7;
            d9 += h32 * r6;
            d9 += h42 * r5;
            c5 = d9 >>> 13;
            d9 &= 8191;
            d9 += h5 * r4;
            d9 += h6 * r3;
            d9 += h7 * r22;
            d9 += h8 * r1;
            d9 += h9 * r02;
            c5 += d9 >>> 13;
            d9 &= 8191;
            c5 = (c5 << 2) + c5 | 0;
            c5 = c5 + d02 | 0;
            d02 = c5 & 8191;
            c5 = c5 >>> 13;
            d1 += c5;
            h02 = d02;
            h1 = d1;
            h22 = d22;
            h32 = d3;
            h42 = d4;
            h5 = d5;
            h6 = d6;
            h7 = d7;
            h8 = d8;
            h9 = d9;
            mpos += 16;
            bytes -= 16;
          }
          this._h[0] = h02;
          this._h[1] = h1;
          this._h[2] = h22;
          this._h[3] = h32;
          this._h[4] = h42;
          this._h[5] = h5;
          this._h[6] = h6;
          this._h[7] = h7;
          this._h[8] = h8;
          this._h[9] = h9;
        };
        Poly13052.prototype.finish = function(mac, macpos) {
          if (macpos === void 0) {
            macpos = 0;
          }
          var g3 = new Uint16Array(10);
          var c5;
          var mask;
          var f4;
          var i4;
          if (this._leftover) {
            i4 = this._leftover;
            this._buffer[i4++] = 1;
            for (; i4 < 16; i4++) {
              this._buffer[i4] = 0;
            }
            this._fin = 1;
            this._blocks(this._buffer, 0, 16);
          }
          c5 = this._h[1] >>> 13;
          this._h[1] &= 8191;
          for (i4 = 2; i4 < 10; i4++) {
            this._h[i4] += c5;
            c5 = this._h[i4] >>> 13;
            this._h[i4] &= 8191;
          }
          this._h[0] += c5 * 5;
          c5 = this._h[0] >>> 13;
          this._h[0] &= 8191;
          this._h[1] += c5;
          c5 = this._h[1] >>> 13;
          this._h[1] &= 8191;
          this._h[2] += c5;
          g3[0] = this._h[0] + 5;
          c5 = g3[0] >>> 13;
          g3[0] &= 8191;
          for (i4 = 1; i4 < 10; i4++) {
            g3[i4] = this._h[i4] + c5;
            c5 = g3[i4] >>> 13;
            g3[i4] &= 8191;
          }
          g3[9] -= 1 << 13;
          mask = (c5 ^ 1) - 1;
          for (i4 = 0; i4 < 10; i4++) {
            g3[i4] &= mask;
          }
          mask = ~mask;
          for (i4 = 0; i4 < 10; i4++) {
            this._h[i4] = this._h[i4] & mask | g3[i4];
          }
          this._h[0] = (this._h[0] | this._h[1] << 13) & 65535;
          this._h[1] = (this._h[1] >>> 3 | this._h[2] << 10) & 65535;
          this._h[2] = (this._h[2] >>> 6 | this._h[3] << 7) & 65535;
          this._h[3] = (this._h[3] >>> 9 | this._h[4] << 4) & 65535;
          this._h[4] = (this._h[4] >>> 12 | this._h[5] << 1 | this._h[6] << 14) & 65535;
          this._h[5] = (this._h[6] >>> 2 | this._h[7] << 11) & 65535;
          this._h[6] = (this._h[7] >>> 5 | this._h[8] << 8) & 65535;
          this._h[7] = (this._h[8] >>> 8 | this._h[9] << 5) & 65535;
          f4 = this._h[0] + this._pad[0];
          this._h[0] = f4 & 65535;
          for (i4 = 1; i4 < 8; i4++) {
            f4 = (this._h[i4] + this._pad[i4] | 0) + (f4 >>> 16) | 0;
            this._h[i4] = f4 & 65535;
          }
          mac[macpos + 0] = this._h[0] >>> 0;
          mac[macpos + 1] = this._h[0] >>> 8;
          mac[macpos + 2] = this._h[1] >>> 0;
          mac[macpos + 3] = this._h[1] >>> 8;
          mac[macpos + 4] = this._h[2] >>> 0;
          mac[macpos + 5] = this._h[2] >>> 8;
          mac[macpos + 6] = this._h[3] >>> 0;
          mac[macpos + 7] = this._h[3] >>> 8;
          mac[macpos + 8] = this._h[4] >>> 0;
          mac[macpos + 9] = this._h[4] >>> 8;
          mac[macpos + 10] = this._h[5] >>> 0;
          mac[macpos + 11] = this._h[5] >>> 8;
          mac[macpos + 12] = this._h[6] >>> 0;
          mac[macpos + 13] = this._h[6] >>> 8;
          mac[macpos + 14] = this._h[7] >>> 0;
          mac[macpos + 15] = this._h[7] >>> 8;
          this._finished = true;
          return this;
        };
        Poly13052.prototype.update = function(m2) {
          var mpos = 0;
          var bytes = m2.length;
          var want;
          if (this._leftover) {
            want = 16 - this._leftover;
            if (want > bytes) {
              want = bytes;
            }
            for (var i4 = 0; i4 < want; i4++) {
              this._buffer[this._leftover + i4] = m2[mpos + i4];
            }
            bytes -= want;
            mpos += want;
            this._leftover += want;
            if (this._leftover < 16) {
              return this;
            }
            this._blocks(this._buffer, 0, 16);
            this._leftover = 0;
          }
          if (bytes >= 16) {
            want = bytes - bytes % 16;
            this._blocks(m2, mpos, want);
            mpos += want;
            bytes -= want;
          }
          if (bytes) {
            for (var i4 = 0; i4 < bytes; i4++) {
              this._buffer[this._leftover + i4] = m2[mpos + i4];
            }
            this._leftover += bytes;
          }
          return this;
        };
        Poly13052.prototype.digest = function() {
          if (this._finished) {
            throw new Error("Poly1305 was finished");
          }
          var mac = new Uint8Array(16);
          this.finish(mac);
          return mac;
        };
        Poly13052.prototype.clean = function() {
          wipe_1.wipe(this._buffer);
          wipe_1.wipe(this._r);
          wipe_1.wipe(this._h);
          wipe_1.wipe(this._pad);
          this._leftover = 0;
          this._fin = 0;
          this._finished = true;
          return this;
        };
        return Poly13052;
      }()
    );
    exports.Poly1305 = Poly1305;
    function oneTimeAuth(key, data) {
      var h5 = new Poly1305(key);
      h5.update(data);
      var digest2 = h5.digest();
      h5.clean();
      return digest2;
    }
    exports.oneTimeAuth = oneTimeAuth;
    function equal(a4, b3) {
      if (a4.length !== exports.DIGEST_LENGTH || b3.length !== exports.DIGEST_LENGTH) {
        return false;
      }
      return constant_time_1.equal(a4, b3);
    }
    exports.equal = equal;
  }
});

// node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js
var require_chacha20poly1305 = __commonJS({
  "node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var chacha_1 = require_chacha();
    var poly1305_1 = require_poly1305();
    var wipe_1 = require_wipe();
    var binary_1 = require_binary();
    var constant_time_1 = require_constant_time();
    exports.KEY_LENGTH = 32;
    exports.NONCE_LENGTH = 12;
    exports.TAG_LENGTH = 16;
    var ZEROS = new Uint8Array(16);
    var ChaCha20Poly1305 = (
      /** @class */
      function() {
        function ChaCha20Poly13052(key) {
          this.nonceLength = exports.NONCE_LENGTH;
          this.tagLength = exports.TAG_LENGTH;
          if (key.length !== exports.KEY_LENGTH) {
            throw new Error("ChaCha20Poly1305 needs 32-byte key");
          }
          this._key = new Uint8Array(key);
        }
        ChaCha20Poly13052.prototype.seal = function(nonce, plaintext, associatedData, dst) {
          if (nonce.length > 16) {
            throw new Error("ChaCha20Poly1305: incorrect nonce length");
          }
          var counter = new Uint8Array(16);
          counter.set(nonce, counter.length - nonce.length);
          var authKey = new Uint8Array(32);
          chacha_1.stream(this._key, counter, authKey, 4);
          var resultLength = plaintext.length + this.tagLength;
          var result;
          if (dst) {
            if (dst.length !== resultLength) {
              throw new Error("ChaCha20Poly1305: incorrect destination length");
            }
            result = dst;
          } else {
            result = new Uint8Array(resultLength);
          }
          chacha_1.streamXOR(this._key, counter, plaintext, result, 4);
          this._authenticate(result.subarray(result.length - this.tagLength, result.length), authKey, result.subarray(0, result.length - this.tagLength), associatedData);
          wipe_1.wipe(counter);
          return result;
        };
        ChaCha20Poly13052.prototype.open = function(nonce, sealed, associatedData, dst) {
          if (nonce.length > 16) {
            throw new Error("ChaCha20Poly1305: incorrect nonce length");
          }
          if (sealed.length < this.tagLength) {
            return null;
          }
          var counter = new Uint8Array(16);
          counter.set(nonce, counter.length - nonce.length);
          var authKey = new Uint8Array(32);
          chacha_1.stream(this._key, counter, authKey, 4);
          var calculatedTag = new Uint8Array(this.tagLength);
          this._authenticate(calculatedTag, authKey, sealed.subarray(0, sealed.length - this.tagLength), associatedData);
          if (!constant_time_1.equal(calculatedTag, sealed.subarray(sealed.length - this.tagLength, sealed.length))) {
            return null;
          }
          var resultLength = sealed.length - this.tagLength;
          var result;
          if (dst) {
            if (dst.length !== resultLength) {
              throw new Error("ChaCha20Poly1305: incorrect destination length");
            }
            result = dst;
          } else {
            result = new Uint8Array(resultLength);
          }
          chacha_1.streamXOR(this._key, counter, sealed.subarray(0, sealed.length - this.tagLength), result, 4);
          wipe_1.wipe(counter);
          return result;
        };
        ChaCha20Poly13052.prototype.clean = function() {
          wipe_1.wipe(this._key);
          return this;
        };
        ChaCha20Poly13052.prototype._authenticate = function(tagOut, authKey, ciphertext, associatedData) {
          var h5 = new poly1305_1.Poly1305(authKey);
          if (associatedData) {
            h5.update(associatedData);
            if (associatedData.length % 16 > 0) {
              h5.update(ZEROS.subarray(associatedData.length % 16));
            }
          }
          h5.update(ciphertext);
          if (ciphertext.length % 16 > 0) {
            h5.update(ZEROS.subarray(ciphertext.length % 16));
          }
          var length2 = new Uint8Array(8);
          if (associatedData) {
            binary_1.writeUint64LE(associatedData.length, length2);
          }
          h5.update(length2);
          binary_1.writeUint64LE(ciphertext.length, length2);
          h5.update(length2);
          var tag = h5.digest();
          for (var i4 = 0; i4 < tag.length; i4++) {
            tagOut[i4] = tag[i4];
          }
          h5.clean();
          wipe_1.wipe(tag);
          wipe_1.wipe(length2);
        };
        return ChaCha20Poly13052;
      }()
    );
    exports.ChaCha20Poly1305 = ChaCha20Poly1305;
  }
});

// node_modules/@stablelib/hash/lib/hash.js
var require_hash = __commonJS({
  "node_modules/@stablelib/hash/lib/hash.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function isSerializableHash(h5) {
      return typeof h5.saveState !== "undefined" && typeof h5.restoreState !== "undefined" && typeof h5.cleanSavedState !== "undefined";
    }
    exports.isSerializableHash = isSerializableHash;
  }
});

// node_modules/@stablelib/hmac/lib/hmac.js
var require_hmac = __commonJS({
  "node_modules/@stablelib/hmac/lib/hmac.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var hash_1 = require_hash();
    var constant_time_1 = require_constant_time();
    var wipe_1 = require_wipe();
    var HMAC = (
      /** @class */
      function() {
        function HMAC2(hash, key) {
          this._finished = false;
          this._inner = new hash();
          this._outer = new hash();
          this.blockSize = this._outer.blockSize;
          this.digestLength = this._outer.digestLength;
          var pad = new Uint8Array(this.blockSize);
          if (key.length > this.blockSize) {
            this._inner.update(key).finish(pad).clean();
          } else {
            pad.set(key);
          }
          for (var i4 = 0; i4 < pad.length; i4++) {
            pad[i4] ^= 54;
          }
          this._inner.update(pad);
          for (var i4 = 0; i4 < pad.length; i4++) {
            pad[i4] ^= 54 ^ 92;
          }
          this._outer.update(pad);
          if (hash_1.isSerializableHash(this._inner) && hash_1.isSerializableHash(this._outer)) {
            this._innerKeyedState = this._inner.saveState();
            this._outerKeyedState = this._outer.saveState();
          }
          wipe_1.wipe(pad);
        }
        HMAC2.prototype.reset = function() {
          if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {
            throw new Error("hmac: can't reset() because hash doesn't implement restoreState()");
          }
          this._inner.restoreState(this._innerKeyedState);
          this._outer.restoreState(this._outerKeyedState);
          this._finished = false;
          return this;
        };
        HMAC2.prototype.clean = function() {
          if (hash_1.isSerializableHash(this._inner)) {
            this._inner.cleanSavedState(this._innerKeyedState);
          }
          if (hash_1.isSerializableHash(this._outer)) {
            this._outer.cleanSavedState(this._outerKeyedState);
          }
          this._inner.clean();
          this._outer.clean();
        };
        HMAC2.prototype.update = function(data) {
          this._inner.update(data);
          return this;
        };
        HMAC2.prototype.finish = function(out) {
          if (this._finished) {
            this._outer.finish(out);
            return this;
          }
          this._inner.finish(out);
          this._outer.update(out.subarray(0, this.digestLength)).finish(out);
          this._finished = true;
          return this;
        };
        HMAC2.prototype.digest = function() {
          var out = new Uint8Array(this.digestLength);
          this.finish(out);
          return out;
        };
        HMAC2.prototype.saveState = function() {
          if (!hash_1.isSerializableHash(this._inner)) {
            throw new Error("hmac: can't saveState() because hash doesn't implement it");
          }
          return this._inner.saveState();
        };
        HMAC2.prototype.restoreState = function(savedState) {
          if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {
            throw new Error("hmac: can't restoreState() because hash doesn't implement it");
          }
          this._inner.restoreState(savedState);
          this._outer.restoreState(this._outerKeyedState);
          this._finished = false;
          return this;
        };
        HMAC2.prototype.cleanSavedState = function(savedState) {
          if (!hash_1.isSerializableHash(this._inner)) {
            throw new Error("hmac: can't cleanSavedState() because hash doesn't implement it");
          }
          this._inner.cleanSavedState(savedState);
        };
        return HMAC2;
      }()
    );
    exports.HMAC = HMAC;
    function hmac(hash, key, data) {
      var h5 = new HMAC(hash, key);
      h5.update(data);
      var digest2 = h5.digest();
      h5.clean();
      return digest2;
    }
    exports.hmac = hmac;
    exports.equal = constant_time_1.equal;
  }
});

// node_modules/@stablelib/hkdf/lib/hkdf.js
var require_hkdf = __commonJS({
  "node_modules/@stablelib/hkdf/lib/hkdf.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var hmac_1 = require_hmac();
    var wipe_1 = require_wipe();
    var HKDF = (
      /** @class */
      function() {
        function HKDF2(hash, key, salt, info) {
          if (salt === void 0) {
            salt = new Uint8Array(0);
          }
          this._counter = new Uint8Array(1);
          this._hash = hash;
          this._info = info;
          var okm = hmac_1.hmac(this._hash, salt, key);
          this._hmac = new hmac_1.HMAC(hash, okm);
          this._buffer = new Uint8Array(this._hmac.digestLength);
          this._bufpos = this._buffer.length;
        }
        HKDF2.prototype._fillBuffer = function() {
          this._counter[0]++;
          var ctr = this._counter[0];
          if (ctr === 0) {
            throw new Error("hkdf: cannot expand more");
          }
          this._hmac.reset();
          if (ctr > 1) {
            this._hmac.update(this._buffer);
          }
          if (this._info) {
            this._hmac.update(this._info);
          }
          this._hmac.update(this._counter);
          this._hmac.finish(this._buffer);
          this._bufpos = 0;
        };
        HKDF2.prototype.expand = function(length2) {
          var out = new Uint8Array(length2);
          for (var i4 = 0; i4 < out.length; i4++) {
            if (this._bufpos === this._buffer.length) {
              this._fillBuffer();
            }
            out[i4] = this._buffer[this._bufpos++];
          }
          return out;
        };
        HKDF2.prototype.clean = function() {
          this._hmac.clean();
          wipe_1.wipe(this._buffer);
          wipe_1.wipe(this._counter);
          this._bufpos = 0;
        };
        return HKDF2;
      }()
    );
    exports.HKDF = HKDF;
  }
});

// node_modules/@stablelib/sha256/lib/sha256.js
var require_sha256 = __commonJS({
  "node_modules/@stablelib/sha256/lib/sha256.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    exports.DIGEST_LENGTH = 32;
    exports.BLOCK_SIZE = 64;
    var SHA256 = (
      /** @class */
      function() {
        function SHA2562() {
          this.digestLength = exports.DIGEST_LENGTH;
          this.blockSize = exports.BLOCK_SIZE;
          this._state = new Int32Array(8);
          this._temp = new Int32Array(64);
          this._buffer = new Uint8Array(128);
          this._bufferLength = 0;
          this._bytesHashed = 0;
          this._finished = false;
          this.reset();
        }
        SHA2562.prototype._initState = function() {
          this._state[0] = 1779033703;
          this._state[1] = 3144134277;
          this._state[2] = 1013904242;
          this._state[3] = 2773480762;
          this._state[4] = 1359893119;
          this._state[5] = 2600822924;
          this._state[6] = 528734635;
          this._state[7] = 1541459225;
        };
        SHA2562.prototype.reset = function() {
          this._initState();
          this._bufferLength = 0;
          this._bytesHashed = 0;
          this._finished = false;
          return this;
        };
        SHA2562.prototype.clean = function() {
          wipe_1.wipe(this._buffer);
          wipe_1.wipe(this._temp);
          this.reset();
        };
        SHA2562.prototype.update = function(data, dataLength) {
          if (dataLength === void 0) {
            dataLength = data.length;
          }
          if (this._finished) {
            throw new Error("SHA256: can't update because hash was finished.");
          }
          var dataPos = 0;
          this._bytesHashed += dataLength;
          if (this._bufferLength > 0) {
            while (this._bufferLength < this.blockSize && dataLength > 0) {
              this._buffer[this._bufferLength++] = data[dataPos++];
              dataLength--;
            }
            if (this._bufferLength === this.blockSize) {
              hashBlocks(this._temp, this._state, this._buffer, 0, this.blockSize);
              this._bufferLength = 0;
            }
          }
          if (dataLength >= this.blockSize) {
            dataPos = hashBlocks(this._temp, this._state, data, dataPos, dataLength);
            dataLength %= this.blockSize;
          }
          while (dataLength > 0) {
            this._buffer[this._bufferLength++] = data[dataPos++];
            dataLength--;
          }
          return this;
        };
        SHA2562.prototype.finish = function(out) {
          if (!this._finished) {
            var bytesHashed = this._bytesHashed;
            var left = this._bufferLength;
            var bitLenHi = bytesHashed / 536870912 | 0;
            var bitLenLo = bytesHashed << 3;
            var padLength = bytesHashed % 64 < 56 ? 64 : 128;
            this._buffer[left] = 128;
            for (var i4 = left + 1; i4 < padLength - 8; i4++) {
              this._buffer[i4] = 0;
            }
            binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);
            binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);
            hashBlocks(this._temp, this._state, this._buffer, 0, padLength);
            this._finished = true;
          }
          for (var i4 = 0; i4 < this.digestLength / 4; i4++) {
            binary_1.writeUint32BE(this._state[i4], out, i4 * 4);
          }
          return this;
        };
        SHA2562.prototype.digest = function() {
          var out = new Uint8Array(this.digestLength);
          this.finish(out);
          return out;
        };
        SHA2562.prototype.saveState = function() {
          if (this._finished) {
            throw new Error("SHA256: cannot save finished state");
          }
          return {
            state: new Int32Array(this._state),
            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
            bufferLength: this._bufferLength,
            bytesHashed: this._bytesHashed
          };
        };
        SHA2562.prototype.restoreState = function(savedState) {
          this._state.set(savedState.state);
          this._bufferLength = savedState.bufferLength;
          if (savedState.buffer) {
            this._buffer.set(savedState.buffer);
          }
          this._bytesHashed = savedState.bytesHashed;
          this._finished = false;
          return this;
        };
        SHA2562.prototype.cleanSavedState = function(savedState) {
          wipe_1.wipe(savedState.state);
          if (savedState.buffer) {
            wipe_1.wipe(savedState.buffer);
          }
          savedState.bufferLength = 0;
          savedState.bytesHashed = 0;
        };
        return SHA2562;
      }()
    );
    exports.SHA256 = SHA256;
    var K4 = new Int32Array([
      1116352408,
      1899447441,
      3049323471,
      3921009573,
      961987163,
      1508970993,
      2453635748,
      2870763221,
      3624381080,
      310598401,
      607225278,
      1426881987,
      1925078388,
      2162078206,
      2614888103,
      3248222580,
      3835390401,
      4022224774,
      264347078,
      604807628,
      770255983,
      1249150122,
      1555081692,
      1996064986,
      2554220882,
      2821834349,
      2952996808,
      3210313671,
      3336571891,
      3584528711,
      113926993,
      338241895,
      666307205,
      773529912,
      1294757372,
      1396182291,
      1695183700,
      1986661051,
      2177026350,
      2456956037,
      2730485921,
      2820302411,
      3259730800,
      3345764771,
      3516065817,
      3600352804,
      4094571909,
      275423344,
      430227734,
      506948616,
      659060556,
      883997877,
      958139571,
      1322822218,
      1537002063,
      1747873779,
      1955562222,
      2024104815,
      2227730452,
      2361852424,
      2428436474,
      2756734187,
      3204031479,
      3329325298
    ]);
    function hashBlocks(w4, v3, p3, pos, len) {
      while (len >= 64) {
        var a4 = v3[0];
        var b3 = v3[1];
        var c5 = v3[2];
        var d3 = v3[3];
        var e2 = v3[4];
        var f4 = v3[5];
        var g3 = v3[6];
        var h5 = v3[7];
        for (var i4 = 0; i4 < 16; i4++) {
          var j5 = pos + i4 * 4;
          w4[i4] = binary_1.readUint32BE(p3, j5);
        }
        for (var i4 = 16; i4 < 64; i4++) {
          var u3 = w4[i4 - 2];
          var t1 = (u3 >>> 17 | u3 << 32 - 17) ^ (u3 >>> 19 | u3 << 32 - 19) ^ u3 >>> 10;
          u3 = w4[i4 - 15];
          var t2 = (u3 >>> 7 | u3 << 32 - 7) ^ (u3 >>> 18 | u3 << 32 - 18) ^ u3 >>> 3;
          w4[i4] = (t1 + w4[i4 - 7] | 0) + (t2 + w4[i4 - 16] | 0);
        }
        for (var i4 = 0; i4 < 64; i4++) {
          var t1 = (((e2 >>> 6 | e2 << 32 - 6) ^ (e2 >>> 11 | e2 << 32 - 11) ^ (e2 >>> 25 | e2 << 32 - 25)) + (e2 & f4 ^ ~e2 & g3) | 0) + (h5 + (K4[i4] + w4[i4] | 0) | 0) | 0;
          var t2 = ((a4 >>> 2 | a4 << 32 - 2) ^ (a4 >>> 13 | a4 << 32 - 13) ^ (a4 >>> 22 | a4 << 32 - 22)) + (a4 & b3 ^ a4 & c5 ^ b3 & c5) | 0;
          h5 = g3;
          g3 = f4;
          f4 = e2;
          e2 = d3 + t1 | 0;
          d3 = c5;
          c5 = b3;
          b3 = a4;
          a4 = t1 + t2 | 0;
        }
        v3[0] += a4;
        v3[1] += b3;
        v3[2] += c5;
        v3[3] += d3;
        v3[4] += e2;
        v3[5] += f4;
        v3[6] += g3;
        v3[7] += h5;
        pos += 64;
        len -= 64;
      }
      return pos;
    }
    function hash(data) {
      var h5 = new SHA256();
      h5.update(data);
      var digest2 = h5.digest();
      h5.clean();
      return digest2;
    }
    exports.hash = hash;
  }
});

// node_modules/@stablelib/x25519/lib/x25519.js
var require_x25519 = __commonJS({
  "node_modules/@stablelib/x25519/lib/x25519.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.sharedKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.scalarMultBase = exports.scalarMult = exports.SHARED_KEY_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = void 0;
    var random_1 = require_random();
    var wipe_1 = require_wipe();
    exports.PUBLIC_KEY_LENGTH = 32;
    exports.SECRET_KEY_LENGTH = 32;
    exports.SHARED_KEY_LENGTH = 32;
    function gf2(init) {
      const r3 = new Float64Array(16);
      if (init) {
        for (let i4 = 0; i4 < init.length; i4++) {
          r3[i4] = init[i4];
        }
      }
      return r3;
    }
    var _9 = new Uint8Array(32);
    _9[0] = 9;
    var _121665 = gf2([56129, 1]);
    function car25519(o4) {
      let c5 = 1;
      for (let i4 = 0; i4 < 16; i4++) {
        let v3 = o4[i4] + c5 + 65535;
        c5 = Math.floor(v3 / 65536);
        o4[i4] = v3 - c5 * 65536;
      }
      o4[0] += c5 - 1 + 37 * (c5 - 1);
    }
    function sel25519(p3, q, b3) {
      const c5 = ~(b3 - 1);
      for (let i4 = 0; i4 < 16; i4++) {
        const t = c5 & (p3[i4] ^ q[i4]);
        p3[i4] ^= t;
        q[i4] ^= t;
      }
    }
    function pack25519(o4, n5) {
      const m2 = gf2();
      const t = gf2();
      for (let i4 = 0; i4 < 16; i4++) {
        t[i4] = n5[i4];
      }
      car25519(t);
      car25519(t);
      car25519(t);
      for (let j5 = 0; j5 < 2; j5++) {
        m2[0] = t[0] - 65517;
        for (let i4 = 1; i4 < 15; i4++) {
          m2[i4] = t[i4] - 65535 - (m2[i4 - 1] >> 16 & 1);
          m2[i4 - 1] &= 65535;
        }
        m2[15] = t[15] - 32767 - (m2[14] >> 16 & 1);
        const b3 = m2[15] >> 16 & 1;
        m2[14] &= 65535;
        sel25519(t, m2, 1 - b3);
      }
      for (let i4 = 0; i4 < 16; i4++) {
        o4[2 * i4] = t[i4] & 255;
        o4[2 * i4 + 1] = t[i4] >> 8;
      }
    }
    function unpack25519(o4, n5) {
      for (let i4 = 0; i4 < 16; i4++) {
        o4[i4] = n5[2 * i4] + (n5[2 * i4 + 1] << 8);
      }
      o4[15] &= 32767;
    }
    function add(o4, a4, b3) {
      for (let i4 = 0; i4 < 16; i4++) {
        o4[i4] = a4[i4] + b3[i4];
      }
    }
    function sub(o4, a4, b3) {
      for (let i4 = 0; i4 < 16; i4++) {
        o4[i4] = a4[i4] - b3[i4];
      }
    }
    function mul(o4, a4, b3) {
      let v3, c5, t02 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b02 = b3[0], b1 = b3[1], b22 = b3[2], b32 = b3[3], b4 = b3[4], b5 = b3[5], b6 = b3[6], b7 = b3[7], b8 = b3[8], b9 = b3[9], b10 = b3[10], b11 = b3[11], b12 = b3[12], b13 = b3[13], b14 = b3[14], b15 = b3[15];
      v3 = a4[0];
      t02 += v3 * b02;
      t1 += v3 * b1;
      t2 += v3 * b22;
      t3 += v3 * b32;
      t4 += v3 * b4;
      t5 += v3 * b5;
      t6 += v3 * b6;
      t7 += v3 * b7;
      t8 += v3 * b8;
      t9 += v3 * b9;
      t10 += v3 * b10;
      t11 += v3 * b11;
      t12 += v3 * b12;
      t13 += v3 * b13;
      t14 += v3 * b14;
      t15 += v3 * b15;
      v3 = a4[1];
      t1 += v3 * b02;
      t2 += v3 * b1;
      t3 += v3 * b22;
      t4 += v3 * b32;
      t5 += v3 * b4;
      t6 += v3 * b5;
      t7 += v3 * b6;
      t8 += v3 * b7;
      t9 += v3 * b8;
      t10 += v3 * b9;
      t11 += v3 * b10;
      t12 += v3 * b11;
      t13 += v3 * b12;
      t14 += v3 * b13;
      t15 += v3 * b14;
      t16 += v3 * b15;
      v3 = a4[2];
      t2 += v3 * b02;
      t3 += v3 * b1;
      t4 += v3 * b22;
      t5 += v3 * b32;
      t6 += v3 * b4;
      t7 += v3 * b5;
      t8 += v3 * b6;
      t9 += v3 * b7;
      t10 += v3 * b8;
      t11 += v3 * b9;
      t12 += v3 * b10;
      t13 += v3 * b11;
      t14 += v3 * b12;
      t15 += v3 * b13;
      t16 += v3 * b14;
      t17 += v3 * b15;
      v3 = a4[3];
      t3 += v3 * b02;
      t4 += v3 * b1;
      t5 += v3 * b22;
      t6 += v3 * b32;
      t7 += v3 * b4;
      t8 += v3 * b5;
      t9 += v3 * b6;
      t10 += v3 * b7;
      t11 += v3 * b8;
      t12 += v3 * b9;
      t13 += v3 * b10;
      t14 += v3 * b11;
      t15 += v3 * b12;
      t16 += v3 * b13;
      t17 += v3 * b14;
      t18 += v3 * b15;
      v3 = a4[4];
      t4 += v3 * b02;
      t5 += v3 * b1;
      t6 += v3 * b22;
      t7 += v3 * b32;
      t8 += v3 * b4;
      t9 += v3 * b5;
      t10 += v3 * b6;
      t11 += v3 * b7;
      t12 += v3 * b8;
      t13 += v3 * b9;
      t14 += v3 * b10;
      t15 += v3 * b11;
      t16 += v3 * b12;
      t17 += v3 * b13;
      t18 += v3 * b14;
      t19 += v3 * b15;
      v3 = a4[5];
      t5 += v3 * b02;
      t6 += v3 * b1;
      t7 += v3 * b22;
      t8 += v3 * b32;
      t9 += v3 * b4;
      t10 += v3 * b5;
      t11 += v3 * b6;
      t12 += v3 * b7;
      t13 += v3 * b8;
      t14 += v3 * b9;
      t15 += v3 * b10;
      t16 += v3 * b11;
      t17 += v3 * b12;
      t18 += v3 * b13;
      t19 += v3 * b14;
      t20 += v3 * b15;
      v3 = a4[6];
      t6 += v3 * b02;
      t7 += v3 * b1;
      t8 += v3 * b22;
      t9 += v3 * b32;
      t10 += v3 * b4;
      t11 += v3 * b5;
      t12 += v3 * b6;
      t13 += v3 * b7;
      t14 += v3 * b8;
      t15 += v3 * b9;
      t16 += v3 * b10;
      t17 += v3 * b11;
      t18 += v3 * b12;
      t19 += v3 * b13;
      t20 += v3 * b14;
      t21 += v3 * b15;
      v3 = a4[7];
      t7 += v3 * b02;
      t8 += v3 * b1;
      t9 += v3 * b22;
      t10 += v3 * b32;
      t11 += v3 * b4;
      t12 += v3 * b5;
      t13 += v3 * b6;
      t14 += v3 * b7;
      t15 += v3 * b8;
      t16 += v3 * b9;
      t17 += v3 * b10;
      t18 += v3 * b11;
      t19 += v3 * b12;
      t20 += v3 * b13;
      t21 += v3 * b14;
      t22 += v3 * b15;
      v3 = a4[8];
      t8 += v3 * b02;
      t9 += v3 * b1;
      t10 += v3 * b22;
      t11 += v3 * b32;
      t12 += v3 * b4;
      t13 += v3 * b5;
      t14 += v3 * b6;
      t15 += v3 * b7;
      t16 += v3 * b8;
      t17 += v3 * b9;
      t18 += v3 * b10;
      t19 += v3 * b11;
      t20 += v3 * b12;
      t21 += v3 * b13;
      t22 += v3 * b14;
      t23 += v3 * b15;
      v3 = a4[9];
      t9 += v3 * b02;
      t10 += v3 * b1;
      t11 += v3 * b22;
      t12 += v3 * b32;
      t13 += v3 * b4;
      t14 += v3 * b5;
      t15 += v3 * b6;
      t16 += v3 * b7;
      t17 += v3 * b8;
      t18 += v3 * b9;
      t19 += v3 * b10;
      t20 += v3 * b11;
      t21 += v3 * b12;
      t22 += v3 * b13;
      t23 += v3 * b14;
      t24 += v3 * b15;
      v3 = a4[10];
      t10 += v3 * b02;
      t11 += v3 * b1;
      t12 += v3 * b22;
      t13 += v3 * b32;
      t14 += v3 * b4;
      t15 += v3 * b5;
      t16 += v3 * b6;
      t17 += v3 * b7;
      t18 += v3 * b8;
      t19 += v3 * b9;
      t20 += v3 * b10;
      t21 += v3 * b11;
      t22 += v3 * b12;
      t23 += v3 * b13;
      t24 += v3 * b14;
      t25 += v3 * b15;
      v3 = a4[11];
      t11 += v3 * b02;
      t12 += v3 * b1;
      t13 += v3 * b22;
      t14 += v3 * b32;
      t15 += v3 * b4;
      t16 += v3 * b5;
      t17 += v3 * b6;
      t18 += v3 * b7;
      t19 += v3 * b8;
      t20 += v3 * b9;
      t21 += v3 * b10;
      t22 += v3 * b11;
      t23 += v3 * b12;
      t24 += v3 * b13;
      t25 += v3 * b14;
      t26 += v3 * b15;
      v3 = a4[12];
      t12 += v3 * b02;
      t13 += v3 * b1;
      t14 += v3 * b22;
      t15 += v3 * b32;
      t16 += v3 * b4;
      t17 += v3 * b5;
      t18 += v3 * b6;
      t19 += v3 * b7;
      t20 += v3 * b8;
      t21 += v3 * b9;
      t22 += v3 * b10;
      t23 += v3 * b11;
      t24 += v3 * b12;
      t25 += v3 * b13;
      t26 += v3 * b14;
      t27 += v3 * b15;
      v3 = a4[13];
      t13 += v3 * b02;
      t14 += v3 * b1;
      t15 += v3 * b22;
      t16 += v3 * b32;
      t17 += v3 * b4;
      t18 += v3 * b5;
      t19 += v3 * b6;
      t20 += v3 * b7;
      t21 += v3 * b8;
      t22 += v3 * b9;
      t23 += v3 * b10;
      t24 += v3 * b11;
      t25 += v3 * b12;
      t26 += v3 * b13;
      t27 += v3 * b14;
      t28 += v3 * b15;
      v3 = a4[14];
      t14 += v3 * b02;
      t15 += v3 * b1;
      t16 += v3 * b22;
      t17 += v3 * b32;
      t18 += v3 * b4;
      t19 += v3 * b5;
      t20 += v3 * b6;
      t21 += v3 * b7;
      t22 += v3 * b8;
      t23 += v3 * b9;
      t24 += v3 * b10;
      t25 += v3 * b11;
      t26 += v3 * b12;
      t27 += v3 * b13;
      t28 += v3 * b14;
      t29 += v3 * b15;
      v3 = a4[15];
      t15 += v3 * b02;
      t16 += v3 * b1;
      t17 += v3 * b22;
      t18 += v3 * b32;
      t19 += v3 * b4;
      t20 += v3 * b5;
      t21 += v3 * b6;
      t22 += v3 * b7;
      t23 += v3 * b8;
      t24 += v3 * b9;
      t25 += v3 * b10;
      t26 += v3 * b11;
      t27 += v3 * b12;
      t28 += v3 * b13;
      t29 += v3 * b14;
      t30 += v3 * b15;
      t02 += 38 * t16;
      t1 += 38 * t17;
      t2 += 38 * t18;
      t3 += 38 * t19;
      t4 += 38 * t20;
      t5 += 38 * t21;
      t6 += 38 * t22;
      t7 += 38 * t23;
      t8 += 38 * t24;
      t9 += 38 * t25;
      t10 += 38 * t26;
      t11 += 38 * t27;
      t12 += 38 * t28;
      t13 += 38 * t29;
      t14 += 38 * t30;
      c5 = 1;
      v3 = t02 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t02 = v3 - c5 * 65536;
      v3 = t1 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t1 = v3 - c5 * 65536;
      v3 = t2 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t2 = v3 - c5 * 65536;
      v3 = t3 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t3 = v3 - c5 * 65536;
      v3 = t4 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t4 = v3 - c5 * 65536;
      v3 = t5 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t5 = v3 - c5 * 65536;
      v3 = t6 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t6 = v3 - c5 * 65536;
      v3 = t7 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t7 = v3 - c5 * 65536;
      v3 = t8 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t8 = v3 - c5 * 65536;
      v3 = t9 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t9 = v3 - c5 * 65536;
      v3 = t10 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t10 = v3 - c5 * 65536;
      v3 = t11 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t11 = v3 - c5 * 65536;
      v3 = t12 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t12 = v3 - c5 * 65536;
      v3 = t13 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t13 = v3 - c5 * 65536;
      v3 = t14 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t14 = v3 - c5 * 65536;
      v3 = t15 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t15 = v3 - c5 * 65536;
      t02 += c5 - 1 + 37 * (c5 - 1);
      c5 = 1;
      v3 = t02 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t02 = v3 - c5 * 65536;
      v3 = t1 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t1 = v3 - c5 * 65536;
      v3 = t2 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t2 = v3 - c5 * 65536;
      v3 = t3 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t3 = v3 - c5 * 65536;
      v3 = t4 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t4 = v3 - c5 * 65536;
      v3 = t5 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t5 = v3 - c5 * 65536;
      v3 = t6 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t6 = v3 - c5 * 65536;
      v3 = t7 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t7 = v3 - c5 * 65536;
      v3 = t8 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t8 = v3 - c5 * 65536;
      v3 = t9 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t9 = v3 - c5 * 65536;
      v3 = t10 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t10 = v3 - c5 * 65536;
      v3 = t11 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t11 = v3 - c5 * 65536;
      v3 = t12 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t12 = v3 - c5 * 65536;
      v3 = t13 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t13 = v3 - c5 * 65536;
      v3 = t14 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t14 = v3 - c5 * 65536;
      v3 = t15 + c5 + 65535;
      c5 = Math.floor(v3 / 65536);
      t15 = v3 - c5 * 65536;
      t02 += c5 - 1 + 37 * (c5 - 1);
      o4[0] = t02;
      o4[1] = t1;
      o4[2] = t2;
      o4[3] = t3;
      o4[4] = t4;
      o4[5] = t5;
      o4[6] = t6;
      o4[7] = t7;
      o4[8] = t8;
      o4[9] = t9;
      o4[10] = t10;
      o4[11] = t11;
      o4[12] = t12;
      o4[13] = t13;
      o4[14] = t14;
      o4[15] = t15;
    }
    function square(o4, a4) {
      mul(o4, a4, a4);
    }
    function inv25519(o4, inp) {
      const c5 = gf2();
      for (let i4 = 0; i4 < 16; i4++) {
        c5[i4] = inp[i4];
      }
      for (let i4 = 253; i4 >= 0; i4--) {
        square(c5, c5);
        if (i4 !== 2 && i4 !== 4) {
          mul(c5, c5, inp);
        }
      }
      for (let i4 = 0; i4 < 16; i4++) {
        o4[i4] = c5[i4];
      }
    }
    function scalarMult(n5, p3) {
      const z3 = new Uint8Array(32);
      const x5 = new Float64Array(80);
      const a4 = gf2(), b3 = gf2(), c5 = gf2(), d3 = gf2(), e2 = gf2(), f4 = gf2();
      for (let i4 = 0; i4 < 31; i4++) {
        z3[i4] = n5[i4];
      }
      z3[31] = n5[31] & 127 | 64;
      z3[0] &= 248;
      unpack25519(x5, p3);
      for (let i4 = 0; i4 < 16; i4++) {
        b3[i4] = x5[i4];
      }
      a4[0] = d3[0] = 1;
      for (let i4 = 254; i4 >= 0; --i4) {
        const r3 = z3[i4 >>> 3] >>> (i4 & 7) & 1;
        sel25519(a4, b3, r3);
        sel25519(c5, d3, r3);
        add(e2, a4, c5);
        sub(a4, a4, c5);
        add(c5, b3, d3);
        sub(b3, b3, d3);
        square(d3, e2);
        square(f4, a4);
        mul(a4, c5, a4);
        mul(c5, b3, e2);
        add(e2, a4, c5);
        sub(a4, a4, c5);
        square(b3, a4);
        sub(c5, d3, f4);
        mul(a4, c5, _121665);
        add(a4, a4, d3);
        mul(c5, c5, a4);
        mul(a4, d3, f4);
        mul(d3, b3, x5);
        square(b3, e2);
        sel25519(a4, b3, r3);
        sel25519(c5, d3, r3);
      }
      for (let i4 = 0; i4 < 16; i4++) {
        x5[i4 + 16] = a4[i4];
        x5[i4 + 32] = c5[i4];
        x5[i4 + 48] = b3[i4];
        x5[i4 + 64] = d3[i4];
      }
      const x32 = x5.subarray(32);
      const x16 = x5.subarray(16);
      inv25519(x32, x32);
      mul(x16, x16, x32);
      const q = new Uint8Array(32);
      pack25519(q, x16);
      return q;
    }
    exports.scalarMult = scalarMult;
    function scalarMultBase(n5) {
      return scalarMult(n5, _9);
    }
    exports.scalarMultBase = scalarMultBase;
    function generateKeyPairFromSeed2(seed) {
      if (seed.length !== exports.SECRET_KEY_LENGTH) {
        throw new Error(`x25519: seed must be ${exports.SECRET_KEY_LENGTH} bytes`);
      }
      const secretKey = new Uint8Array(seed);
      const publicKey = scalarMultBase(secretKey);
      return {
        publicKey,
        secretKey
      };
    }
    exports.generateKeyPairFromSeed = generateKeyPairFromSeed2;
    function generateKeyPair3(prng) {
      const seed = (0, random_1.randomBytes)(32, prng);
      const result = generateKeyPairFromSeed2(seed);
      (0, wipe_1.wipe)(seed);
      return result;
    }
    exports.generateKeyPair = generateKeyPair3;
    function sharedKey2(mySecretKey, theirPublicKey, rejectZero = false) {
      if (mySecretKey.length !== exports.PUBLIC_KEY_LENGTH) {
        throw new Error("X25519: incorrect secret key length");
      }
      if (theirPublicKey.length !== exports.PUBLIC_KEY_LENGTH) {
        throw new Error("X25519: incorrect public key length");
      }
      const result = scalarMult(mySecretKey, theirPublicKey);
      if (rejectZero) {
        let zeros = 0;
        for (let i4 = 0; i4 < result.length; i4++) {
          zeros |= result[i4];
        }
        if (zeros === 0) {
          throw new Error("X25519: invalid shared key");
        }
      }
      return result;
    }
    exports.sharedKey = sharedKey2;
  }
});

// node_modules/@walletconnect/environment/dist/cjs/crypto.js
var require_crypto = __commonJS({
  "node_modules/@walletconnect/environment/dist/cjs/crypto.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isBrowserCryptoAvailable = exports.getSubtleCrypto = exports.getBrowerCrypto = void 0;
    function getBrowerCrypto() {
      return (global === null || global === void 0 ? void 0 : global.crypto) || (global === null || global === void 0 ? void 0 : global.msCrypto) || {};
    }
    exports.getBrowerCrypto = getBrowerCrypto;
    function getSubtleCrypto() {
      const browserCrypto = getBrowerCrypto();
      return browserCrypto.subtle || browserCrypto.webkitSubtle;
    }
    exports.getSubtleCrypto = getSubtleCrypto;
    function isBrowserCryptoAvailable() {
      return !!getBrowerCrypto() && !!getSubtleCrypto();
    }
    exports.isBrowserCryptoAvailable = isBrowserCryptoAvailable;
  }
});

// node_modules/@walletconnect/environment/dist/cjs/env.js
var require_env = __commonJS({
  "node_modules/@walletconnect/environment/dist/cjs/env.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isBrowser = exports.isNode = exports.isReactNative = void 0;
    function isReactNative() {
      return typeof document === "undefined" && typeof navigator !== "undefined" && navigator.product === "ReactNative";
    }
    exports.isReactNative = isReactNative;
    function isNode2() {
      return typeof process !== "undefined" && typeof process.versions !== "undefined" && typeof process.versions.node !== "undefined";
    }
    exports.isNode = isNode2;
    function isBrowser() {
      return !isReactNative() && !isNode2();
    }
    exports.isBrowser = isBrowser;
  }
});

// node_modules/@walletconnect/environment/dist/cjs/index.js
var require_cjs4 = __commonJS({
  "node_modules/@walletconnect/environment/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_crypto(), exports);
    tslib_1.__exportStar(require_env(), exports);
  }
});

// node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/browser.js
var require_browser3 = __commonJS({
  "node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/browser.js"(exports, module) {
    "use strict";
    module.exports = function() {
      throw new Error(
        "ws does not work in the browser. Browser clients must use the native WebSocket object"
      );
    };
  }
});

// node_modules/@walletconnect/core/dist/index.es.js
var import_events7 = __toESM(require_events());

// node_modules/destr/dist/index.mjs
var suspectProtoRx = /"(?:_|\\u0{2}5[Ff]){2}(?:p|\\u0{2}70)(?:r|\\u0{2}72)(?:o|\\u0{2}6[Ff])(?:t|\\u0{2}74)(?:o|\\u0{2}6[Ff])(?:_|\\u0{2}5[Ff]){2}"\s*:/;
var suspectConstructorRx = /"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/;
var JsonSigRx = /^\s*["[{]|^\s*-?\d{1,16}(\.\d{1,17})?([Ee][+-]?\d+)?\s*$/;
function jsonParseTransform(key, value) {
  if (key === "__proto__" || key === "constructor" && value && typeof value === "object" && "prototype" in value) {
    warnKeyDropped(key);
    return;
  }
  return value;
}
function warnKeyDropped(key) {
  console.warn(`[destr] Dropping "${key}" key to prevent prototype pollution.`);
}
function destr(value, options = {}) {
  if (typeof value !== "string") {
    return value;
  }
  const _value = value.trim();
  if (
    // eslint-disable-next-line unicorn/prefer-at
    value[0] === '"' && value.endsWith('"') && !value.includes("\\")
  ) {
    return _value.slice(1, -1);
  }
  if (_value.length <= 9) {
    const _lval = _value.toLowerCase();
    if (_lval === "true") {
      return true;
    }
    if (_lval === "false") {
      return false;
    }
    if (_lval === "undefined") {
      return void 0;
    }
    if (_lval === "null") {
      return null;
    }
    if (_lval === "nan") {
      return Number.NaN;
    }
    if (_lval === "infinity") {
      return Number.POSITIVE_INFINITY;
    }
    if (_lval === "-infinity") {
      return Number.NEGATIVE_INFINITY;
    }
  }
  if (!JsonSigRx.test(value)) {
    if (options.strict) {
      throw new SyntaxError("[destr] Invalid JSON");
    }
    return value;
  }
  try {
    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {
      if (options.strict) {
        throw new Error("[destr] Possible prototype pollution");
      }
      return JSON.parse(value, jsonParseTransform);
    }
    return JSON.parse(value);
  } catch (error) {
    if (options.strict) {
      throw error;
    }
    return value;
  }
}

// node_modules/unstorage/dist/shared/unstorage.8581f561.mjs
function wrapToPromise(value) {
  if (!value || typeof value.then !== "function") {
    return Promise.resolve(value);
  }
  return value;
}
function asyncCall(function_, ...arguments_) {
  try {
    return wrapToPromise(function_(...arguments_));
  } catch (error) {
    return Promise.reject(error);
  }
}
function isPrimitive(value) {
  const type = typeof value;
  return value === null || type !== "object" && type !== "function";
}
function isPureObject(value) {
  const proto = Object.getPrototypeOf(value);
  return !proto || proto.isPrototypeOf(Object);
}
function stringify(value) {
  if (isPrimitive(value)) {
    return String(value);
  }
  if (isPureObject(value) || Array.isArray(value)) {
    return JSON.stringify(value);
  }
  if (typeof value.toJSON === "function") {
    return stringify(value.toJSON());
  }
  throw new Error("[unstorage] Cannot stringify value!");
}
function checkBufferSupport() {
  if (typeof Buffer === void 0) {
    throw new TypeError("[unstorage] Buffer is not supported!");
  }
}
var BASE64_PREFIX = "base64:";
function serializeRaw(value) {
  if (typeof value === "string") {
    return value;
  }
  checkBufferSupport();
  const base642 = Buffer.from(value).toString("base64");
  return BASE64_PREFIX + base642;
}
function deserializeRaw(value) {
  if (typeof value !== "string") {
    return value;
  }
  if (!value.startsWith(BASE64_PREFIX)) {
    return value;
  }
  checkBufferSupport();
  return Buffer.from(value.slice(BASE64_PREFIX.length), "base64");
}
function normalizeKey(key) {
  if (!key) {
    return "";
  }
  return key.split("?")[0].replace(/[/\\]/g, ":").replace(/:+/g, ":").replace(/^:|:$/g, "");
}
function joinKeys(...keys2) {
  return normalizeKey(keys2.join(":"));
}
function normalizeBaseKey(base3) {
  base3 = normalizeKey(base3);
  return base3 ? base3 + ":" : "";
}

// node_modules/unstorage/dist/index.mjs
function defineDriver(factory) {
  return factory;
}
var DRIVER_NAME = "memory";
var memory = defineDriver(() => {
  const data = /* @__PURE__ */ new Map();
  return {
    name: DRIVER_NAME,
    options: {},
    hasItem(key) {
      return data.has(key);
    },
    getItem(key) {
      return data.get(key) ?? null;
    },
    getItemRaw(key) {
      return data.get(key) ?? null;
    },
    setItem(key, value) {
      data.set(key, value);
    },
    setItemRaw(key, value) {
      data.set(key, value);
    },
    removeItem(key) {
      data.delete(key);
    },
    getKeys() {
      return Array.from(data.keys());
    },
    clear() {
      data.clear();
    },
    dispose() {
      data.clear();
    }
  };
});
function createStorage(options = {}) {
  const context = {
    mounts: { "": options.driver || memory() },
    mountpoints: [""],
    watching: false,
    watchListeners: [],
    unwatch: {}
  };
  const getMount = (key) => {
    for (const base3 of context.mountpoints) {
      if (key.startsWith(base3)) {
        return {
          base: base3,
          relativeKey: key.slice(base3.length),
          driver: context.mounts[base3]
        };
      }
    }
    return {
      base: "",
      relativeKey: key,
      driver: context.mounts[""]
    };
  };
  const getMounts = (base3, includeParent) => {
    return context.mountpoints.filter(
      (mountpoint) => mountpoint.startsWith(base3) || includeParent && base3.startsWith(mountpoint)
    ).map((mountpoint) => ({
      relativeBase: base3.length > mountpoint.length ? base3.slice(mountpoint.length) : void 0,
      mountpoint,
      driver: context.mounts[mountpoint]
    }));
  };
  const onChange = (event, key) => {
    if (!context.watching) {
      return;
    }
    key = normalizeKey(key);
    for (const listener of context.watchListeners) {
      listener(event, key);
    }
  };
  const startWatch = async () => {
    if (context.watching) {
      return;
    }
    context.watching = true;
    for (const mountpoint in context.mounts) {
      context.unwatch[mountpoint] = await watch(
        context.mounts[mountpoint],
        onChange,
        mountpoint
      );
    }
  };
  const stopWatch = async () => {
    if (!context.watching) {
      return;
    }
    for (const mountpoint in context.unwatch) {
      await context.unwatch[mountpoint]();
    }
    context.unwatch = {};
    context.watching = false;
  };
  const runBatch = (items, commonOptions, cb) => {
    const batches = /* @__PURE__ */ new Map();
    const getBatch = (mount) => {
      let batch = batches.get(mount.base);
      if (!batch) {
        batch = {
          driver: mount.driver,
          base: mount.base,
          items: []
        };
        batches.set(mount.base, batch);
      }
      return batch;
    };
    for (const item of items) {
      const isStringItem = typeof item === "string";
      const key = normalizeKey(isStringItem ? item : item.key);
      const value = isStringItem ? void 0 : item.value;
      const options2 = isStringItem || !item.options ? commonOptions : { ...commonOptions, ...item.options };
      const mount = getMount(key);
      getBatch(mount).items.push({
        key,
        value,
        relativeKey: mount.relativeKey,
        options: options2
      });
    }
    return Promise.all([...batches.values()].map((batch) => cb(batch))).then(
      (r3) => r3.flat()
    );
  };
  const storage = {
    // Item
    hasItem(key, opts = {}) {
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      return asyncCall(driver.hasItem, relativeKey, opts);
    },
    getItem(key, opts = {}) {
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      return asyncCall(driver.getItem, relativeKey, opts).then(
        (value) => destr(value)
      );
    },
    getItems(items, commonOptions) {
      return runBatch(items, commonOptions, (batch) => {
        if (batch.driver.getItems) {
          return asyncCall(
            batch.driver.getItems,
            batch.items.map((item) => ({
              key: item.relativeKey,
              options: item.options
            })),
            commonOptions
          ).then(
            (r3) => r3.map((item) => ({
              key: joinKeys(batch.base, item.key),
              value: destr(item.value)
            }))
          );
        }
        return Promise.all(
          batch.items.map((item) => {
            return asyncCall(
              batch.driver.getItem,
              item.relativeKey,
              item.options
            ).then((value) => ({
              key: item.key,
              value: destr(value)
            }));
          })
        );
      });
    },
    getItemRaw(key, opts = {}) {
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (driver.getItemRaw) {
        return asyncCall(driver.getItemRaw, relativeKey, opts);
      }
      return asyncCall(driver.getItem, relativeKey, opts).then(
        (value) => deserializeRaw(value)
      );
    },
    async setItem(key, value, opts = {}) {
      if (value === void 0) {
        return storage.removeItem(key);
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (!driver.setItem) {
        return;
      }
      await asyncCall(driver.setItem, relativeKey, stringify(value), opts);
      if (!driver.watch) {
        onChange("update", key);
      }
    },
    async setItems(items, commonOptions) {
      await runBatch(items, commonOptions, async (batch) => {
        if (batch.driver.setItems) {
          return asyncCall(
            batch.driver.setItems,
            batch.items.map((item) => ({
              key: item.relativeKey,
              value: stringify(item.value),
              options: item.options
            })),
            commonOptions
          );
        }
        if (!batch.driver.setItem) {
          return;
        }
        await Promise.all(
          batch.items.map((item) => {
            return asyncCall(
              batch.driver.setItem,
              item.relativeKey,
              stringify(item.value),
              item.options
            );
          })
        );
      });
    },
    async setItemRaw(key, value, opts = {}) {
      if (value === void 0) {
        return storage.removeItem(key, opts);
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (driver.setItemRaw) {
        await asyncCall(driver.setItemRaw, relativeKey, value, opts);
      } else if (driver.setItem) {
        await asyncCall(driver.setItem, relativeKey, serializeRaw(value), opts);
      } else {
        return;
      }
      if (!driver.watch) {
        onChange("update", key);
      }
    },
    async removeItem(key, opts = {}) {
      if (typeof opts === "boolean") {
        opts = { removeMeta: opts };
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (!driver.removeItem) {
        return;
      }
      await asyncCall(driver.removeItem, relativeKey, opts);
      if (opts.removeMeta || opts.removeMata) {
        await asyncCall(driver.removeItem, relativeKey + "$", opts);
      }
      if (!driver.watch) {
        onChange("remove", key);
      }
    },
    // Meta
    async getMeta(key, opts = {}) {
      if (typeof opts === "boolean") {
        opts = { nativeOnly: opts };
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      const meta = /* @__PURE__ */ Object.create(null);
      if (driver.getMeta) {
        Object.assign(meta, await asyncCall(driver.getMeta, relativeKey, opts));
      }
      if (!opts.nativeOnly) {
        const value = await asyncCall(
          driver.getItem,
          relativeKey + "$",
          opts
        ).then((value_) => destr(value_));
        if (value && typeof value === "object") {
          if (typeof value.atime === "string") {
            value.atime = new Date(value.atime);
          }
          if (typeof value.mtime === "string") {
            value.mtime = new Date(value.mtime);
          }
          Object.assign(meta, value);
        }
      }
      return meta;
    },
    setMeta(key, value, opts = {}) {
      return this.setItem(key + "$", value, opts);
    },
    removeMeta(key, opts = {}) {
      return this.removeItem(key + "$", opts);
    },
    // Keys
    async getKeys(base3, opts = {}) {
      base3 = normalizeBaseKey(base3);
      const mounts = getMounts(base3, true);
      let maskedMounts = [];
      const allKeys = [];
      for (const mount of mounts) {
        const rawKeys = await asyncCall(
          mount.driver.getKeys,
          mount.relativeBase,
          opts
        );
        const keys2 = rawKeys.map((key) => mount.mountpoint + normalizeKey(key)).filter((key) => !maskedMounts.some((p3) => key.startsWith(p3)));
        allKeys.push(...keys2);
        maskedMounts = [
          mount.mountpoint,
          ...maskedMounts.filter((p3) => !p3.startsWith(mount.mountpoint))
        ];
      }
      return base3 ? allKeys.filter((key) => key.startsWith(base3) && !key.endsWith("$")) : allKeys.filter((key) => !key.endsWith("$"));
    },
    // Utils
    async clear(base3, opts = {}) {
      base3 = normalizeBaseKey(base3);
      await Promise.all(
        getMounts(base3, false).map(async (m2) => {
          if (m2.driver.clear) {
            return asyncCall(m2.driver.clear, m2.relativeBase, opts);
          }
          if (m2.driver.removeItem) {
            const keys2 = await m2.driver.getKeys(m2.relativeBase || "", opts);
            return Promise.all(
              keys2.map((key) => m2.driver.removeItem(key, opts))
            );
          }
        })
      );
    },
    async dispose() {
      await Promise.all(
        Object.values(context.mounts).map((driver) => dispose(driver))
      );
    },
    async watch(callback) {
      await startWatch();
      context.watchListeners.push(callback);
      return async () => {
        context.watchListeners = context.watchListeners.filter(
          (listener) => listener !== callback
        );
        if (context.watchListeners.length === 0) {
          await stopWatch();
        }
      };
    },
    async unwatch() {
      context.watchListeners = [];
      await stopWatch();
    },
    // Mount
    mount(base3, driver) {
      base3 = normalizeBaseKey(base3);
      if (base3 && context.mounts[base3]) {
        throw new Error(`already mounted at ${base3}`);
      }
      if (base3) {
        context.mountpoints.push(base3);
        context.mountpoints.sort((a4, b3) => b3.length - a4.length);
      }
      context.mounts[base3] = driver;
      if (context.watching) {
        Promise.resolve(watch(driver, onChange, base3)).then((unwatcher) => {
          context.unwatch[base3] = unwatcher;
        }).catch(console.error);
      }
      return storage;
    },
    async unmount(base3, _dispose = true) {
      base3 = normalizeBaseKey(base3);
      if (!base3 || !context.mounts[base3]) {
        return;
      }
      if (context.watching && base3 in context.unwatch) {
        context.unwatch[base3]();
        delete context.unwatch[base3];
      }
      if (_dispose) {
        await dispose(context.mounts[base3]);
      }
      context.mountpoints = context.mountpoints.filter((key) => key !== base3);
      delete context.mounts[base3];
    },
    getMount(key = "") {
      key = normalizeKey(key) + ":";
      const m2 = getMount(key);
      return {
        driver: m2.driver,
        base: m2.base
      };
    },
    getMounts(base3 = "", opts = {}) {
      base3 = normalizeKey(base3);
      const mounts = getMounts(base3, opts.parents);
      return mounts.map((m2) => ({
        driver: m2.driver,
        base: m2.mountpoint
      }));
    }
  };
  return storage;
}
function watch(driver, onChange, base3) {
  return driver.watch ? driver.watch((event, key) => onChange(event, base3 + key)) : () => {
  };
}
async function dispose(driver) {
  if (typeof driver.dispose === "function") {
    await asyncCall(driver.dispose);
  }
}

// node_modules/idb-keyval/dist/index.js
function promisifyRequest(request) {
  return new Promise((resolve, reject) => {
    request.oncomplete = request.onsuccess = () => resolve(request.result);
    request.onabort = request.onerror = () => reject(request.error);
  });
}
function createStore(dbName, storeName) {
  const request = indexedDB.open(dbName);
  request.onupgradeneeded = () => request.result.createObjectStore(storeName);
  const dbp = promisifyRequest(request);
  return (txMode, callback) => dbp.then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));
}
var defaultGetStoreFunc;
function defaultGetStore() {
  if (!defaultGetStoreFunc) {
    defaultGetStoreFunc = createStore("keyval-store", "keyval");
  }
  return defaultGetStoreFunc;
}
function get(key, customStore = defaultGetStore()) {
  return customStore("readonly", (store) => promisifyRequest(store.get(key)));
}
function set(key, value, customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.put(value, key);
    return promisifyRequest(store.transaction);
  });
}
function del(key, customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.delete(key);
    return promisifyRequest(store.transaction);
  });
}
function clear(customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.clear();
    return promisifyRequest(store.transaction);
  });
}
function eachCursor(store, callback) {
  store.openCursor().onsuccess = function() {
    if (!this.result)
      return;
    callback(this.result);
    this.result.continue();
  };
  return promisifyRequest(store.transaction);
}
function keys(customStore = defaultGetStore()) {
  return customStore("readonly", (store) => {
    if (store.getAllKeys) {
      return promisifyRequest(store.getAllKeys());
    }
    const items = [];
    return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);
  });
}

// node_modules/@walletconnect/safe-json/dist/esm/index.js
var JSONStringify = (data) => JSON.stringify(data, (_3, value) => typeof value === "bigint" ? value.toString() + "n" : value);
var JSONParse = (json) => {
  const numbersBiggerThanMaxInt = /([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g;
  const serializedData = json.replace(numbersBiggerThanMaxInt, '$1"$2n"$3');
  return JSON.parse(serializedData, (_3, value) => {
    const isCustomFormatBigInt = typeof value === "string" && value.match(/^\d+n$/);
    if (isCustomFormatBigInt)
      return BigInt(value.substring(0, value.length - 1));
    return value;
  });
};
function safeJsonParse(value) {
  if (typeof value !== "string") {
    throw new Error(`Cannot safe json parse value of type ${typeof value}`);
  }
  try {
    return JSONParse(value);
  } catch (_a2) {
    return value;
  }
}
function safeJsonStringify(value) {
  return typeof value === "string" ? value : JSONStringify(value) || "";
}

// node_modules/@walletconnect/keyvaluestorage/dist/index.es.js
var x = "idb-keyval";
var z = (i4 = {}) => {
  const t = i4.base && i4.base.length > 0 ? `${i4.base}:` : "", e2 = (s3) => t + s3;
  let n5;
  return i4.dbName && i4.storeName && (n5 = createStore(i4.dbName, i4.storeName)), { name: x, options: i4, async hasItem(s3) {
    return !(typeof await get(e2(s3), n5) > "u");
  }, async getItem(s3) {
    return await get(e2(s3), n5) ?? null;
  }, setItem(s3, a4) {
    return set(e2(s3), a4, n5);
  }, removeItem(s3) {
    return del(e2(s3), n5);
  }, getKeys() {
    return keys(n5);
  }, clear() {
    return clear(n5);
  } };
};
var D = "WALLET_CONNECT_V2_INDEXED_DB";
var E = "keyvaluestorage";
var _ = class {
  constructor() {
    this.indexedDb = createStorage({ driver: z({ dbName: D, storeName: E }) });
  }
  async getKeys() {
    return this.indexedDb.getKeys();
  }
  async getEntries() {
    return (await this.indexedDb.getItems(await this.indexedDb.getKeys())).map((t) => [t.key, t.value]);
  }
  async getItem(t) {
    const e2 = await this.indexedDb.getItem(t);
    if (e2 !== null) return e2;
  }
  async setItem(t, e2) {
    await this.indexedDb.setItem(t, safeJsonStringify(e2));
  }
  async removeItem(t) {
    await this.indexedDb.removeItem(t);
  }
};
var l = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
var c = { exports: {} };
(function() {
  let i4;
  function t() {
  }
  i4 = t, i4.prototype.getItem = function(e2) {
    return this.hasOwnProperty(e2) ? String(this[e2]) : null;
  }, i4.prototype.setItem = function(e2, n5) {
    this[e2] = String(n5);
  }, i4.prototype.removeItem = function(e2) {
    delete this[e2];
  }, i4.prototype.clear = function() {
    const e2 = this;
    Object.keys(e2).forEach(function(n5) {
      e2[n5] = void 0, delete e2[n5];
    });
  }, i4.prototype.key = function(e2) {
    return e2 = e2 || 0, Object.keys(this)[e2];
  }, i4.prototype.__defineGetter__("length", function() {
    return Object.keys(this).length;
  }), typeof l < "u" && l.localStorage ? c.exports = l.localStorage : typeof window < "u" && window.localStorage ? c.exports = window.localStorage : c.exports = new t();
})();
function k(i4) {
  var t;
  return [i4[0], safeJsonParse((t = i4[1]) != null ? t : "")];
}
var K = class {
  constructor() {
    this.localStorage = c.exports;
  }
  async getKeys() {
    return Object.keys(this.localStorage);
  }
  async getEntries() {
    return Object.entries(this.localStorage).map(k);
  }
  async getItem(t) {
    const e2 = this.localStorage.getItem(t);
    if (e2 !== null) return safeJsonParse(e2);
  }
  async setItem(t, e2) {
    this.localStorage.setItem(t, safeJsonStringify(e2));
  }
  async removeItem(t) {
    this.localStorage.removeItem(t);
  }
};
var N = "wc_storage_version";
var y = 1;
var O = async (i4, t, e2) => {
  const n5 = N, s3 = await t.getItem(n5);
  if (s3 && s3 >= y) {
    e2(t);
    return;
  }
  const a4 = await i4.getKeys();
  if (!a4.length) {
    e2(t);
    return;
  }
  const m2 = [];
  for (; a4.length; ) {
    const r3 = a4.shift();
    if (!r3) continue;
    const o4 = r3.toLowerCase();
    if (o4.includes("wc@") || o4.includes("walletconnect") || o4.includes("wc_") || o4.includes("wallet_connect")) {
      const f4 = await i4.getItem(r3);
      await t.setItem(r3, f4), m2.push(r3);
    }
  }
  await t.setItem(n5, y), e2(t), j(i4, m2);
};
var j = async (i4, t) => {
  t.length && t.forEach(async (e2) => {
    await i4.removeItem(e2);
  });
};
var h = class {
  constructor() {
    this.initialized = false, this.setInitialized = (e2) => {
      this.storage = e2, this.initialized = true;
    };
    const t = new K();
    this.storage = t;
    try {
      const e2 = new _();
      O(t, e2, this.setInitialized);
    } catch {
      this.initialized = true;
    }
  }
  async getKeys() {
    return await this.initialize(), this.storage.getKeys();
  }
  async getEntries() {
    return await this.initialize(), this.storage.getEntries();
  }
  async getItem(t) {
    return await this.initialize(), this.storage.getItem(t);
  }
  async setItem(t, e2) {
    return await this.initialize(), this.storage.setItem(t, e2);
  }
  async removeItem(t) {
    return await this.initialize(), this.storage.removeItem(t);
  }
  async initialize() {
    this.initialized || await new Promise((t) => {
      const e2 = setInterval(() => {
        this.initialized && (clearInterval(e2), t());
      }, 20);
    });
  }
};

// node_modules/@walletconnect/heartbeat/dist/index.es.js
var import_events = __toESM(require_events());
var import_time = __toESM(require_cjs());

// node_modules/@walletconnect/events/dist/esm/events.js
var IEvents = class {
};

// node_modules/@walletconnect/heartbeat/dist/index.es.js
var n = class extends IEvents {
  constructor(e2) {
    super();
  }
};
var s = import_time.FIVE_SECONDS;
var r = { pulse: "heartbeat_pulse" };
var i = class _i2 extends n {
  constructor(e2) {
    super(e2), this.events = new import_events.EventEmitter(), this.interval = s, this.interval = (e2 == null ? void 0 : e2.interval) || s;
  }
  static async init(e2) {
    const t = new _i2(e2);
    return await t.init(), t;
  }
  async init() {
    await this.initialize();
  }
  stop() {
    clearInterval(this.intervalRef);
  }
  on(e2, t) {
    this.events.on(e2, t);
  }
  once(e2, t) {
    this.events.once(e2, t);
  }
  off(e2, t) {
    this.events.off(e2, t);
  }
  removeListener(e2, t) {
    this.events.removeListener(e2, t);
  }
  async initialize() {
    this.intervalRef = setInterval(() => this.pulse(), (0, import_time.toMiliseconds)(this.interval));
  }
  pulse() {
    this.events.emit(r.pulse);
  }
};

// node_modules/@walletconnect/logger/dist/index.es.js
var import_pino = __toESM(require_browser());
var import_pino2 = __toESM(require_browser());
var c2 = { level: "info" };
var n2 = "custom_context";
var l3 = 1e3 * 1024;
var O2 = class {
  constructor(e2) {
    this.nodeValue = e2, this.sizeInBytes = new TextEncoder().encode(this.nodeValue).length, this.next = null;
  }
  get value() {
    return this.nodeValue;
  }
  get size() {
    return this.sizeInBytes;
  }
};
var d = class {
  constructor(e2) {
    this.head = null, this.tail = null, this.lengthInNodes = 0, this.maxSizeInBytes = e2, this.sizeInBytes = 0;
  }
  append(e2) {
    const t = new O2(e2);
    if (t.size > this.maxSizeInBytes) throw new Error(`[LinkedList] Value too big to insert into list: ${e2} with size ${t.size}`);
    for (; this.size + t.size > this.maxSizeInBytes; ) this.shift();
    this.head ? (this.tail && (this.tail.next = t), this.tail = t) : (this.head = t, this.tail = t), this.lengthInNodes++, this.sizeInBytes += t.size;
  }
  shift() {
    if (!this.head) return;
    const e2 = this.head;
    this.head = this.head.next, this.head || (this.tail = null), this.lengthInNodes--, this.sizeInBytes -= e2.size;
  }
  toArray() {
    const e2 = [];
    let t = this.head;
    for (; t !== null; ) e2.push(t.value), t = t.next;
    return e2;
  }
  get length() {
    return this.lengthInNodes;
  }
  get size() {
    return this.sizeInBytes;
  }
  toOrderedArray() {
    return Array.from(this);
  }
  [Symbol.iterator]() {
    let e2 = this.head;
    return { next: () => {
      if (!e2) return { done: true, value: null };
      const t = e2.value;
      return e2 = e2.next, { done: false, value: t };
    } };
  }
};
var L = class {
  constructor(e2, t = l3) {
    this.level = e2 ?? "error", this.levelValue = import_pino.levels.values[this.level], this.MAX_LOG_SIZE_IN_BYTES = t, this.logs = new d(this.MAX_LOG_SIZE_IN_BYTES);
  }
  forwardToConsole(e2, t) {
    t === import_pino.levels.values.error ? console.error(e2) : t === import_pino.levels.values.warn ? console.warn(e2) : t === import_pino.levels.values.debug ? console.debug(e2) : t === import_pino.levels.values.trace ? console.trace(e2) : console.log(e2);
  }
  appendToLogs(e2) {
    this.logs.append(safeJsonStringify({ timestamp: (/* @__PURE__ */ new Date()).toISOString(), log: e2 }));
    const t = typeof e2 == "string" ? JSON.parse(e2).level : e2.level;
    t >= this.levelValue && this.forwardToConsole(e2, t);
  }
  getLogs() {
    return this.logs;
  }
  clearLogs() {
    this.logs = new d(this.MAX_LOG_SIZE_IN_BYTES);
  }
  getLogArray() {
    return Array.from(this.logs);
  }
  logsToBlob(e2) {
    const t = this.getLogArray();
    return t.push(safeJsonStringify({ extraMetadata: e2 })), new Blob(t, { type: "application/json" });
  }
};
var m = class {
  constructor(e2, t = l3) {
    this.baseChunkLogger = new L(e2, t);
  }
  write(e2) {
    this.baseChunkLogger.appendToLogs(e2);
  }
  getLogs() {
    return this.baseChunkLogger.getLogs();
  }
  clearLogs() {
    this.baseChunkLogger.clearLogs();
  }
  getLogArray() {
    return this.baseChunkLogger.getLogArray();
  }
  logsToBlob(e2) {
    return this.baseChunkLogger.logsToBlob(e2);
  }
  downloadLogsBlobInBrowser(e2) {
    const t = URL.createObjectURL(this.logsToBlob(e2)), o4 = document.createElement("a");
    o4.href = t, o4.download = `walletconnect-logs-${(/* @__PURE__ */ new Date()).toISOString()}.txt`, document.body.appendChild(o4), o4.click(), document.body.removeChild(o4), URL.revokeObjectURL(t);
  }
};
var B = class {
  constructor(e2, t = l3) {
    this.baseChunkLogger = new L(e2, t);
  }
  write(e2) {
    this.baseChunkLogger.appendToLogs(e2);
  }
  getLogs() {
    return this.baseChunkLogger.getLogs();
  }
  clearLogs() {
    this.baseChunkLogger.clearLogs();
  }
  getLogArray() {
    return this.baseChunkLogger.getLogArray();
  }
  logsToBlob(e2) {
    return this.baseChunkLogger.logsToBlob(e2);
  }
};
var x2 = Object.defineProperty;
var S = Object.defineProperties;
var _2 = Object.getOwnPropertyDescriptors;
var p = Object.getOwnPropertySymbols;
var T = Object.prototype.hasOwnProperty;
var z2 = Object.prototype.propertyIsEnumerable;
var f = (r3, e2, t) => e2 in r3 ? x2(r3, e2, { enumerable: true, configurable: true, writable: true, value: t }) : r3[e2] = t;
var i2 = (r3, e2) => {
  for (var t in e2 || (e2 = {})) T.call(e2, t) && f(r3, t, e2[t]);
  if (p) for (var t of p(e2)) z2.call(e2, t) && f(r3, t, e2[t]);
  return r3;
};
var g = (r3, e2) => S(r3, _2(e2));
function k2(r3) {
  return g(i2({}, r3), { level: (r3 == null ? void 0 : r3.level) || c2.level });
}
function v(r3, e2 = n2) {
  return r3[e2] || "";
}
function b(r3, e2, t = n2) {
  return r3[t] = e2, r3;
}
function y2(r3, e2 = n2) {
  let t = "";
  return typeof r3.bindings > "u" ? t = v(r3, e2) : t = r3.bindings().context || "", t;
}
function w(r3, e2, t = n2) {
  const o4 = y2(r3, t);
  return o4.trim() ? `${o4}/${e2}` : e2;
}
function E2(r3, e2, t = n2) {
  const o4 = w(r3, e2, t), a4 = r3.child({ context: o4 });
  return b(a4, o4, t);
}
function C(r3) {
  var e2, t;
  const o4 = new m((e2 = r3.opts) == null ? void 0 : e2.level, r3.maxSizeInBytes);
  return { logger: (0, import_pino.default)(g(i2({}, r3.opts), { level: "trace", browser: g(i2({}, (t = r3.opts) == null ? void 0 : t.browser), { write: (a4) => o4.write(a4) }) })), chunkLoggerController: o4 };
}
function I(r3) {
  var e2;
  const t = new B((e2 = r3.opts) == null ? void 0 : e2.level, r3.maxSizeInBytes);
  return { logger: (0, import_pino.default)(g(i2({}, r3.opts), { level: "trace" }), t), chunkLoggerController: t };
}
function A(r3) {
  return typeof r3.loggerOverride < "u" && typeof r3.loggerOverride != "string" ? { logger: r3.loggerOverride, chunkLoggerController: null } : typeof window < "u" ? C(r3) : I(r3);
}

// node_modules/@walletconnect/types/dist/index.es.js
var import_events4 = __toESM(require_events());
var n3 = class extends IEvents {
  constructor(s3) {
    super(), this.opts = s3, this.protocol = "wc", this.version = 2;
  }
};
var h3 = class extends IEvents {
  constructor(s3, t) {
    super(), this.core = s3, this.logger = t, this.records = /* @__PURE__ */ new Map();
  }
};
var a2 = class {
  constructor(s3, t) {
    this.logger = s3, this.core = t;
  }
};
var g2 = class extends IEvents {
  constructor(s3, t) {
    super(), this.relayer = s3, this.logger = t;
  }
};
var u = class extends IEvents {
  constructor(s3) {
    super();
  }
};
var p2 = class {
  constructor(s3, t, e2, f4) {
    this.core = s3, this.logger = t, this.name = e2;
  }
};
var d2 = class extends IEvents {
  constructor(s3, t) {
    super(), this.relayer = s3, this.logger = t;
  }
};
var x3 = class extends IEvents {
  constructor(s3, t) {
    super(), this.core = s3, this.logger = t;
  }
};
var y3 = class {
  constructor(s3, t, e2) {
    this.core = s3, this.logger = t, this.store = e2;
  }
};
var v2 = class {
  constructor(s3, t) {
    this.projectId = s3, this.logger = t;
  }
};
var C2 = class {
  constructor(s3, t, e2) {
    this.core = s3, this.logger = t, this.telemetryEnabled = e2;
  }
};
var S2 = class {
  constructor(s3) {
    this.opts = s3, this.protocol = "wc", this.version = 2;
  }
};
var M = class {
  constructor(s3) {
    this.client = s3;
  }
};

// node_modules/@walletconnect/relay-auth/dist/esm/api.js
var ed25519 = __toESM(require_ed25519());
var import_random = __toESM(require_random());
var import_time2 = __toESM(require_cjs());

// node_modules/@walletconnect/relay-auth/dist/esm/constants.js
var JWT_IRIDIUM_ALG = "EdDSA";
var JWT_IRIDIUM_TYP = "JWT";
var JWT_DELIMITER = ".";
var JWT_ENCODING = "base64url";
var JSON_ENCODING = "utf8";
var DATA_ENCODING = "utf8";
var DID_DELIMITER = ":";
var DID_PREFIX = "did";
var DID_METHOD = "key";
var MULTICODEC_ED25519_ENCODING = "base58btc";
var MULTICODEC_ED25519_BASE = "z";
var MULTICODEC_ED25519_HEADER = "K36";
var KEY_PAIR_SEED_LENGTH = 32;

// node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/util/as-uint8array.js
function asUint8Array(buf) {
  if (globalThis.Buffer != null) {
    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
  }
  return buf;
}

// node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/alloc.js
function allocUnsafe(size = 0) {
  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {
    return asUint8Array(globalThis.Buffer.allocUnsafe(size));
  }
  return new Uint8Array(size);
}

// node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/concat.js
function concat(arrays, length2) {
  if (!length2) {
    length2 = arrays.reduce((acc, curr) => acc + curr.length, 0);
  }
  const output = allocUnsafe(length2);
  let offset = 0;
  for (const arr of arrays) {
    output.set(arr, offset);
    offset += arr.length;
  }
  return asUint8Array(output);
}

// node_modules/multiformats/esm/src/bases/identity.js
var identity_exports = {};
__export(identity_exports, {
  identity: () => identity
});

// node_modules/multiformats/esm/vendor/base-x.js
function base(ALPHABET, name2) {
  if (ALPHABET.length >= 255) {
    throw new TypeError("Alphabet too long");
  }
  var BASE_MAP = new Uint8Array(256);
  for (var j5 = 0; j5 < BASE_MAP.length; j5++) {
    BASE_MAP[j5] = 255;
  }
  for (var i4 = 0; i4 < ALPHABET.length; i4++) {
    var x5 = ALPHABET.charAt(i4);
    var xc = x5.charCodeAt(0);
    if (BASE_MAP[xc] !== 255) {
      throw new TypeError(x5 + " is ambiguous");
    }
    BASE_MAP[xc] = i4;
  }
  var BASE = ALPHABET.length;
  var LEADER = ALPHABET.charAt(0);
  var FACTOR = Math.log(BASE) / Math.log(256);
  var iFACTOR = Math.log(256) / Math.log(BASE);
  function encode5(source) {
    if (source instanceof Uint8Array) ;
    else if (ArrayBuffer.isView(source)) {
      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);
    } else if (Array.isArray(source)) {
      source = Uint8Array.from(source);
    }
    if (!(source instanceof Uint8Array)) {
      throw new TypeError("Expected Uint8Array");
    }
    if (source.length === 0) {
      return "";
    }
    var zeroes = 0;
    var length2 = 0;
    var pbegin = 0;
    var pend = source.length;
    while (pbegin !== pend && source[pbegin] === 0) {
      pbegin++;
      zeroes++;
    }
    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;
    var b58 = new Uint8Array(size);
    while (pbegin !== pend) {
      var carry = source[pbegin];
      var i5 = 0;
      for (var it1 = size - 1; (carry !== 0 || i5 < length2) && it1 !== -1; it1--, i5++) {
        carry += 256 * b58[it1] >>> 0;
        b58[it1] = carry % BASE >>> 0;
        carry = carry / BASE >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length2 = i5;
      pbegin++;
    }
    var it22 = size - length2;
    while (it22 !== size && b58[it22] === 0) {
      it22++;
    }
    var str = LEADER.repeat(zeroes);
    for (; it22 < size; ++it22) {
      str += ALPHABET.charAt(b58[it22]);
    }
    return str;
  }
  function decodeUnsafe(source) {
    if (typeof source !== "string") {
      throw new TypeError("Expected String");
    }
    if (source.length === 0) {
      return new Uint8Array();
    }
    var psz = 0;
    if (source[psz] === " ") {
      return;
    }
    var zeroes = 0;
    var length2 = 0;
    while (source[psz] === LEADER) {
      zeroes++;
      psz++;
    }
    var size = (source.length - psz) * FACTOR + 1 >>> 0;
    var b256 = new Uint8Array(size);
    while (source[psz]) {
      var carry = BASE_MAP[source.charCodeAt(psz)];
      if (carry === 255) {
        return;
      }
      var i5 = 0;
      for (var it3 = size - 1; (carry !== 0 || i5 < length2) && it3 !== -1; it3--, i5++) {
        carry += BASE * b256[it3] >>> 0;
        b256[it3] = carry % 256 >>> 0;
        carry = carry / 256 >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length2 = i5;
      psz++;
    }
    if (source[psz] === " ") {
      return;
    }
    var it4 = size - length2;
    while (it4 !== size && b256[it4] === 0) {
      it4++;
    }
    var vch = new Uint8Array(zeroes + (size - it4));
    var j6 = zeroes;
    while (it4 !== size) {
      vch[j6++] = b256[it4++];
    }
    return vch;
  }
  function decode6(string3) {
    var buffer = decodeUnsafe(string3);
    if (buffer) {
      return buffer;
    }
    throw new Error(`Non-${name2} character`);
  }
  return {
    encode: encode5,
    decodeUnsafe,
    decode: decode6
  };
}
var src = base;
var _brrp__multiformats_scope_baseX = src;
var base_x_default = _brrp__multiformats_scope_baseX;

// node_modules/multiformats/esm/src/bytes.js
var empty = new Uint8Array(0);
var equals = (aa2, bb) => {
  if (aa2 === bb)
    return true;
  if (aa2.byteLength !== bb.byteLength) {
    return false;
  }
  for (let ii2 = 0; ii2 < aa2.byteLength; ii2++) {
    if (aa2[ii2] !== bb[ii2]) {
      return false;
    }
  }
  return true;
};
var coerce = (o4) => {
  if (o4 instanceof Uint8Array && o4.constructor.name === "Uint8Array")
    return o4;
  if (o4 instanceof ArrayBuffer)
    return new Uint8Array(o4);
  if (ArrayBuffer.isView(o4)) {
    return new Uint8Array(o4.buffer, o4.byteOffset, o4.byteLength);
  }
  throw new Error("Unknown type, must be binary type");
};
var fromString = (str) => new TextEncoder().encode(str);
var toString = (b3) => new TextDecoder().decode(b3);

// node_modules/multiformats/esm/src/bases/base.js
var Encoder = class {
  constructor(name2, prefix, baseEncode) {
    this.name = name2;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
  }
  encode(bytes) {
    if (bytes instanceof Uint8Array) {
      return `${this.prefix}${this.baseEncode(bytes)}`;
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};
var Decoder = class {
  constructor(name2, prefix, baseDecode) {
    this.name = name2;
    this.prefix = prefix;
    if (prefix.codePointAt(0) === void 0) {
      throw new Error("Invalid prefix character");
    }
    this.prefixCodePoint = prefix.codePointAt(0);
    this.baseDecode = baseDecode;
  }
  decode(text) {
    if (typeof text === "string") {
      if (text.codePointAt(0) !== this.prefixCodePoint) {
        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      }
      return this.baseDecode(text.slice(this.prefix.length));
    } else {
      throw Error("Can only multibase decode strings");
    }
  }
  or(decoder) {
    return or(this, decoder);
  }
};
var ComposedDecoder = class {
  constructor(decoders) {
    this.decoders = decoders;
  }
  or(decoder) {
    return or(this, decoder);
  }
  decode(input) {
    const prefix = input[0];
    const decoder = this.decoders[prefix];
    if (decoder) {
      return decoder.decode(input);
    } else {
      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
    }
  }
};
var or = (left, right) => new ComposedDecoder({
  ...left.decoders || { [left.prefix]: left },
  ...right.decoders || { [right.prefix]: right }
});
var Codec = class {
  constructor(name2, prefix, baseEncode, baseDecode) {
    this.name = name2;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
    this.baseDecode = baseDecode;
    this.encoder = new Encoder(name2, prefix, baseEncode);
    this.decoder = new Decoder(name2, prefix, baseDecode);
  }
  encode(input) {
    return this.encoder.encode(input);
  }
  decode(input) {
    return this.decoder.decode(input);
  }
};
var from = ({ name: name2, prefix, encode: encode5, decode: decode6 }) => new Codec(name2, prefix, encode5, decode6);
var baseX = ({ prefix, name: name2, alphabet: alphabet2 }) => {
  const { encode: encode5, decode: decode6 } = base_x_default(alphabet2, name2);
  return from({
    prefix,
    name: name2,
    encode: encode5,
    decode: (text) => coerce(decode6(text))
  });
};
var decode = (string3, alphabet2, bitsPerChar, name2) => {
  const codes = {};
  for (let i4 = 0; i4 < alphabet2.length; ++i4) {
    codes[alphabet2[i4]] = i4;
  }
  let end = string3.length;
  while (string3[end - 1] === "=") {
    --end;
  }
  const out = new Uint8Array(end * bitsPerChar / 8 | 0);
  let bits = 0;
  let buffer = 0;
  let written = 0;
  for (let i4 = 0; i4 < end; ++i4) {
    const value = codes[string3[i4]];
    if (value === void 0) {
      throw new SyntaxError(`Non-${name2} character`);
    }
    buffer = buffer << bitsPerChar | value;
    bits += bitsPerChar;
    if (bits >= 8) {
      bits -= 8;
      out[written++] = 255 & buffer >> bits;
    }
  }
  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {
    throw new SyntaxError("Unexpected end of data");
  }
  return out;
};
var encode = (data, alphabet2, bitsPerChar) => {
  const pad = alphabet2[alphabet2.length - 1] === "=";
  const mask = (1 << bitsPerChar) - 1;
  let out = "";
  let bits = 0;
  let buffer = 0;
  for (let i4 = 0; i4 < data.length; ++i4) {
    buffer = buffer << 8 | data[i4];
    bits += 8;
    while (bits > bitsPerChar) {
      bits -= bitsPerChar;
      out += alphabet2[mask & buffer >> bits];
    }
  }
  if (bits) {
    out += alphabet2[mask & buffer << bitsPerChar - bits];
  }
  if (pad) {
    while (out.length * bitsPerChar & 7) {
      out += "=";
    }
  }
  return out;
};
var rfc4648 = ({ name: name2, prefix, bitsPerChar, alphabet: alphabet2 }) => {
  return from({
    prefix,
    name: name2,
    encode(input) {
      return encode(input, alphabet2, bitsPerChar);
    },
    decode(input) {
      return decode(input, alphabet2, bitsPerChar, name2);
    }
  });
};

// node_modules/multiformats/esm/src/bases/identity.js
var identity = from({
  prefix: "\0",
  name: "identity",
  encode: (buf) => toString(buf),
  decode: (str) => fromString(str)
});

// node_modules/multiformats/esm/src/bases/base2.js
var base2_exports = {};
__export(base2_exports, {
  base2: () => base2
});
var base2 = rfc4648({
  prefix: "0",
  name: "base2",
  alphabet: "01",
  bitsPerChar: 1
});

// node_modules/multiformats/esm/src/bases/base8.js
var base8_exports = {};
__export(base8_exports, {
  base8: () => base8
});
var base8 = rfc4648({
  prefix: "7",
  name: "base8",
  alphabet: "01234567",
  bitsPerChar: 3
});

// node_modules/multiformats/esm/src/bases/base10.js
var base10_exports = {};
__export(base10_exports, {
  base10: () => base10
});
var base10 = baseX({
  prefix: "9",
  name: "base10",
  alphabet: "0123456789"
});

// node_modules/multiformats/esm/src/bases/base16.js
var base16_exports = {};
__export(base16_exports, {
  base16: () => base16,
  base16upper: () => base16upper
});
var base16 = rfc4648({
  prefix: "f",
  name: "base16",
  alphabet: "0123456789abcdef",
  bitsPerChar: 4
});
var base16upper = rfc4648({
  prefix: "F",
  name: "base16upper",
  alphabet: "0123456789ABCDEF",
  bitsPerChar: 4
});

// node_modules/multiformats/esm/src/bases/base32.js
var base32_exports = {};
__export(base32_exports, {
  base32: () => base32,
  base32hex: () => base32hex,
  base32hexpad: () => base32hexpad,
  base32hexpadupper: () => base32hexpadupper,
  base32hexupper: () => base32hexupper,
  base32pad: () => base32pad,
  base32padupper: () => base32padupper,
  base32upper: () => base32upper,
  base32z: () => base32z
});
var base32 = rfc4648({
  prefix: "b",
  name: "base32",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567",
  bitsPerChar: 5
});
var base32upper = rfc4648({
  prefix: "B",
  name: "base32upper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
  bitsPerChar: 5
});
var base32pad = rfc4648({
  prefix: "c",
  name: "base32pad",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
  bitsPerChar: 5
});
var base32padupper = rfc4648({
  prefix: "C",
  name: "base32padupper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
  bitsPerChar: 5
});
var base32hex = rfc4648({
  prefix: "v",
  name: "base32hex",
  alphabet: "0123456789abcdefghijklmnopqrstuv",
  bitsPerChar: 5
});
var base32hexupper = rfc4648({
  prefix: "V",
  name: "base32hexupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
  bitsPerChar: 5
});
var base32hexpad = rfc4648({
  prefix: "t",
  name: "base32hexpad",
  alphabet: "0123456789abcdefghijklmnopqrstuv=",
  bitsPerChar: 5
});
var base32hexpadupper = rfc4648({
  prefix: "T",
  name: "base32hexpadupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
  bitsPerChar: 5
});
var base32z = rfc4648({
  prefix: "h",
  name: "base32z",
  alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
  bitsPerChar: 5
});

// node_modules/multiformats/esm/src/bases/base36.js
var base36_exports = {};
__export(base36_exports, {
  base36: () => base36,
  base36upper: () => base36upper
});
var base36 = baseX({
  prefix: "k",
  name: "base36",
  alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
});
var base36upper = baseX({
  prefix: "K",
  name: "base36upper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
});

// node_modules/multiformats/esm/src/bases/base58.js
var base58_exports = {};
__export(base58_exports, {
  base58btc: () => base58btc,
  base58flickr: () => base58flickr
});
var base58btc = baseX({
  name: "base58btc",
  prefix: "z",
  alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
});
var base58flickr = baseX({
  name: "base58flickr",
  prefix: "Z",
  alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
});

// node_modules/multiformats/esm/src/bases/base64.js
var base64_exports = {};
__export(base64_exports, {
  base64: () => base64,
  base64pad: () => base64pad,
  base64url: () => base64url,
  base64urlpad: () => base64urlpad
});
var base64 = rfc4648({
  prefix: "m",
  name: "base64",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
  bitsPerChar: 6
});
var base64pad = rfc4648({
  prefix: "M",
  name: "base64pad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
  bitsPerChar: 6
});
var base64url = rfc4648({
  prefix: "u",
  name: "base64url",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
  bitsPerChar: 6
});
var base64urlpad = rfc4648({
  prefix: "U",
  name: "base64urlpad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
  bitsPerChar: 6
});

// node_modules/multiformats/esm/src/bases/base256emoji.js
var base256emoji_exports = {};
__export(base256emoji_exports, {
  base256emoji: () => base256emoji
});
var alphabet = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var alphabetBytesToChars = alphabet.reduce((p3, c5, i4) => {
  p3[i4] = c5;
  return p3;
}, []);
var alphabetCharsToBytes = alphabet.reduce((p3, c5, i4) => {
  p3[c5.codePointAt(0)] = i4;
  return p3;
}, []);
function encode2(data) {
  return data.reduce((p3, c5) => {
    p3 += alphabetBytesToChars[c5];
    return p3;
  }, "");
}
function decode2(str) {
  const byts = [];
  for (const char of str) {
    const byt = alphabetCharsToBytes[char.codePointAt(0)];
    if (byt === void 0) {
      throw new Error(`Non-base256emoji character: ${char}`);
    }
    byts.push(byt);
  }
  return new Uint8Array(byts);
}
var base256emoji = from({
  prefix: "🚀",
  name: "base256emoji",
  encode: encode2,
  decode: decode2
});

// node_modules/multiformats/esm/src/hashes/sha2-browser.js
var sha2_browser_exports = {};
__export(sha2_browser_exports, {
  sha256: () => sha256,
  sha512: () => sha512
});

// node_modules/multiformats/esm/vendor/varint.js
var encode_1 = encode3;
var MSB = 128;
var REST = 127;
var MSBALL = ~REST;
var INT = Math.pow(2, 31);
function encode3(num, out, offset) {
  out = out || [];
  offset = offset || 0;
  var oldOffset = offset;
  while (num >= INT) {
    out[offset++] = num & 255 | MSB;
    num /= 128;
  }
  while (num & MSBALL) {
    out[offset++] = num & 255 | MSB;
    num >>>= 7;
  }
  out[offset] = num | 0;
  encode3.bytes = offset - oldOffset + 1;
  return out;
}
var decode3 = read;
var MSB$1 = 128;
var REST$1 = 127;
function read(buf, offset) {
  var res = 0, offset = offset || 0, shift = 0, counter = offset, b3, l4 = buf.length;
  do {
    if (counter >= l4) {
      read.bytes = 0;
      throw new RangeError("Could not decode varint");
    }
    b3 = buf[counter++];
    res += shift < 28 ? (b3 & REST$1) << shift : (b3 & REST$1) * Math.pow(2, shift);
    shift += 7;
  } while (b3 >= MSB$1);
  read.bytes = counter - offset;
  return res;
}
var N1 = Math.pow(2, 7);
var N2 = Math.pow(2, 14);
var N3 = Math.pow(2, 21);
var N4 = Math.pow(2, 28);
var N5 = Math.pow(2, 35);
var N6 = Math.pow(2, 42);
var N7 = Math.pow(2, 49);
var N8 = Math.pow(2, 56);
var N9 = Math.pow(2, 63);
var length = function(value) {
  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;
};
var varint = {
  encode: encode_1,
  decode: decode3,
  encodingLength: length
};
var _brrp_varint = varint;
var varint_default = _brrp_varint;

// node_modules/multiformats/esm/src/varint.js
var decode4 = (data, offset = 0) => {
  const code2 = varint_default.decode(data, offset);
  return [
    code2,
    varint_default.decode.bytes
  ];
};
var encodeTo = (int, target, offset = 0) => {
  varint_default.encode(int, target, offset);
  return target;
};
var encodingLength = (int) => {
  return varint_default.encodingLength(int);
};

// node_modules/multiformats/esm/src/hashes/digest.js
var create = (code2, digest2) => {
  const size = digest2.byteLength;
  const sizeOffset = encodingLength(code2);
  const digestOffset = sizeOffset + encodingLength(size);
  const bytes = new Uint8Array(digestOffset + size);
  encodeTo(code2, bytes, 0);
  encodeTo(size, bytes, sizeOffset);
  bytes.set(digest2, digestOffset);
  return new Digest(code2, size, digest2, bytes);
};
var decode5 = (multihash) => {
  const bytes = coerce(multihash);
  const [code2, sizeOffset] = decode4(bytes);
  const [size, digestOffset] = decode4(bytes.subarray(sizeOffset));
  const digest2 = bytes.subarray(sizeOffset + digestOffset);
  if (digest2.byteLength !== size) {
    throw new Error("Incorrect length");
  }
  return new Digest(code2, size, digest2, bytes);
};
var equals2 = (a4, b3) => {
  if (a4 === b3) {
    return true;
  } else {
    return a4.code === b3.code && a4.size === b3.size && equals(a4.bytes, b3.bytes);
  }
};
var Digest = class {
  constructor(code2, size, digest2, bytes) {
    this.code = code2;
    this.size = size;
    this.digest = digest2;
    this.bytes = bytes;
  }
};

// node_modules/multiformats/esm/src/hashes/hasher.js
var from2 = ({ name: name2, code: code2, encode: encode5 }) => new Hasher(name2, code2, encode5);
var Hasher = class {
  constructor(name2, code2, encode5) {
    this.name = name2;
    this.code = code2;
    this.encode = encode5;
  }
  digest(input) {
    if (input instanceof Uint8Array) {
      const result = this.encode(input);
      return result instanceof Uint8Array ? create(this.code, result) : result.then((digest2) => create(this.code, digest2));
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};

// node_modules/multiformats/esm/src/hashes/sha2-browser.js
var sha = (name2) => async (data) => new Uint8Array(await crypto.subtle.digest(name2, data));
var sha256 = from2({
  name: "sha2-256",
  code: 18,
  encode: sha("SHA-256")
});
var sha512 = from2({
  name: "sha2-512",
  code: 19,
  encode: sha("SHA-512")
});

// node_modules/multiformats/esm/src/hashes/identity.js
var identity_exports2 = {};
__export(identity_exports2, {
  identity: () => identity2
});
var code = 0;
var name = "identity";
var encode4 = coerce;
var digest = (input) => create(code, encode4(input));
var identity2 = {
  code,
  name,
  encode: encode4,
  digest
};

// node_modules/multiformats/esm/src/codecs/json.js
var textEncoder = new TextEncoder();
var textDecoder = new TextDecoder();

// node_modules/multiformats/esm/src/cid.js
var CID = class _CID {
  constructor(version2, code2, multihash, bytes) {
    this.code = code2;
    this.version = version2;
    this.multihash = multihash;
    this.bytes = bytes;
    this.byteOffset = bytes.byteOffset;
    this.byteLength = bytes.byteLength;
    this.asCID = this;
    this._baseCache = /* @__PURE__ */ new Map();
    Object.defineProperties(this, {
      byteOffset: hidden,
      byteLength: hidden,
      code: readonly,
      version: readonly,
      multihash: readonly,
      bytes: readonly,
      _baseCache: hidden,
      asCID: hidden
    });
  }
  toV0() {
    switch (this.version) {
      case 0: {
        return this;
      }
      default: {
        const { code: code2, multihash } = this;
        if (code2 !== DAG_PB_CODE) {
          throw new Error("Cannot convert a non dag-pb CID to CIDv0");
        }
        if (multihash.code !== SHA_256_CODE) {
          throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");
        }
        return _CID.createV0(multihash);
      }
    }
  }
  toV1() {
    switch (this.version) {
      case 0: {
        const { code: code2, digest: digest2 } = this.multihash;
        const multihash = create(code2, digest2);
        return _CID.createV1(this.code, multihash);
      }
      case 1: {
        return this;
      }
      default: {
        throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);
      }
    }
  }
  equals(other) {
    return other && this.code === other.code && this.version === other.version && equals2(this.multihash, other.multihash);
  }
  toString(base3) {
    const { bytes, version: version2, _baseCache } = this;
    switch (version2) {
      case 0:
        return toStringV0(bytes, _baseCache, base3 || base58btc.encoder);
      default:
        return toStringV1(bytes, _baseCache, base3 || base32.encoder);
    }
  }
  toJSON() {
    return {
      code: this.code,
      version: this.version,
      hash: this.multihash.bytes
    };
  }
  get [Symbol.toStringTag]() {
    return "CID";
  }
  [Symbol.for("nodejs.util.inspect.custom")]() {
    return "CID(" + this.toString() + ")";
  }
  static isCID(value) {
    deprecate(/^0\.0/, IS_CID_DEPRECATION);
    return !!(value && (value[cidSymbol] || value.asCID === value));
  }
  get toBaseEncodedString() {
    throw new Error("Deprecated, use .toString()");
  }
  get codec() {
    throw new Error('"codec" property is deprecated, use integer "code" property instead');
  }
  get buffer() {
    throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead");
  }
  get multibaseName() {
    throw new Error('"multibaseName" property is deprecated');
  }
  get prefix() {
    throw new Error('"prefix" property is deprecated');
  }
  static asCID(value) {
    if (value instanceof _CID) {
      return value;
    } else if (value != null && value.asCID === value) {
      const { version: version2, code: code2, multihash, bytes } = value;
      return new _CID(version2, code2, multihash, bytes || encodeCID(version2, code2, multihash.bytes));
    } else if (value != null && value[cidSymbol] === true) {
      const { version: version2, multihash, code: code2 } = value;
      const digest2 = decode5(multihash);
      return _CID.create(version2, code2, digest2);
    } else {
      return null;
    }
  }
  static create(version2, code2, digest2) {
    if (typeof code2 !== "number") {
      throw new Error("String codecs are no longer supported");
    }
    switch (version2) {
      case 0: {
        if (code2 !== DAG_PB_CODE) {
          throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);
        } else {
          return new _CID(version2, code2, digest2, digest2.bytes);
        }
      }
      case 1: {
        const bytes = encodeCID(version2, code2, digest2.bytes);
        return new _CID(version2, code2, digest2, bytes);
      }
      default: {
        throw new Error("Invalid version");
      }
    }
  }
  static createV0(digest2) {
    return _CID.create(0, DAG_PB_CODE, digest2);
  }
  static createV1(code2, digest2) {
    return _CID.create(1, code2, digest2);
  }
  static decode(bytes) {
    const [cid, remainder] = _CID.decodeFirst(bytes);
    if (remainder.length) {
      throw new Error("Incorrect length");
    }
    return cid;
  }
  static decodeFirst(bytes) {
    const specs = _CID.inspectBytes(bytes);
    const prefixSize = specs.size - specs.multihashSize;
    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));
    if (multihashBytes.byteLength !== specs.multihashSize) {
      throw new Error("Incorrect length");
    }
    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);
    const digest2 = new Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);
    const cid = specs.version === 0 ? _CID.createV0(digest2) : _CID.createV1(specs.codec, digest2);
    return [
      cid,
      bytes.subarray(specs.size)
    ];
  }
  static inspectBytes(initialBytes) {
    let offset = 0;
    const next = () => {
      const [i4, length2] = decode4(initialBytes.subarray(offset));
      offset += length2;
      return i4;
    };
    let version2 = next();
    let codec = DAG_PB_CODE;
    if (version2 === 18) {
      version2 = 0;
      offset = 0;
    } else if (version2 === 1) {
      codec = next();
    }
    if (version2 !== 0 && version2 !== 1) {
      throw new RangeError(`Invalid CID version ${version2}`);
    }
    const prefixSize = offset;
    const multihashCode = next();
    const digestSize = next();
    const size = offset + digestSize;
    const multihashSize = size - prefixSize;
    return {
      version: version2,
      codec,
      multihashCode,
      digestSize,
      multihashSize,
      size
    };
  }
  static parse(source, base3) {
    const [prefix, bytes] = parseCIDtoBytes(source, base3);
    const cid = _CID.decode(bytes);
    cid._baseCache.set(prefix, source);
    return cid;
  }
};
var parseCIDtoBytes = (source, base3) => {
  switch (source[0]) {
    case "Q": {
      const decoder = base3 || base58btc;
      return [
        base58btc.prefix,
        decoder.decode(`${base58btc.prefix}${source}`)
      ];
    }
    case base58btc.prefix: {
      const decoder = base3 || base58btc;
      return [
        base58btc.prefix,
        decoder.decode(source)
      ];
    }
    case base32.prefix: {
      const decoder = base3 || base32;
      return [
        base32.prefix,
        decoder.decode(source)
      ];
    }
    default: {
      if (base3 == null) {
        throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");
      }
      return [
        source[0],
        base3.decode(source)
      ];
    }
  }
};
var toStringV0 = (bytes, cache, base3) => {
  const { prefix } = base3;
  if (prefix !== base58btc.prefix) {
    throw Error(`Cannot string encode V0 in ${base3.name} encoding`);
  }
  const cid = cache.get(prefix);
  if (cid == null) {
    const cid2 = base3.encode(bytes).slice(1);
    cache.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
};
var toStringV1 = (bytes, cache, base3) => {
  const { prefix } = base3;
  const cid = cache.get(prefix);
  if (cid == null) {
    const cid2 = base3.encode(bytes);
    cache.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
};
var DAG_PB_CODE = 112;
var SHA_256_CODE = 18;
var encodeCID = (version2, code2, multihash) => {
  const codeOffset = encodingLength(version2);
  const hashOffset = codeOffset + encodingLength(code2);
  const bytes = new Uint8Array(hashOffset + multihash.byteLength);
  encodeTo(version2, bytes, 0);
  encodeTo(code2, bytes, codeOffset);
  bytes.set(multihash, hashOffset);
  return bytes;
};
var cidSymbol = Symbol.for("@ipld/js-cid/CID");
var readonly = {
  writable: false,
  configurable: false,
  enumerable: true
};
var hidden = {
  writable: false,
  enumerable: false,
  configurable: false
};
var version = "0.0.0-dev";
var deprecate = (range, message) => {
  if (range.test(version)) {
    console.warn(message);
  } else {
    throw new Error(message);
  }
};
var IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`;

// node_modules/multiformats/esm/src/basics.js
var bases = {
  ...identity_exports,
  ...base2_exports,
  ...base8_exports,
  ...base10_exports,
  ...base16_exports,
  ...base32_exports,
  ...base36_exports,
  ...base58_exports,
  ...base64_exports,
  ...base256emoji_exports
};
var hashes = {
  ...sha2_browser_exports,
  ...identity_exports2
};

// node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/util/bases.js
function createCodec(name2, prefix, encode5, decode6) {
  return {
    name: name2,
    prefix,
    encoder: {
      name: name2,
      prefix,
      encode: encode5
    },
    decoder: { decode: decode6 }
  };
}
var string = createCodec("utf8", "u", (buf) => {
  const decoder = new TextDecoder("utf8");
  return "u" + decoder.decode(buf);
}, (str) => {
  const encoder = new TextEncoder();
  return encoder.encode(str.substring(1));
});
var ascii = createCodec("ascii", "a", (buf) => {
  let string3 = "a";
  for (let i4 = 0; i4 < buf.length; i4++) {
    string3 += String.fromCharCode(buf[i4]);
  }
  return string3;
}, (str) => {
  str = str.substring(1);
  const buf = allocUnsafe(str.length);
  for (let i4 = 0; i4 < str.length; i4++) {
    buf[i4] = str.charCodeAt(i4);
  }
  return buf;
});
var BASES = {
  utf8: string,
  "utf-8": string,
  hex: bases.base16,
  latin1: ascii,
  ascii,
  binary: ascii,
  ...bases
};
var bases_default = BASES;

// node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/to-string.js
function toString2(array, encoding = "utf8") {
  const base3 = bases_default[encoding];
  if (!base3) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString("utf8");
  }
  return base3.encoder.encode(array).substring(1);
}

// node_modules/@walletconnect/relay-auth/node_modules/uint8arrays/esm/src/from-string.js
function fromString2(string3, encoding = "utf8") {
  const base3 = bases_default[encoding];
  if (!base3) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return asUint8Array(globalThis.Buffer.from(string3, "utf-8"));
  }
  return base3.decoder.decode(`${base3.prefix}${string3}`);
}

// node_modules/@walletconnect/relay-auth/dist/esm/utils.js
function decodeJSON(str) {
  return safeJsonParse(toString2(fromString2(str, JWT_ENCODING), JSON_ENCODING));
}
function encodeJSON(val) {
  return toString2(fromString2(safeJsonStringify(val), JSON_ENCODING), JWT_ENCODING);
}
function encodeIss(publicKey) {
  const header = fromString2(MULTICODEC_ED25519_HEADER, MULTICODEC_ED25519_ENCODING);
  const multicodec = MULTICODEC_ED25519_BASE + toString2(concat([header, publicKey]), MULTICODEC_ED25519_ENCODING);
  return [DID_PREFIX, DID_METHOD, multicodec].join(DID_DELIMITER);
}
function encodeSig(bytes) {
  return toString2(bytes, JWT_ENCODING);
}
function decodeSig(encoded) {
  return fromString2(encoded, JWT_ENCODING);
}
function encodeData(params) {
  return fromString2([encodeJSON(params.header), encodeJSON(params.payload)].join(JWT_DELIMITER), DATA_ENCODING);
}
function encodeJWT(params) {
  return [
    encodeJSON(params.header),
    encodeJSON(params.payload),
    encodeSig(params.signature)
  ].join(JWT_DELIMITER);
}
function decodeJWT(jwt) {
  const params = jwt.split(JWT_DELIMITER);
  const header = decodeJSON(params[0]);
  const payload = decodeJSON(params[1]);
  const signature = decodeSig(params[2]);
  const data = fromString2(params.slice(0, 2).join(JWT_DELIMITER), DATA_ENCODING);
  return { header, payload, signature, data };
}

// node_modules/@walletconnect/relay-auth/dist/esm/api.js
function generateKeyPair(seed = (0, import_random.randomBytes)(KEY_PAIR_SEED_LENGTH)) {
  return ed25519.generateKeyPairFromSeed(seed);
}
async function signJWT(sub, aud, ttl, keyPair, iat = (0, import_time2.fromMiliseconds)(Date.now())) {
  const header = { alg: JWT_IRIDIUM_ALG, typ: JWT_IRIDIUM_TYP };
  const iss = encodeIss(keyPair.publicKey);
  const exp = iat + ttl;
  const payload = { iss, sub, aud, iat, exp };
  const data = encodeData({ header, payload });
  const signature = ed25519.sign(keyPair.secretKey, data);
  return encodeJWT({ header, payload, signature });
}

// node_modules/detect-browser/es/index.js
var __spreadArray = function(to2, from3, pack) {
  if (pack || arguments.length === 2) for (var i4 = 0, l4 = from3.length, ar3; i4 < l4; i4++) {
    if (ar3 || !(i4 in from3)) {
      if (!ar3) ar3 = Array.prototype.slice.call(from3, 0, i4);
      ar3[i4] = from3[i4];
    }
  }
  return to2.concat(ar3 || Array.prototype.slice.call(from3));
};
var BrowserInfo = (
  /** @class */
  /* @__PURE__ */ function() {
    function BrowserInfo2(name2, version2, os2) {
      this.name = name2;
      this.version = version2;
      this.os = os2;
      this.type = "browser";
    }
    return BrowserInfo2;
  }()
);
var NodeInfo = (
  /** @class */
  /* @__PURE__ */ function() {
    function NodeInfo2(version2) {
      this.version = version2;
      this.type = "node";
      this.name = "node";
      this.os = process.platform;
    }
    return NodeInfo2;
  }()
);
var SearchBotDeviceInfo = (
  /** @class */
  /* @__PURE__ */ function() {
    function SearchBotDeviceInfo2(name2, version2, os2, bot) {
      this.name = name2;
      this.version = version2;
      this.os = os2;
      this.bot = bot;
      this.type = "bot-device";
    }
    return SearchBotDeviceInfo2;
  }()
);
var BotInfo = (
  /** @class */
  /* @__PURE__ */ function() {
    function BotInfo2() {
      this.type = "bot";
      this.bot = true;
      this.name = "bot";
      this.version = null;
      this.os = null;
    }
    return BotInfo2;
  }()
);
var ReactNativeInfo = (
  /** @class */
  /* @__PURE__ */ function() {
    function ReactNativeInfo2() {
      this.type = "react-native";
      this.name = "react-native";
      this.version = null;
      this.os = null;
    }
    return ReactNativeInfo2;
  }()
);
var SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;
var SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/;
var REQUIRED_VERSION_PARTS = 3;
var userAgentRules = [
  ["aol", /AOLShield\/([0-9\._]+)/],
  ["edge", /Edge\/([0-9\._]+)/],
  ["edge-ios", /EdgiOS\/([0-9\._]+)/],
  ["yandexbrowser", /YaBrowser\/([0-9\._]+)/],
  ["kakaotalk", /KAKAOTALK\s([0-9\.]+)/],
  ["samsung", /SamsungBrowser\/([0-9\.]+)/],
  ["silk", /\bSilk\/([0-9._-]+)\b/],
  ["miui", /MiuiBrowser\/([0-9\.]+)$/],
  ["beaker", /BeakerBrowser\/([0-9\.]+)/],
  ["edge-chromium", /EdgA?\/([0-9\.]+)/],
  [
    "chromium-webview",
    /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/
  ],
  ["chrome", /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
  ["phantomjs", /PhantomJS\/([0-9\.]+)(:?\s|$)/],
  ["crios", /CriOS\/([0-9\.]+)(:?\s|$)/],
  ["firefox", /Firefox\/([0-9\.]+)(?:\s|$)/],
  ["fxios", /FxiOS\/([0-9\.]+)/],
  ["opera-mini", /Opera Mini.*Version\/([0-9\.]+)/],
  ["opera", /Opera\/([0-9\.]+)(?:\s|$)/],
  ["opera", /OPR\/([0-9\.]+)(:?\s|$)/],
  ["pie", /^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],
  ["pie", /^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/],
  ["netfront", /^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],
  ["ie", /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
  ["ie", /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
  ["ie", /MSIE\s(7\.0)/],
  ["bb10", /BB10;\sTouch.*Version\/([0-9\.]+)/],
  ["android", /Android\s([0-9\.]+)/],
  ["ios", /Version\/([0-9\._]+).*Mobile.*Safari.*/],
  ["safari", /Version\/([0-9\._]+).*Safari/],
  ["facebook", /FB[AS]V\/([0-9\.]+)/],
  ["instagram", /Instagram\s([0-9\.]+)/],
  ["ios-webview", /AppleWebKit\/([0-9\.]+).*Mobile/],
  ["ios-webview", /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
  ["curl", /^curl\/([0-9\.]+)$/],
  ["searchbot", SEARCHBOX_UA_REGEX]
];
var operatingSystemRules = [
  ["iOS", /iP(hone|od|ad)/],
  ["Android OS", /Android/],
  ["BlackBerry OS", /BlackBerry|BB10/],
  ["Windows Mobile", /IEMobile/],
  ["Amazon OS", /Kindle/],
  ["Windows 3.11", /Win16/],
  ["Windows 95", /(Windows 95)|(Win95)|(Windows_95)/],
  ["Windows 98", /(Windows 98)|(Win98)/],
  ["Windows 2000", /(Windows NT 5.0)|(Windows 2000)/],
  ["Windows XP", /(Windows NT 5.1)|(Windows XP)/],
  ["Windows Server 2003", /(Windows NT 5.2)/],
  ["Windows Vista", /(Windows NT 6.0)/],
  ["Windows 7", /(Windows NT 6.1)/],
  ["Windows 8", /(Windows NT 6.2)/],
  ["Windows 8.1", /(Windows NT 6.3)/],
  ["Windows 10", /(Windows NT 10.0)/],
  ["Windows ME", /Windows ME/],
  ["Windows CE", /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],
  ["Open BSD", /OpenBSD/],
  ["Sun OS", /SunOS/],
  ["Chrome OS", /CrOS/],
  ["Linux", /(Linux)|(X11)/],
  ["Mac OS", /(Mac_PowerPC)|(Macintosh)/],
  ["QNX", /QNX/],
  ["BeOS", /BeOS/],
  ["OS/2", /OS\/2/]
];
function detect(userAgent) {
  if (!!userAgent) {
    return parseUserAgent(userAgent);
  }
  if (typeof document === "undefined" && typeof navigator !== "undefined" && navigator.product === "ReactNative") {
    return new ReactNativeInfo();
  }
  if (typeof navigator !== "undefined") {
    return parseUserAgent(navigator.userAgent);
  }
  return getNodeVersion();
}
function matchUserAgent(ua2) {
  return ua2 !== "" && userAgentRules.reduce(function(matched, _a2) {
    var browser = _a2[0], regex = _a2[1];
    if (matched) {
      return matched;
    }
    var uaMatch = regex.exec(ua2);
    return !!uaMatch && [browser, uaMatch];
  }, false);
}
function parseUserAgent(ua2) {
  var matchedRule = matchUserAgent(ua2);
  if (!matchedRule) {
    return null;
  }
  var name2 = matchedRule[0], match = matchedRule[1];
  if (name2 === "searchbot") {
    return new BotInfo();
  }
  var versionParts = match[1] && match[1].split(".").join("_").split("_").slice(0, 3);
  if (versionParts) {
    if (versionParts.length < REQUIRED_VERSION_PARTS) {
      versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);
    }
  } else {
    versionParts = [];
  }
  var version2 = versionParts.join(".");
  var os2 = detectOS(ua2);
  var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua2);
  if (searchBotMatch && searchBotMatch[1]) {
    return new SearchBotDeviceInfo(name2, version2, os2, searchBotMatch[1]);
  }
  return new BrowserInfo(name2, version2, os2);
}
function detectOS(ua2) {
  for (var ii2 = 0, count = operatingSystemRules.length; ii2 < count; ii2++) {
    var _a2 = operatingSystemRules[ii2], os2 = _a2[0], regex = _a2[1];
    var match = regex.exec(ua2);
    if (match) {
      return os2;
    }
  }
  return null;
}
function getNodeVersion() {
  var isNode2 = typeof process !== "undefined" && process.version;
  return isNode2 ? new NodeInfo(process.version.slice(1)) : null;
}
function createVersionParts(count) {
  var output = [];
  for (var ii2 = 0; ii2 < count; ii2++) {
    output.push("0");
  }
  return output;
}

// node_modules/@walletconnect/utils/dist/index.es.js
var import_time3 = __toESM(require_cjs());
var import_window_getters = __toESM(require_cjs2());
var import_window_metadata = __toESM(require_cjs3());
var Nr = __toESM(require_query_string());
var import_chacha20poly1305 = __toESM(require_chacha20poly1305());
var import_hkdf = __toESM(require_hkdf());
var import_random2 = __toESM(require_random());
var import_sha256 = __toESM(require_sha256());
var ln = __toESM(require_x25519());

// node_modules/uint8arrays/esm/src/alloc.js
function allocUnsafe2(size = 0) {
  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {
    return globalThis.Buffer.allocUnsafe(size);
  }
  return new Uint8Array(size);
}

// node_modules/uint8arrays/esm/src/concat.js
function concat2(arrays, length2) {
  if (!length2) {
    length2 = arrays.reduce((acc, curr) => acc + curr.length, 0);
  }
  const output = allocUnsafe2(length2);
  let offset = 0;
  for (const arr of arrays) {
    output.set(arr, offset);
    offset += arr.length;
  }
  return output;
}

// node_modules/uint8arrays/esm/src/util/bases.js
function createCodec2(name2, prefix, encode5, decode6) {
  return {
    name: name2,
    prefix,
    encoder: {
      name: name2,
      prefix,
      encode: encode5
    },
    decoder: { decode: decode6 }
  };
}
var string2 = createCodec2("utf8", "u", (buf) => {
  const decoder = new TextDecoder("utf8");
  return "u" + decoder.decode(buf);
}, (str) => {
  const encoder = new TextEncoder();
  return encoder.encode(str.substring(1));
});
var ascii2 = createCodec2("ascii", "a", (buf) => {
  let string3 = "a";
  for (let i4 = 0; i4 < buf.length; i4++) {
    string3 += String.fromCharCode(buf[i4]);
  }
  return string3;
}, (str) => {
  str = str.substring(1);
  const buf = allocUnsafe2(str.length);
  for (let i4 = 0; i4 < str.length; i4++) {
    buf[i4] = str.charCodeAt(i4);
  }
  return buf;
});
var BASES2 = {
  utf8: string2,
  "utf-8": string2,
  hex: bases.base16,
  latin1: ascii2,
  ascii: ascii2,
  binary: ascii2,
  ...bases
};
var bases_default2 = BASES2;

// node_modules/uint8arrays/esm/src/from-string.js
function fromString3(string3, encoding = "utf8") {
  const base3 = bases_default2[encoding];
  if (!base3) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return globalThis.Buffer.from(string3, "utf8");
  }
  return base3.decoder.decode(`${base3.prefix}${string3}`);
}

// node_modules/uint8arrays/esm/src/to-string.js
function toString3(array, encoding = "utf8") {
  const base3 = bases_default2[encoding];
  if (!base3) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString("utf8");
  }
  return base3.encoder.encode(array).substring(1);
}

// node_modules/@walletconnect/utils/dist/index.es.js
var import_elliptic = __toESM(require_elliptic());

// node_modules/@walletconnect/relay-api/dist/index.es.js
var C3 = { waku: { publish: "waku_publish", batchPublish: "waku_batchPublish", subscribe: "waku_subscribe", batchSubscribe: "waku_batchSubscribe", subscription: "waku_subscription", unsubscribe: "waku_unsubscribe", batchUnsubscribe: "waku_batchUnsubscribe", batchFetchMessages: "waku_batchFetchMessages" }, irn: { publish: "irn_publish", batchPublish: "irn_batchPublish", subscribe: "irn_subscribe", batchSubscribe: "irn_batchSubscribe", subscription: "irn_subscription", unsubscribe: "irn_unsubscribe", batchUnsubscribe: "irn_batchUnsubscribe", batchFetchMessages: "irn_batchFetchMessages" }, iridium: { publish: "iridium_publish", batchPublish: "iridium_batchPublish", subscribe: "iridium_subscribe", batchSubscribe: "iridium_batchSubscribe", subscription: "iridium_subscription", unsubscribe: "iridium_unsubscribe", batchUnsubscribe: "iridium_batchUnsubscribe", batchFetchMessages: "iridium_batchFetchMessages" } };

// node_modules/@walletconnect/utils/dist/index.es.js
var Ir = ":";
function pn(e2) {
  const [t, r3] = e2.split(Ir);
  return { namespace: t, reference: r3 };
}
function ci(e2) {
  const [t, r3, i4] = e2.split(Ir);
  return { namespace: t, reference: r3, address: i4 };
}
function Go(e2, t = []) {
  const r3 = [];
  return Object.keys(e2).forEach((i4) => {
    if (t.length && !t.includes(i4)) return;
    const n5 = e2[i4];
    r3.push(...n5.accounts);
  }), r3;
}
function _r(e2, t) {
  return e2.includes(":") ? [e2] : t.chains || [];
}
var Wo = Object.defineProperty;
var yn = Object.getOwnPropertySymbols;
var Xo = Object.prototype.hasOwnProperty;
var Zo = Object.prototype.propertyIsEnumerable;
var wn = (e2, t, r3) => t in e2 ? Wo(e2, t, { enumerable: true, configurable: true, writable: true, value: r3 }) : e2[t] = r3;
var xn = (e2, t) => {
  for (var r3 in t || (t = {})) Xo.call(t, r3) && wn(e2, r3, t[r3]);
  if (yn) for (var r3 of yn(t)) Zo.call(t, r3) && wn(e2, r3, t[r3]);
  return e2;
};
var Mn = "ReactNative";
var qt = { reactNative: "react-native", node: "node", browser: "browser", unknown: "unknown" };
var Sn = "js";
function pi() {
  return typeof process < "u" && typeof process.versions < "u" && typeof process.versions.node < "u";
}
function er() {
  return !(0, import_window_getters.getDocument)() && !!(0, import_window_getters.getNavigator)() && navigator.product === Mn;
}
function pr() {
  return !pi() && !!(0, import_window_getters.getNavigator)() && !!(0, import_window_getters.getDocument)();
}
function We() {
  return er() ? qt.reactNative : pi() ? qt.node : pr() ? qt.browser : qt.unknown;
}
function es() {
  var e2;
  try {
    return er() && typeof global < "u" && typeof (global == null ? void 0 : global.Application) < "u" ? (e2 = global.Application) == null ? void 0 : e2.applicationId : void 0;
  } catch {
    return;
  }
}
function Nn(e2, t) {
  let r3 = Nr.parse(e2);
  return r3 = xn(xn({}, r3), t), e2 = Nr.stringify(r3), e2;
}
function rs() {
  return (0, import_window_metadata.getWindowMetadata)() || { name: "", description: "", url: "", icons: [""] };
}
function In() {
  if (We() === qt.reactNative && typeof global < "u" && typeof (global == null ? void 0 : global.Platform) < "u") {
    const { OS: r3, Version: i4 } = global.Platform;
    return [r3, i4].join("-");
  }
  const e2 = detect();
  if (e2 === null) return "unknown";
  const t = e2.os ? e2.os.replace(" ", "").toLowerCase() : "unknown";
  return e2.type === "browser" ? [t, e2.name, e2.version].join("-") : [t, e2.version].join("-");
}
function _n() {
  var e2;
  const t = We();
  return t === qt.browser ? [t, ((e2 = (0, import_window_getters.getLocation)()) == null ? void 0 : e2.host) || "unknown"].join(":") : t;
}
function Bn(e2, t, r3) {
  const i4 = In(), n5 = _n();
  return [[e2, t].join("-"), [Sn, r3].join("-"), i4, n5].join("/");
}
function ns({ protocol: e2, version: t, relayUrl: r3, sdkVersion: i4, auth: n5, projectId: o4, useOnCloseEvent: h5, bundleId: p3 }) {
  const A3 = r3.split("?"), m2 = Bn(e2, t, i4), w4 = { auth: n5, ua: m2, projectId: o4, useOnCloseEvent: h5 || void 0, origin: p3 || void 0 }, y6 = Nn(A3[1] || "", w4);
  return A3[0] + "?" + y6;
}
function _e(e2, t) {
  return e2.filter((r3) => t.includes(r3)).length === e2.length;
}
function as(e2) {
  return Object.fromEntries(e2.entries());
}
function us(e2) {
  return new Map(Object.entries(e2));
}
function ds(e2 = import_time3.FIVE_MINUTES, t) {
  const r3 = (0, import_time3.toMiliseconds)(e2 || import_time3.FIVE_MINUTES);
  let i4, n5, o4;
  return { resolve: (h5) => {
    o4 && i4 && (clearTimeout(o4), i4(h5));
  }, reject: (h5) => {
    o4 && n5 && (clearTimeout(o4), n5(h5));
  }, done: () => new Promise((h5, p3) => {
    o4 = setTimeout(() => {
      p3(new Error(t));
    }, r3), i4 = h5, n5 = p3;
  }) };
}
function ps(e2, t, r3) {
  return new Promise(async (i4, n5) => {
    const o4 = setTimeout(() => n5(new Error(r3)), t);
    try {
      const h5 = await e2;
      i4(h5);
    } catch (h5) {
      n5(h5);
    }
    clearTimeout(o4);
  });
}
function vi(e2, t) {
  if (typeof t == "string" && t.startsWith(`${e2}:`)) return t;
  if (e2.toLowerCase() === "topic") {
    if (typeof t != "string") throw new Error('Value must be "string" for expirer target type: topic');
    return `topic:${t}`;
  } else if (e2.toLowerCase() === "id") {
    if (typeof t != "number") throw new Error('Value must be "number" for expirer target type: id');
    return `id:${t}`;
  }
  throw new Error(`Unknown expirer target type: ${e2}`);
}
function vs(e2) {
  return vi("topic", e2);
}
function ms(e2) {
  return vi("id", e2);
}
function gs(e2) {
  const [t, r3] = e2.split(":"), i4 = { id: void 0, topic: void 0 };
  if (t === "topic" && typeof r3 == "string") i4.topic = r3;
  else if (t === "id" && Number.isInteger(Number(r3))) i4.id = Number(r3);
  else throw new Error(`Invalid target, expected id:number or topic:string, got ${t}:${r3}`);
  return i4;
}
function As(e2, t) {
  return (0, import_time3.fromMiliseconds)((t || Date.now()) + (0, import_time3.toMiliseconds)(e2));
}
function bs(e2) {
  return Date.now() >= (0, import_time3.toMiliseconds)(e2);
}
function ys(e2, t) {
  return `${e2}${t ? `:${t}` : ""}`;
}
function ge(e2 = [], t = []) {
  return [.../* @__PURE__ */ new Set([...e2, ...t])];
}
async function ws({ id: e2, topic: t, wcDeepLink: r3 }) {
  try {
    if (!r3) return;
    const i4 = typeof r3 == "string" ? JSON.parse(r3) : r3;
    let n5 = i4 == null ? void 0 : i4.href;
    if (typeof n5 != "string") return;
    n5.endsWith("/") && (n5 = n5.slice(0, -1));
    const o4 = `${n5}/wc?requestId=${e2}&sessionTopic=${t}`, h5 = We();
    h5 === qt.browser ? o4.startsWith("https://") || o4.startsWith("http://") ? window.open(o4, "_blank", "noreferrer noopener") : window.open(o4, "_self", "noreferrer noopener") : h5 === qt.reactNative && typeof (global == null ? void 0 : global.Linking) < "u" && await global.Linking.openURL(o4);
  } catch (i4) {
    console.error(i4);
  }
}
async function xs(e2, t) {
  try {
    return await e2.getItem(t) || (pr() ? localStorage.getItem(t) : void 0);
  } catch (r3) {
    console.error(r3);
  }
}
function Ms() {
  return typeof crypto < "u" && crypto != null && crypto.randomUUID ? crypto.randomUUID() : "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/gu, (e2) => {
    const t = Math.random() * 16 | 0;
    return (e2 === "x" ? t : t & 3 | 8).toString(16);
  });
}
var Pn = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function Es(e2) {
  var t = e2.default;
  if (typeof t == "function") {
    var r3 = function() {
      return t.apply(this, arguments);
    };
    r3.prototype = t.prototype;
  } else r3 = {};
  return Object.defineProperty(r3, "__esModule", { value: true }), Object.keys(e2).forEach(function(i4) {
    var n5 = Object.getOwnPropertyDescriptor(e2, i4);
    Object.defineProperty(r3, i4, n5.get ? n5 : { enumerable: true, get: function() {
      return e2[i4];
    } });
  }), r3;
}
var Dn = { exports: {} };
(function(e2) {
  (function() {
    var t = "input is invalid type", r3 = "finalize already called", i4 = typeof window == "object", n5 = i4 ? window : {};
    n5.JS_SHA3_NO_WINDOW && (i4 = false);
    var o4 = !i4 && typeof self == "object", h5 = !n5.JS_SHA3_NO_NODE_JS && typeof process == "object" && process.versions && process.versions.node;
    h5 ? n5 = Pn : o4 && (n5 = self);
    var p3 = !n5.JS_SHA3_NO_COMMON_JS && true && e2.exports, A3 = !n5.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer < "u", m2 = "0123456789abcdef".split(""), w4 = [31, 7936, 2031616, 520093696], y6 = [4, 1024, 262144, 67108864], S6 = [1, 256, 65536, 16777216], I3 = [6, 1536, 393216, 100663296], N10 = [0, 8, 16, 24], C4 = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648], F2 = [224, 256, 384, 512], U2 = [128, 256], J2 = ["hex", "buffer", "arrayBuffer", "array", "digest"], Bt2 = { 128: 168, 256: 136 };
    (n5.JS_SHA3_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(u3) {
      return Object.prototype.toString.call(u3) === "[object Array]";
    }), A3 && (n5.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(u3) {
      return typeof u3 == "object" && u3.buffer && u3.buffer.constructor === ArrayBuffer;
    });
    for (var G = function(u3, E4, _3) {
      return function(B3) {
        return new s3(u3, E4, u3).update(B3)[_3]();
      };
    }, H = function(u3, E4, _3) {
      return function(B3, R2) {
        return new s3(u3, E4, R2).update(B3)[_3]();
      };
    }, z3 = function(u3, E4, _3) {
      return function(B3, R2, T2, P3) {
        return f4["cshake" + u3].update(B3, R2, T2, P3)[_3]();
      };
    }, Pt2 = function(u3, E4, _3) {
      return function(B3, R2, T2, P3) {
        return f4["kmac" + u3].update(B3, R2, T2, P3)[_3]();
      };
    }, W2 = function(u3, E4, _3, B3) {
      for (var R2 = 0; R2 < J2.length; ++R2) {
        var T2 = J2[R2];
        u3[T2] = E4(_3, B3, T2);
      }
      return u3;
    }, Rt2 = function(u3, E4) {
      var _3 = G(u3, E4, "hex");
      return _3.create = function() {
        return new s3(u3, E4, u3);
      }, _3.update = function(B3) {
        return _3.create().update(B3);
      }, W2(_3, G, u3, E4);
    }, Yt2 = function(u3, E4) {
      var _3 = H(u3, E4, "hex");
      return _3.create = function(B3) {
        return new s3(u3, E4, B3);
      }, _3.update = function(B3, R2) {
        return _3.create(R2).update(B3);
      }, W2(_3, H, u3, E4);
    }, Y2 = function(u3, E4) {
      var _3 = Bt2[u3], B3 = z3(u3, E4, "hex");
      return B3.create = function(R2, T2, P3) {
        return !T2 && !P3 ? f4["shake" + u3].create(R2) : new s3(u3, E4, R2).bytepad([T2, P3], _3);
      }, B3.update = function(R2, T2, P3, O4) {
        return B3.create(T2, P3, O4).update(R2);
      }, W2(B3, z3, u3, E4);
    }, Vt2 = function(u3, E4) {
      var _3 = Bt2[u3], B3 = Pt2(u3, E4, "hex");
      return B3.create = function(R2, T2, P3) {
        return new v3(u3, E4, T2).bytepad(["KMAC", P3], _3).bytepad([R2], _3);
      }, B3.update = function(R2, T2, P3, O4) {
        return B3.create(R2, P3, O4).update(T2);
      }, W2(B3, Pt2, u3, E4);
    }, b3 = [{ name: "keccak", padding: S6, bits: F2, createMethod: Rt2 }, { name: "sha3", padding: I3, bits: F2, createMethod: Rt2 }, { name: "shake", padding: w4, bits: U2, createMethod: Yt2 }, { name: "cshake", padding: y6, bits: U2, createMethod: Y2 }, { name: "kmac", padding: y6, bits: U2, createMethod: Vt2 }], f4 = {}, a4 = [], c5 = 0; c5 < b3.length; ++c5) for (var d3 = b3[c5], g3 = d3.bits, x5 = 0; x5 < g3.length; ++x5) {
      var M4 = d3.name + "_" + g3[x5];
      if (a4.push(M4), f4[M4] = d3.createMethod(g3[x5], d3.padding), d3.name !== "sha3") {
        var l4 = d3.name + g3[x5];
        a4.push(l4), f4[l4] = f4[M4];
      }
    }
    function s3(u3, E4, _3) {
      this.blocks = [], this.s = [], this.padding = E4, this.outputBits = _3, this.reset = true, this.finalized = false, this.block = 0, this.start = 0, this.blockCount = 1600 - (u3 << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = _3 >> 5, this.extraBytes = (_3 & 31) >> 3;
      for (var B3 = 0; B3 < 50; ++B3) this.s[B3] = 0;
    }
    s3.prototype.update = function(u3) {
      if (this.finalized) throw new Error(r3);
      var E4, _3 = typeof u3;
      if (_3 !== "string") {
        if (_3 === "object") {
          if (u3 === null) throw new Error(t);
          if (A3 && u3.constructor === ArrayBuffer) u3 = new Uint8Array(u3);
          else if (!Array.isArray(u3) && (!A3 || !ArrayBuffer.isView(u3))) throw new Error(t);
        } else throw new Error(t);
        E4 = true;
      }
      for (var B3 = this.blocks, R2 = this.byteCount, T2 = u3.length, P3 = this.blockCount, O4 = 0, Ct2 = this.s, D2, q; O4 < T2; ) {
        if (this.reset) for (this.reset = false, B3[0] = this.block, D2 = 1; D2 < P3 + 1; ++D2) B3[D2] = 0;
        if (E4) for (D2 = this.start; O4 < T2 && D2 < R2; ++O4) B3[D2 >> 2] |= u3[O4] << N10[D2++ & 3];
        else for (D2 = this.start; O4 < T2 && D2 < R2; ++O4) q = u3.charCodeAt(O4), q < 128 ? B3[D2 >> 2] |= q << N10[D2++ & 3] : q < 2048 ? (B3[D2 >> 2] |= (192 | q >> 6) << N10[D2++ & 3], B3[D2 >> 2] |= (128 | q & 63) << N10[D2++ & 3]) : q < 55296 || q >= 57344 ? (B3[D2 >> 2] |= (224 | q >> 12) << N10[D2++ & 3], B3[D2 >> 2] |= (128 | q >> 6 & 63) << N10[D2++ & 3], B3[D2 >> 2] |= (128 | q & 63) << N10[D2++ & 3]) : (q = 65536 + ((q & 1023) << 10 | u3.charCodeAt(++O4) & 1023), B3[D2 >> 2] |= (240 | q >> 18) << N10[D2++ & 3], B3[D2 >> 2] |= (128 | q >> 12 & 63) << N10[D2++ & 3], B3[D2 >> 2] |= (128 | q >> 6 & 63) << N10[D2++ & 3], B3[D2 >> 2] |= (128 | q & 63) << N10[D2++ & 3]);
        if (this.lastByteIndex = D2, D2 >= R2) {
          for (this.start = D2 - R2, this.block = B3[P3], D2 = 0; D2 < P3; ++D2) Ct2[D2] ^= B3[D2];
          k4(Ct2), this.reset = true;
        } else this.start = D2;
      }
      return this;
    }, s3.prototype.encode = function(u3, E4) {
      var _3 = u3 & 255, B3 = 1, R2 = [_3];
      for (u3 = u3 >> 8, _3 = u3 & 255; _3 > 0; ) R2.unshift(_3), u3 = u3 >> 8, _3 = u3 & 255, ++B3;
      return E4 ? R2.push(B3) : R2.unshift(B3), this.update(R2), R2.length;
    }, s3.prototype.encodeString = function(u3) {
      var E4, _3 = typeof u3;
      if (_3 !== "string") {
        if (_3 === "object") {
          if (u3 === null) throw new Error(t);
          if (A3 && u3.constructor === ArrayBuffer) u3 = new Uint8Array(u3);
          else if (!Array.isArray(u3) && (!A3 || !ArrayBuffer.isView(u3))) throw new Error(t);
        } else throw new Error(t);
        E4 = true;
      }
      var B3 = 0, R2 = u3.length;
      if (E4) B3 = R2;
      else for (var T2 = 0; T2 < u3.length; ++T2) {
        var P3 = u3.charCodeAt(T2);
        P3 < 128 ? B3 += 1 : P3 < 2048 ? B3 += 2 : P3 < 55296 || P3 >= 57344 ? B3 += 3 : (P3 = 65536 + ((P3 & 1023) << 10 | u3.charCodeAt(++T2) & 1023), B3 += 4);
      }
      return B3 += this.encode(B3 * 8), this.update(u3), B3;
    }, s3.prototype.bytepad = function(u3, E4) {
      for (var _3 = this.encode(E4), B3 = 0; B3 < u3.length; ++B3) _3 += this.encodeString(u3[B3]);
      var R2 = E4 - _3 % E4, T2 = [];
      return T2.length = R2, this.update(T2), this;
    }, s3.prototype.finalize = function() {
      if (!this.finalized) {
        this.finalized = true;
        var u3 = this.blocks, E4 = this.lastByteIndex, _3 = this.blockCount, B3 = this.s;
        if (u3[E4 >> 2] |= this.padding[E4 & 3], this.lastByteIndex === this.byteCount) for (u3[0] = u3[_3], E4 = 1; E4 < _3 + 1; ++E4) u3[E4] = 0;
        for (u3[_3 - 1] |= 2147483648, E4 = 0; E4 < _3; ++E4) B3[E4] ^= u3[E4];
        k4(B3);
      }
    }, s3.prototype.toString = s3.prototype.hex = function() {
      this.finalize();
      for (var u3 = this.blockCount, E4 = this.s, _3 = this.outputBlocks, B3 = this.extraBytes, R2 = 0, T2 = 0, P3 = "", O4; T2 < _3; ) {
        for (R2 = 0; R2 < u3 && T2 < _3; ++R2, ++T2) O4 = E4[R2], P3 += m2[O4 >> 4 & 15] + m2[O4 & 15] + m2[O4 >> 12 & 15] + m2[O4 >> 8 & 15] + m2[O4 >> 20 & 15] + m2[O4 >> 16 & 15] + m2[O4 >> 28 & 15] + m2[O4 >> 24 & 15];
        T2 % u3 === 0 && (k4(E4), R2 = 0);
      }
      return B3 && (O4 = E4[R2], P3 += m2[O4 >> 4 & 15] + m2[O4 & 15], B3 > 1 && (P3 += m2[O4 >> 12 & 15] + m2[O4 >> 8 & 15]), B3 > 2 && (P3 += m2[O4 >> 20 & 15] + m2[O4 >> 16 & 15])), P3;
    }, s3.prototype.arrayBuffer = function() {
      this.finalize();
      var u3 = this.blockCount, E4 = this.s, _3 = this.outputBlocks, B3 = this.extraBytes, R2 = 0, T2 = 0, P3 = this.outputBits >> 3, O4;
      B3 ? O4 = new ArrayBuffer(_3 + 1 << 2) : O4 = new ArrayBuffer(P3);
      for (var Ct2 = new Uint32Array(O4); T2 < _3; ) {
        for (R2 = 0; R2 < u3 && T2 < _3; ++R2, ++T2) Ct2[T2] = E4[R2];
        T2 % u3 === 0 && k4(E4);
      }
      return B3 && (Ct2[R2] = E4[R2], O4 = O4.slice(0, P3)), O4;
    }, s3.prototype.buffer = s3.prototype.arrayBuffer, s3.prototype.digest = s3.prototype.array = function() {
      this.finalize();
      for (var u3 = this.blockCount, E4 = this.s, _3 = this.outputBlocks, B3 = this.extraBytes, R2 = 0, T2 = 0, P3 = [], O4, Ct2; T2 < _3; ) {
        for (R2 = 0; R2 < u3 && T2 < _3; ++R2, ++T2) O4 = T2 << 2, Ct2 = E4[R2], P3[O4] = Ct2 & 255, P3[O4 + 1] = Ct2 >> 8 & 255, P3[O4 + 2] = Ct2 >> 16 & 255, P3[O4 + 3] = Ct2 >> 24 & 255;
        T2 % u3 === 0 && k4(E4);
      }
      return B3 && (O4 = T2 << 2, Ct2 = E4[R2], P3[O4] = Ct2 & 255, B3 > 1 && (P3[O4 + 1] = Ct2 >> 8 & 255), B3 > 2 && (P3[O4 + 2] = Ct2 >> 16 & 255)), P3;
    };
    function v3(u3, E4, _3) {
      s3.call(this, u3, E4, _3);
    }
    v3.prototype = new s3(), v3.prototype.finalize = function() {
      return this.encode(this.outputBits, true), s3.prototype.finalize.call(this);
    };
    var k4 = function(u3) {
      var E4, _3, B3, R2, T2, P3, O4, Ct2, D2, q, De2, X2, Z2, Fe2, $, tt3, Te, et3, rt2, Ue, it3, nt2, ke2, ft2, ot2, qe3, st3, at2, Ke, ut2, ht2, He3, ct2, lt2, ze3, dt2, pt2, Le2, vt2, mt2, je3, gt2, At2, Qe3, bt2, yt2, Je3, wt2, xt2, Ge3, Mt2, Et2, Ye3, St2, Nt2, Ve2, It2, _t2, Me, Ee2, Se, Ne2, Ie2;
      for (B3 = 0; B3 < 48; B3 += 2) R2 = u3[0] ^ u3[10] ^ u3[20] ^ u3[30] ^ u3[40], T2 = u3[1] ^ u3[11] ^ u3[21] ^ u3[31] ^ u3[41], P3 = u3[2] ^ u3[12] ^ u3[22] ^ u3[32] ^ u3[42], O4 = u3[3] ^ u3[13] ^ u3[23] ^ u3[33] ^ u3[43], Ct2 = u3[4] ^ u3[14] ^ u3[24] ^ u3[34] ^ u3[44], D2 = u3[5] ^ u3[15] ^ u3[25] ^ u3[35] ^ u3[45], q = u3[6] ^ u3[16] ^ u3[26] ^ u3[36] ^ u3[46], De2 = u3[7] ^ u3[17] ^ u3[27] ^ u3[37] ^ u3[47], X2 = u3[8] ^ u3[18] ^ u3[28] ^ u3[38] ^ u3[48], Z2 = u3[9] ^ u3[19] ^ u3[29] ^ u3[39] ^ u3[49], E4 = X2 ^ (P3 << 1 | O4 >>> 31), _3 = Z2 ^ (O4 << 1 | P3 >>> 31), u3[0] ^= E4, u3[1] ^= _3, u3[10] ^= E4, u3[11] ^= _3, u3[20] ^= E4, u3[21] ^= _3, u3[30] ^= E4, u3[31] ^= _3, u3[40] ^= E4, u3[41] ^= _3, E4 = R2 ^ (Ct2 << 1 | D2 >>> 31), _3 = T2 ^ (D2 << 1 | Ct2 >>> 31), u3[2] ^= E4, u3[3] ^= _3, u3[12] ^= E4, u3[13] ^= _3, u3[22] ^= E4, u3[23] ^= _3, u3[32] ^= E4, u3[33] ^= _3, u3[42] ^= E4, u3[43] ^= _3, E4 = P3 ^ (q << 1 | De2 >>> 31), _3 = O4 ^ (De2 << 1 | q >>> 31), u3[4] ^= E4, u3[5] ^= _3, u3[14] ^= E4, u3[15] ^= _3, u3[24] ^= E4, u3[25] ^= _3, u3[34] ^= E4, u3[35] ^= _3, u3[44] ^= E4, u3[45] ^= _3, E4 = Ct2 ^ (X2 << 1 | Z2 >>> 31), _3 = D2 ^ (Z2 << 1 | X2 >>> 31), u3[6] ^= E4, u3[7] ^= _3, u3[16] ^= E4, u3[17] ^= _3, u3[26] ^= E4, u3[27] ^= _3, u3[36] ^= E4, u3[37] ^= _3, u3[46] ^= E4, u3[47] ^= _3, E4 = q ^ (R2 << 1 | T2 >>> 31), _3 = De2 ^ (T2 << 1 | R2 >>> 31), u3[8] ^= E4, u3[9] ^= _3, u3[18] ^= E4, u3[19] ^= _3, u3[28] ^= E4, u3[29] ^= _3, u3[38] ^= E4, u3[39] ^= _3, u3[48] ^= E4, u3[49] ^= _3, Fe2 = u3[0], $ = u3[1], yt2 = u3[11] << 4 | u3[10] >>> 28, Je3 = u3[10] << 4 | u3[11] >>> 28, at2 = u3[20] << 3 | u3[21] >>> 29, Ke = u3[21] << 3 | u3[20] >>> 29, Ee2 = u3[31] << 9 | u3[30] >>> 23, Se = u3[30] << 9 | u3[31] >>> 23, gt2 = u3[40] << 18 | u3[41] >>> 14, At2 = u3[41] << 18 | u3[40] >>> 14, lt2 = u3[2] << 1 | u3[3] >>> 31, ze3 = u3[3] << 1 | u3[2] >>> 31, tt3 = u3[13] << 12 | u3[12] >>> 20, Te = u3[12] << 12 | u3[13] >>> 20, wt2 = u3[22] << 10 | u3[23] >>> 22, xt2 = u3[23] << 10 | u3[22] >>> 22, ut2 = u3[33] << 13 | u3[32] >>> 19, ht2 = u3[32] << 13 | u3[33] >>> 19, Ne2 = u3[42] << 2 | u3[43] >>> 30, Ie2 = u3[43] << 2 | u3[42] >>> 30, St2 = u3[5] << 30 | u3[4] >>> 2, Nt2 = u3[4] << 30 | u3[5] >>> 2, dt2 = u3[14] << 6 | u3[15] >>> 26, pt2 = u3[15] << 6 | u3[14] >>> 26, et3 = u3[25] << 11 | u3[24] >>> 21, rt2 = u3[24] << 11 | u3[25] >>> 21, Ge3 = u3[34] << 15 | u3[35] >>> 17, Mt2 = u3[35] << 15 | u3[34] >>> 17, He3 = u3[45] << 29 | u3[44] >>> 3, ct2 = u3[44] << 29 | u3[45] >>> 3, ft2 = u3[6] << 28 | u3[7] >>> 4, ot2 = u3[7] << 28 | u3[6] >>> 4, Ve2 = u3[17] << 23 | u3[16] >>> 9, It2 = u3[16] << 23 | u3[17] >>> 9, Le2 = u3[26] << 25 | u3[27] >>> 7, vt2 = u3[27] << 25 | u3[26] >>> 7, Ue = u3[36] << 21 | u3[37] >>> 11, it3 = u3[37] << 21 | u3[36] >>> 11, Et2 = u3[47] << 24 | u3[46] >>> 8, Ye3 = u3[46] << 24 | u3[47] >>> 8, Qe3 = u3[8] << 27 | u3[9] >>> 5, bt2 = u3[9] << 27 | u3[8] >>> 5, qe3 = u3[18] << 20 | u3[19] >>> 12, st3 = u3[19] << 20 | u3[18] >>> 12, _t2 = u3[29] << 7 | u3[28] >>> 25, Me = u3[28] << 7 | u3[29] >>> 25, mt2 = u3[38] << 8 | u3[39] >>> 24, je3 = u3[39] << 8 | u3[38] >>> 24, nt2 = u3[48] << 14 | u3[49] >>> 18, ke2 = u3[49] << 14 | u3[48] >>> 18, u3[0] = Fe2 ^ ~tt3 & et3, u3[1] = $ ^ ~Te & rt2, u3[10] = ft2 ^ ~qe3 & at2, u3[11] = ot2 ^ ~st3 & Ke, u3[20] = lt2 ^ ~dt2 & Le2, u3[21] = ze3 ^ ~pt2 & vt2, u3[30] = Qe3 ^ ~yt2 & wt2, u3[31] = bt2 ^ ~Je3 & xt2, u3[40] = St2 ^ ~Ve2 & _t2, u3[41] = Nt2 ^ ~It2 & Me, u3[2] = tt3 ^ ~et3 & Ue, u3[3] = Te ^ ~rt2 & it3, u3[12] = qe3 ^ ~at2 & ut2, u3[13] = st3 ^ ~Ke & ht2, u3[22] = dt2 ^ ~Le2 & mt2, u3[23] = pt2 ^ ~vt2 & je3, u3[32] = yt2 ^ ~wt2 & Ge3, u3[33] = Je3 ^ ~xt2 & Mt2, u3[42] = Ve2 ^ ~_t2 & Ee2, u3[43] = It2 ^ ~Me & Se, u3[4] = et3 ^ ~Ue & nt2, u3[5] = rt2 ^ ~it3 & ke2, u3[14] = at2 ^ ~ut2 & He3, u3[15] = Ke ^ ~ht2 & ct2, u3[24] = Le2 ^ ~mt2 & gt2, u3[25] = vt2 ^ ~je3 & At2, u3[34] = wt2 ^ ~Ge3 & Et2, u3[35] = xt2 ^ ~Mt2 & Ye3, u3[44] = _t2 ^ ~Ee2 & Ne2, u3[45] = Me ^ ~Se & Ie2, u3[6] = Ue ^ ~nt2 & Fe2, u3[7] = it3 ^ ~ke2 & $, u3[16] = ut2 ^ ~He3 & ft2, u3[17] = ht2 ^ ~ct2 & ot2, u3[26] = mt2 ^ ~gt2 & lt2, u3[27] = je3 ^ ~At2 & ze3, u3[36] = Ge3 ^ ~Et2 & Qe3, u3[37] = Mt2 ^ ~Ye3 & bt2, u3[46] = Ee2 ^ ~Ne2 & St2, u3[47] = Se ^ ~Ie2 & Nt2, u3[8] = nt2 ^ ~Fe2 & tt3, u3[9] = ke2 ^ ~$ & Te, u3[18] = He3 ^ ~ft2 & qe3, u3[19] = ct2 ^ ~ot2 & st3, u3[28] = gt2 ^ ~lt2 & dt2, u3[29] = At2 ^ ~ze3 & pt2, u3[38] = Et2 ^ ~Qe3 & yt2, u3[39] = Ye3 ^ ~bt2 & Je3, u3[48] = Ne2 ^ ~St2 & Ve2, u3[49] = Ie2 ^ ~Nt2 & It2, u3[0] ^= C4[B3], u3[1] ^= C4[B3 + 1];
    };
    if (p3) e2.exports = f4;
    else for (c5 = 0; c5 < a4.length; ++c5) n5[a4[c5]] = f4[a4[c5]];
  })();
})(Dn);
var Ss = Dn.exports;
var Ns = "logger/5.7.0";
var Fn = false;
var Tn = false;
var Cr = { debug: 1, default: 2, info: 2, warning: 3, error: 4, off: 5 };
var Un = Cr.default;
var gi = null;
function Is() {
  try {
    const e2 = [];
    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((t) => {
      try {
        if ("test".normalize(t) !== "test") throw new Error("bad normalize");
      } catch {
        e2.push(t);
      }
    }), e2.length) throw new Error("missing " + e2.join(", "));
    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation");
  } catch (e2) {
    return e2.message;
  }
  return null;
}
var kn = Is();
var Ai;
(function(e2) {
  e2.DEBUG = "DEBUG", e2.INFO = "INFO", e2.WARNING = "WARNING", e2.ERROR = "ERROR", e2.OFF = "OFF";
})(Ai || (Ai = {}));
var re;
(function(e2) {
  e2.UNKNOWN_ERROR = "UNKNOWN_ERROR", e2.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e2.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e2.NETWORK_ERROR = "NETWORK_ERROR", e2.SERVER_ERROR = "SERVER_ERROR", e2.TIMEOUT = "TIMEOUT", e2.BUFFER_OVERRUN = "BUFFER_OVERRUN", e2.NUMERIC_FAULT = "NUMERIC_FAULT", e2.MISSING_NEW = "MISSING_NEW", e2.INVALID_ARGUMENT = "INVALID_ARGUMENT", e2.MISSING_ARGUMENT = "MISSING_ARGUMENT", e2.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e2.CALL_EXCEPTION = "CALL_EXCEPTION", e2.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e2.NONCE_EXPIRED = "NONCE_EXPIRED", e2.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e2.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e2.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e2.ACTION_REJECTED = "ACTION_REJECTED";
})(re || (re = {}));
var qn = "0123456789abcdef";
var L2 = class _L {
  constructor(t) {
    Object.defineProperty(this, "version", { enumerable: true, value: t, writable: false });
  }
  _log(t, r3) {
    const i4 = t.toLowerCase();
    Cr[i4] == null && this.throwArgumentError("invalid log level name", "logLevel", t), !(Un > Cr[i4]) && console.log.apply(console, r3);
  }
  debug(...t) {
    this._log(_L.levels.DEBUG, t);
  }
  info(...t) {
    this._log(_L.levels.INFO, t);
  }
  warn(...t) {
    this._log(_L.levels.WARNING, t);
  }
  makeError(t, r3, i4) {
    if (Tn) return this.makeError("censored error", r3, {});
    r3 || (r3 = _L.errors.UNKNOWN_ERROR), i4 || (i4 = {});
    const n5 = [];
    Object.keys(i4).forEach((A3) => {
      const m2 = i4[A3];
      try {
        if (m2 instanceof Uint8Array) {
          let w4 = "";
          for (let y6 = 0; y6 < m2.length; y6++) w4 += qn[m2[y6] >> 4], w4 += qn[m2[y6] & 15];
          n5.push(A3 + "=Uint8Array(0x" + w4 + ")");
        } else n5.push(A3 + "=" + JSON.stringify(m2));
      } catch {
        n5.push(A3 + "=" + JSON.stringify(i4[A3].toString()));
      }
    }), n5.push(`code=${r3}`), n5.push(`version=${this.version}`);
    const o4 = t;
    let h5 = "";
    switch (r3) {
      case re.NUMERIC_FAULT: {
        h5 = "NUMERIC_FAULT";
        const A3 = t;
        switch (A3) {
          case "overflow":
          case "underflow":
          case "division-by-zero":
            h5 += "-" + A3;
            break;
          case "negative-power":
          case "negative-width":
            h5 += "-unsupported";
            break;
          case "unbound-bitwise-result":
            h5 += "-unbound-result";
            break;
        }
        break;
      }
      case re.CALL_EXCEPTION:
      case re.INSUFFICIENT_FUNDS:
      case re.MISSING_NEW:
      case re.NONCE_EXPIRED:
      case re.REPLACEMENT_UNDERPRICED:
      case re.TRANSACTION_REPLACED:
      case re.UNPREDICTABLE_GAS_LIMIT:
        h5 = r3;
        break;
    }
    h5 && (t += " [ See: https://links.ethers.org/v5-errors-" + h5 + " ]"), n5.length && (t += " (" + n5.join(", ") + ")");
    const p3 = new Error(t);
    return p3.reason = o4, p3.code = r3, Object.keys(i4).forEach(function(A3) {
      p3[A3] = i4[A3];
    }), p3;
  }
  throwError(t, r3, i4) {
    throw this.makeError(t, r3, i4);
  }
  throwArgumentError(t, r3, i4) {
    return this.throwError(t, _L.errors.INVALID_ARGUMENT, { argument: r3, value: i4 });
  }
  assert(t, r3, i4, n5) {
    t || this.throwError(r3, i4, n5);
  }
  assertArgument(t, r3, i4, n5) {
    t || this.throwArgumentError(r3, i4, n5);
  }
  checkNormalize(t) {
    kn && this.throwError("platform missing String.prototype.normalize", _L.errors.UNSUPPORTED_OPERATION, { operation: "String.prototype.normalize", form: kn });
  }
  checkSafeUint53(t, r3) {
    typeof t == "number" && (r3 == null && (r3 = "value not safe"), (t < 0 || t >= 9007199254740991) && this.throwError(r3, _L.errors.NUMERIC_FAULT, { operation: "checkSafeInteger", fault: "out-of-safe-range", value: t }), t % 1 && this.throwError(r3, _L.errors.NUMERIC_FAULT, { operation: "checkSafeInteger", fault: "non-integer", value: t }));
  }
  checkArgumentCount(t, r3, i4) {
    i4 ? i4 = ": " + i4 : i4 = "", t < r3 && this.throwError("missing argument" + i4, _L.errors.MISSING_ARGUMENT, { count: t, expectedCount: r3 }), t > r3 && this.throwError("too many arguments" + i4, _L.errors.UNEXPECTED_ARGUMENT, { count: t, expectedCount: r3 });
  }
  checkNew(t, r3) {
    (t === Object || t == null) && this.throwError("missing new", _L.errors.MISSING_NEW, { name: r3.name });
  }
  checkAbstract(t, r3) {
    t === r3 ? this.throwError("cannot instantiate abstract class " + JSON.stringify(r3.name) + " directly; use a sub-class", _L.errors.UNSUPPORTED_OPERATION, { name: t.name, operation: "new" }) : (t === Object || t == null) && this.throwError("missing new", _L.errors.MISSING_NEW, { name: r3.name });
  }
  static globalLogger() {
    return gi || (gi = new _L(Ns)), gi;
  }
  static setCensorship(t, r3) {
    if (!t && r3 && this.globalLogger().throwError("cannot permanently disable censorship", _L.errors.UNSUPPORTED_OPERATION, { operation: "setCensorship" }), Fn) {
      if (!t) return;
      this.globalLogger().throwError("error censorship permanent", _L.errors.UNSUPPORTED_OPERATION, { operation: "setCensorship" });
    }
    Tn = !!t, Fn = !!r3;
  }
  static setLogLevel(t) {
    const r3 = Cr[t.toLowerCase()];
    if (r3 == null) {
      _L.globalLogger().warn("invalid log level - " + t);
      return;
    }
    Un = r3;
  }
  static from(t) {
    return new _L(t);
  }
};
L2.errors = re, L2.levels = Ai;
var _s = "bytes/5.7.0";
var Dt = new L2(_s);
function Kn(e2) {
  return !!e2.toHexString;
}
function rr(e2) {
  return e2.slice || (e2.slice = function() {
    const t = Array.prototype.slice.call(arguments);
    return rr(new Uint8Array(Array.prototype.slice.apply(e2, t)));
  }), e2;
}
function Bs(e2) {
  return Qt(e2) && !(e2.length % 2) || ir(e2);
}
function Hn(e2) {
  return typeof e2 == "number" && e2 == e2 && e2 % 1 === 0;
}
function ir(e2) {
  if (e2 == null) return false;
  if (e2.constructor === Uint8Array) return true;
  if (typeof e2 == "string" || !Hn(e2.length) || e2.length < 0) return false;
  for (let t = 0; t < e2.length; t++) {
    const r3 = e2[t];
    if (!Hn(r3) || r3 < 0 || r3 >= 256) return false;
  }
  return true;
}
function Ot(e2, t) {
  if (t || (t = {}), typeof e2 == "number") {
    Dt.checkSafeUint53(e2, "invalid arrayify value");
    const r3 = [];
    for (; e2; ) r3.unshift(e2 & 255), e2 = parseInt(String(e2 / 256));
    return r3.length === 0 && r3.push(0), rr(new Uint8Array(r3));
  }
  if (t.allowMissingPrefix && typeof e2 == "string" && e2.substring(0, 2) !== "0x" && (e2 = "0x" + e2), Kn(e2) && (e2 = e2.toHexString()), Qt(e2)) {
    let r3 = e2.substring(2);
    r3.length % 2 && (t.hexPad === "left" ? r3 = "0" + r3 : t.hexPad === "right" ? r3 += "0" : Dt.throwArgumentError("hex data is odd-length", "value", e2));
    const i4 = [];
    for (let n5 = 0; n5 < r3.length; n5 += 2) i4.push(parseInt(r3.substring(n5, n5 + 2), 16));
    return rr(new Uint8Array(i4));
  }
  return ir(e2) ? rr(new Uint8Array(e2)) : Dt.throwArgumentError("invalid arrayify value", "value", e2);
}
function Cs(e2) {
  const t = e2.map((n5) => Ot(n5)), r3 = t.reduce((n5, o4) => n5 + o4.length, 0), i4 = new Uint8Array(r3);
  return t.reduce((n5, o4) => (i4.set(o4, n5), n5 + o4.length), 0), rr(i4);
}
function Rs(e2, t) {
  e2 = Ot(e2), e2.length > t && Dt.throwArgumentError("value out of range", "value", arguments[0]);
  const r3 = new Uint8Array(t);
  return r3.set(e2, t - e2.length), rr(r3);
}
function Qt(e2, t) {
  return !(typeof e2 != "string" || !e2.match(/^0x[0-9A-Fa-f]*$/) || t && e2.length !== 2 + 2 * t);
}
var bi = "0123456789abcdef";
function Kt(e2, t) {
  if (t || (t = {}), typeof e2 == "number") {
    Dt.checkSafeUint53(e2, "invalid hexlify value");
    let r3 = "";
    for (; e2; ) r3 = bi[e2 & 15] + r3, e2 = Math.floor(e2 / 16);
    return r3.length ? (r3.length % 2 && (r3 = "0" + r3), "0x" + r3) : "0x00";
  }
  if (typeof e2 == "bigint") return e2 = e2.toString(16), e2.length % 2 ? "0x0" + e2 : "0x" + e2;
  if (t.allowMissingPrefix && typeof e2 == "string" && e2.substring(0, 2) !== "0x" && (e2 = "0x" + e2), Kn(e2)) return e2.toHexString();
  if (Qt(e2)) return e2.length % 2 && (t.hexPad === "left" ? e2 = "0x0" + e2.substring(2) : t.hexPad === "right" ? e2 += "0" : Dt.throwArgumentError("hex data is odd-length", "value", e2)), e2.toLowerCase();
  if (ir(e2)) {
    let r3 = "0x";
    for (let i4 = 0; i4 < e2.length; i4++) {
      let n5 = e2[i4];
      r3 += bi[(n5 & 240) >> 4] + bi[n5 & 15];
    }
    return r3;
  }
  return Dt.throwArgumentError("invalid hexlify value", "value", e2);
}
function Os(e2) {
  if (typeof e2 != "string") e2 = Kt(e2);
  else if (!Qt(e2) || e2.length % 2) return null;
  return (e2.length - 2) / 2;
}
function zn(e2, t, r3) {
  return typeof e2 != "string" ? e2 = Kt(e2) : (!Qt(e2) || e2.length % 2) && Dt.throwArgumentError("invalid hexData", "value", e2), t = 2 + 2 * t, r3 != null ? "0x" + e2.substring(t, 2 + 2 * r3) : "0x" + e2.substring(t);
}
function oe(e2, t) {
  for (typeof e2 != "string" ? e2 = Kt(e2) : Qt(e2) || Dt.throwArgumentError("invalid hex string", "value", e2), e2.length > 2 * t + 2 && Dt.throwArgumentError("value out of range", "value", arguments[1]); e2.length < 2 * t + 2; ) e2 = "0x0" + e2.substring(2);
  return e2;
}
function Ln(e2) {
  const t = { r: "0x", s: "0x", _vs: "0x", recoveryParam: 0, v: 0, yParityAndS: "0x", compact: "0x" };
  if (Bs(e2)) {
    let r3 = Ot(e2);
    r3.length === 64 ? (t.v = 27 + (r3[32] >> 7), r3[32] &= 127, t.r = Kt(r3.slice(0, 32)), t.s = Kt(r3.slice(32, 64))) : r3.length === 65 ? (t.r = Kt(r3.slice(0, 32)), t.s = Kt(r3.slice(32, 64)), t.v = r3[64]) : Dt.throwArgumentError("invalid signature string", "signature", e2), t.v < 27 && (t.v === 0 || t.v === 1 ? t.v += 27 : Dt.throwArgumentError("signature invalid v byte", "signature", e2)), t.recoveryParam = 1 - t.v % 2, t.recoveryParam && (r3[32] |= 128), t._vs = Kt(r3.slice(32, 64));
  } else {
    if (t.r = e2.r, t.s = e2.s, t.v = e2.v, t.recoveryParam = e2.recoveryParam, t._vs = e2._vs, t._vs != null) {
      const n5 = Rs(Ot(t._vs), 32);
      t._vs = Kt(n5);
      const o4 = n5[0] >= 128 ? 1 : 0;
      t.recoveryParam == null ? t.recoveryParam = o4 : t.recoveryParam !== o4 && Dt.throwArgumentError("signature recoveryParam mismatch _vs", "signature", e2), n5[0] &= 127;
      const h5 = Kt(n5);
      t.s == null ? t.s = h5 : t.s !== h5 && Dt.throwArgumentError("signature v mismatch _vs", "signature", e2);
    }
    if (t.recoveryParam == null) t.v == null ? Dt.throwArgumentError("signature missing v and recoveryParam", "signature", e2) : t.v === 0 || t.v === 1 ? t.recoveryParam = t.v : t.recoveryParam = 1 - t.v % 2;
    else if (t.v == null) t.v = 27 + t.recoveryParam;
    else {
      const n5 = t.v === 0 || t.v === 1 ? t.v : 1 - t.v % 2;
      t.recoveryParam !== n5 && Dt.throwArgumentError("signature recoveryParam mismatch v", "signature", e2);
    }
    t.r == null || !Qt(t.r) ? Dt.throwArgumentError("signature missing or invalid r", "signature", e2) : t.r = oe(t.r, 32), t.s == null || !Qt(t.s) ? Dt.throwArgumentError("signature missing or invalid s", "signature", e2) : t.s = oe(t.s, 32);
    const r3 = Ot(t.s);
    r3[0] >= 128 && Dt.throwArgumentError("signature s out of range", "signature", e2), t.recoveryParam && (r3[0] |= 128);
    const i4 = Kt(r3);
    t._vs && (Qt(t._vs) || Dt.throwArgumentError("signature invalid _vs", "signature", e2), t._vs = oe(t._vs, 32)), t._vs == null ? t._vs = i4 : t._vs !== i4 && Dt.throwArgumentError("signature _vs mismatch v and s", "signature", e2);
  }
  return t.yParityAndS = t._vs, t.compact = t.r + t.yParityAndS.substring(2), t;
}
function yi(e2) {
  return "0x" + Ss.keccak_256(Ot(e2));
}
var jn = { exports: {} };
var Ps = {};
var Ds = Object.freeze({ __proto__: null, default: Ps });
var Fs = Es(Ds);
(function(e2) {
  (function(t, r3) {
    function i4(b3, f4) {
      if (!b3) throw new Error(f4 || "Assertion failed");
    }
    function n5(b3, f4) {
      b3.super_ = f4;
      var a4 = function() {
      };
      a4.prototype = f4.prototype, b3.prototype = new a4(), b3.prototype.constructor = b3;
    }
    function o4(b3, f4, a4) {
      if (o4.isBN(b3)) return b3;
      this.negative = 0, this.words = null, this.length = 0, this.red = null, b3 !== null && ((f4 === "le" || f4 === "be") && (a4 = f4, f4 = 10), this._init(b3 || 0, f4 || 10, a4 || "be"));
    }
    typeof t == "object" ? t.exports = o4 : r3.BN = o4, o4.BN = o4, o4.wordSize = 26;
    var h5;
    try {
      typeof window < "u" && typeof window.Buffer < "u" ? h5 = window.Buffer : h5 = Fs.Buffer;
    } catch {
    }
    o4.isBN = function(f4) {
      return f4 instanceof o4 ? true : f4 !== null && typeof f4 == "object" && f4.constructor.wordSize === o4.wordSize && Array.isArray(f4.words);
    }, o4.max = function(f4, a4) {
      return f4.cmp(a4) > 0 ? f4 : a4;
    }, o4.min = function(f4, a4) {
      return f4.cmp(a4) < 0 ? f4 : a4;
    }, o4.prototype._init = function(f4, a4, c5) {
      if (typeof f4 == "number") return this._initNumber(f4, a4, c5);
      if (typeof f4 == "object") return this._initArray(f4, a4, c5);
      a4 === "hex" && (a4 = 16), i4(a4 === (a4 | 0) && a4 >= 2 && a4 <= 36), f4 = f4.toString().replace(/\s+/g, "");
      var d3 = 0;
      f4[0] === "-" && (d3++, this.negative = 1), d3 < f4.length && (a4 === 16 ? this._parseHex(f4, d3, c5) : (this._parseBase(f4, a4, d3), c5 === "le" && this._initArray(this.toArray(), a4, c5)));
    }, o4.prototype._initNumber = function(f4, a4, c5) {
      f4 < 0 && (this.negative = 1, f4 = -f4), f4 < 67108864 ? (this.words = [f4 & 67108863], this.length = 1) : f4 < 4503599627370496 ? (this.words = [f4 & 67108863, f4 / 67108864 & 67108863], this.length = 2) : (i4(f4 < 9007199254740992), this.words = [f4 & 67108863, f4 / 67108864 & 67108863, 1], this.length = 3), c5 === "le" && this._initArray(this.toArray(), a4, c5);
    }, o4.prototype._initArray = function(f4, a4, c5) {
      if (i4(typeof f4.length == "number"), f4.length <= 0) return this.words = [0], this.length = 1, this;
      this.length = Math.ceil(f4.length / 3), this.words = new Array(this.length);
      for (var d3 = 0; d3 < this.length; d3++) this.words[d3] = 0;
      var g3, x5, M4 = 0;
      if (c5 === "be") for (d3 = f4.length - 1, g3 = 0; d3 >= 0; d3 -= 3) x5 = f4[d3] | f4[d3 - 1] << 8 | f4[d3 - 2] << 16, this.words[g3] |= x5 << M4 & 67108863, this.words[g3 + 1] = x5 >>> 26 - M4 & 67108863, M4 += 24, M4 >= 26 && (M4 -= 26, g3++);
      else if (c5 === "le") for (d3 = 0, g3 = 0; d3 < f4.length; d3 += 3) x5 = f4[d3] | f4[d3 + 1] << 8 | f4[d3 + 2] << 16, this.words[g3] |= x5 << M4 & 67108863, this.words[g3 + 1] = x5 >>> 26 - M4 & 67108863, M4 += 24, M4 >= 26 && (M4 -= 26, g3++);
      return this._strip();
    };
    function p3(b3, f4) {
      var a4 = b3.charCodeAt(f4);
      if (a4 >= 48 && a4 <= 57) return a4 - 48;
      if (a4 >= 65 && a4 <= 70) return a4 - 55;
      if (a4 >= 97 && a4 <= 102) return a4 - 87;
      i4(false, "Invalid character in " + b3);
    }
    function A3(b3, f4, a4) {
      var c5 = p3(b3, a4);
      return a4 - 1 >= f4 && (c5 |= p3(b3, a4 - 1) << 4), c5;
    }
    o4.prototype._parseHex = function(f4, a4, c5) {
      this.length = Math.ceil((f4.length - a4) / 6), this.words = new Array(this.length);
      for (var d3 = 0; d3 < this.length; d3++) this.words[d3] = 0;
      var g3 = 0, x5 = 0, M4;
      if (c5 === "be") for (d3 = f4.length - 1; d3 >= a4; d3 -= 2) M4 = A3(f4, a4, d3) << g3, this.words[x5] |= M4 & 67108863, g3 >= 18 ? (g3 -= 18, x5 += 1, this.words[x5] |= M4 >>> 26) : g3 += 8;
      else {
        var l4 = f4.length - a4;
        for (d3 = l4 % 2 === 0 ? a4 + 1 : a4; d3 < f4.length; d3 += 2) M4 = A3(f4, a4, d3) << g3, this.words[x5] |= M4 & 67108863, g3 >= 18 ? (g3 -= 18, x5 += 1, this.words[x5] |= M4 >>> 26) : g3 += 8;
      }
      this._strip();
    };
    function m2(b3, f4, a4, c5) {
      for (var d3 = 0, g3 = 0, x5 = Math.min(b3.length, a4), M4 = f4; M4 < x5; M4++) {
        var l4 = b3.charCodeAt(M4) - 48;
        d3 *= c5, l4 >= 49 ? g3 = l4 - 49 + 10 : l4 >= 17 ? g3 = l4 - 17 + 10 : g3 = l4, i4(l4 >= 0 && g3 < c5, "Invalid character"), d3 += g3;
      }
      return d3;
    }
    o4.prototype._parseBase = function(f4, a4, c5) {
      this.words = [0], this.length = 1;
      for (var d3 = 0, g3 = 1; g3 <= 67108863; g3 *= a4) d3++;
      d3--, g3 = g3 / a4 | 0;
      for (var x5 = f4.length - c5, M4 = x5 % d3, l4 = Math.min(x5, x5 - M4) + c5, s3 = 0, v3 = c5; v3 < l4; v3 += d3) s3 = m2(f4, v3, v3 + d3, a4), this.imuln(g3), this.words[0] + s3 < 67108864 ? this.words[0] += s3 : this._iaddn(s3);
      if (M4 !== 0) {
        var k4 = 1;
        for (s3 = m2(f4, v3, f4.length, a4), v3 = 0; v3 < M4; v3++) k4 *= a4;
        this.imuln(k4), this.words[0] + s3 < 67108864 ? this.words[0] += s3 : this._iaddn(s3);
      }
      this._strip();
    }, o4.prototype.copy = function(f4) {
      f4.words = new Array(this.length);
      for (var a4 = 0; a4 < this.length; a4++) f4.words[a4] = this.words[a4];
      f4.length = this.length, f4.negative = this.negative, f4.red = this.red;
    };
    function w4(b3, f4) {
      b3.words = f4.words, b3.length = f4.length, b3.negative = f4.negative, b3.red = f4.red;
    }
    if (o4.prototype._move = function(f4) {
      w4(f4, this);
    }, o4.prototype.clone = function() {
      var f4 = new o4(null);
      return this.copy(f4), f4;
    }, o4.prototype._expand = function(f4) {
      for (; this.length < f4; ) this.words[this.length++] = 0;
      return this;
    }, o4.prototype._strip = function() {
      for (; this.length > 1 && this.words[this.length - 1] === 0; ) this.length--;
      return this._normSign();
    }, o4.prototype._normSign = function() {
      return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
    }, typeof Symbol < "u" && typeof Symbol.for == "function") try {
      o4.prototype[Symbol.for("nodejs.util.inspect.custom")] = y6;
    } catch {
      o4.prototype.inspect = y6;
    }
    else o4.prototype.inspect = y6;
    function y6() {
      return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
    }
    var S6 = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], I3 = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], N10 = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
    o4.prototype.toString = function(f4, a4) {
      f4 = f4 || 10, a4 = a4 | 0 || 1;
      var c5;
      if (f4 === 16 || f4 === "hex") {
        c5 = "";
        for (var d3 = 0, g3 = 0, x5 = 0; x5 < this.length; x5++) {
          var M4 = this.words[x5], l4 = ((M4 << d3 | g3) & 16777215).toString(16);
          g3 = M4 >>> 24 - d3 & 16777215, d3 += 2, d3 >= 26 && (d3 -= 26, x5--), g3 !== 0 || x5 !== this.length - 1 ? c5 = S6[6 - l4.length] + l4 + c5 : c5 = l4 + c5;
        }
        for (g3 !== 0 && (c5 = g3.toString(16) + c5); c5.length % a4 !== 0; ) c5 = "0" + c5;
        return this.negative !== 0 && (c5 = "-" + c5), c5;
      }
      if (f4 === (f4 | 0) && f4 >= 2 && f4 <= 36) {
        var s3 = I3[f4], v3 = N10[f4];
        c5 = "";
        var k4 = this.clone();
        for (k4.negative = 0; !k4.isZero(); ) {
          var u3 = k4.modrn(v3).toString(f4);
          k4 = k4.idivn(v3), k4.isZero() ? c5 = u3 + c5 : c5 = S6[s3 - u3.length] + u3 + c5;
        }
        for (this.isZero() && (c5 = "0" + c5); c5.length % a4 !== 0; ) c5 = "0" + c5;
        return this.negative !== 0 && (c5 = "-" + c5), c5;
      }
      i4(false, "Base should be between 2 and 36");
    }, o4.prototype.toNumber = function() {
      var f4 = this.words[0];
      return this.length === 2 ? f4 += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? f4 += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && i4(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -f4 : f4;
    }, o4.prototype.toJSON = function() {
      return this.toString(16, 2);
    }, h5 && (o4.prototype.toBuffer = function(f4, a4) {
      return this.toArrayLike(h5, f4, a4);
    }), o4.prototype.toArray = function(f4, a4) {
      return this.toArrayLike(Array, f4, a4);
    };
    var C4 = function(f4, a4) {
      return f4.allocUnsafe ? f4.allocUnsafe(a4) : new f4(a4);
    };
    o4.prototype.toArrayLike = function(f4, a4, c5) {
      this._strip();
      var d3 = this.byteLength(), g3 = c5 || Math.max(1, d3);
      i4(d3 <= g3, "byte array longer than desired length"), i4(g3 > 0, "Requested array length <= 0");
      var x5 = C4(f4, g3), M4 = a4 === "le" ? "LE" : "BE";
      return this["_toArrayLike" + M4](x5, d3), x5;
    }, o4.prototype._toArrayLikeLE = function(f4, a4) {
      for (var c5 = 0, d3 = 0, g3 = 0, x5 = 0; g3 < this.length; g3++) {
        var M4 = this.words[g3] << x5 | d3;
        f4[c5++] = M4 & 255, c5 < f4.length && (f4[c5++] = M4 >> 8 & 255), c5 < f4.length && (f4[c5++] = M4 >> 16 & 255), x5 === 6 ? (c5 < f4.length && (f4[c5++] = M4 >> 24 & 255), d3 = 0, x5 = 0) : (d3 = M4 >>> 24, x5 += 2);
      }
      if (c5 < f4.length) for (f4[c5++] = d3; c5 < f4.length; ) f4[c5++] = 0;
    }, o4.prototype._toArrayLikeBE = function(f4, a4) {
      for (var c5 = f4.length - 1, d3 = 0, g3 = 0, x5 = 0; g3 < this.length; g3++) {
        var M4 = this.words[g3] << x5 | d3;
        f4[c5--] = M4 & 255, c5 >= 0 && (f4[c5--] = M4 >> 8 & 255), c5 >= 0 && (f4[c5--] = M4 >> 16 & 255), x5 === 6 ? (c5 >= 0 && (f4[c5--] = M4 >> 24 & 255), d3 = 0, x5 = 0) : (d3 = M4 >>> 24, x5 += 2);
      }
      if (c5 >= 0) for (f4[c5--] = d3; c5 >= 0; ) f4[c5--] = 0;
    }, Math.clz32 ? o4.prototype._countBits = function(f4) {
      return 32 - Math.clz32(f4);
    } : o4.prototype._countBits = function(f4) {
      var a4 = f4, c5 = 0;
      return a4 >= 4096 && (c5 += 13, a4 >>>= 13), a4 >= 64 && (c5 += 7, a4 >>>= 7), a4 >= 8 && (c5 += 4, a4 >>>= 4), a4 >= 2 && (c5 += 2, a4 >>>= 2), c5 + a4;
    }, o4.prototype._zeroBits = function(f4) {
      if (f4 === 0) return 26;
      var a4 = f4, c5 = 0;
      return a4 & 8191 || (c5 += 13, a4 >>>= 13), a4 & 127 || (c5 += 7, a4 >>>= 7), a4 & 15 || (c5 += 4, a4 >>>= 4), a4 & 3 || (c5 += 2, a4 >>>= 2), a4 & 1 || c5++, c5;
    }, o4.prototype.bitLength = function() {
      var f4 = this.words[this.length - 1], a4 = this._countBits(f4);
      return (this.length - 1) * 26 + a4;
    };
    function F2(b3) {
      for (var f4 = new Array(b3.bitLength()), a4 = 0; a4 < f4.length; a4++) {
        var c5 = a4 / 26 | 0, d3 = a4 % 26;
        f4[a4] = b3.words[c5] >>> d3 & 1;
      }
      return f4;
    }
    o4.prototype.zeroBits = function() {
      if (this.isZero()) return 0;
      for (var f4 = 0, a4 = 0; a4 < this.length; a4++) {
        var c5 = this._zeroBits(this.words[a4]);
        if (f4 += c5, c5 !== 26) break;
      }
      return f4;
    }, o4.prototype.byteLength = function() {
      return Math.ceil(this.bitLength() / 8);
    }, o4.prototype.toTwos = function(f4) {
      return this.negative !== 0 ? this.abs().inotn(f4).iaddn(1) : this.clone();
    }, o4.prototype.fromTwos = function(f4) {
      return this.testn(f4 - 1) ? this.notn(f4).iaddn(1).ineg() : this.clone();
    }, o4.prototype.isNeg = function() {
      return this.negative !== 0;
    }, o4.prototype.neg = function() {
      return this.clone().ineg();
    }, o4.prototype.ineg = function() {
      return this.isZero() || (this.negative ^= 1), this;
    }, o4.prototype.iuor = function(f4) {
      for (; this.length < f4.length; ) this.words[this.length++] = 0;
      for (var a4 = 0; a4 < f4.length; a4++) this.words[a4] = this.words[a4] | f4.words[a4];
      return this._strip();
    }, o4.prototype.ior = function(f4) {
      return i4((this.negative | f4.negative) === 0), this.iuor(f4);
    }, o4.prototype.or = function(f4) {
      return this.length > f4.length ? this.clone().ior(f4) : f4.clone().ior(this);
    }, o4.prototype.uor = function(f4) {
      return this.length > f4.length ? this.clone().iuor(f4) : f4.clone().iuor(this);
    }, o4.prototype.iuand = function(f4) {
      var a4;
      this.length > f4.length ? a4 = f4 : a4 = this;
      for (var c5 = 0; c5 < a4.length; c5++) this.words[c5] = this.words[c5] & f4.words[c5];
      return this.length = a4.length, this._strip();
    }, o4.prototype.iand = function(f4) {
      return i4((this.negative | f4.negative) === 0), this.iuand(f4);
    }, o4.prototype.and = function(f4) {
      return this.length > f4.length ? this.clone().iand(f4) : f4.clone().iand(this);
    }, o4.prototype.uand = function(f4) {
      return this.length > f4.length ? this.clone().iuand(f4) : f4.clone().iuand(this);
    }, o4.prototype.iuxor = function(f4) {
      var a4, c5;
      this.length > f4.length ? (a4 = this, c5 = f4) : (a4 = f4, c5 = this);
      for (var d3 = 0; d3 < c5.length; d3++) this.words[d3] = a4.words[d3] ^ c5.words[d3];
      if (this !== a4) for (; d3 < a4.length; d3++) this.words[d3] = a4.words[d3];
      return this.length = a4.length, this._strip();
    }, o4.prototype.ixor = function(f4) {
      return i4((this.negative | f4.negative) === 0), this.iuxor(f4);
    }, o4.prototype.xor = function(f4) {
      return this.length > f4.length ? this.clone().ixor(f4) : f4.clone().ixor(this);
    }, o4.prototype.uxor = function(f4) {
      return this.length > f4.length ? this.clone().iuxor(f4) : f4.clone().iuxor(this);
    }, o4.prototype.inotn = function(f4) {
      i4(typeof f4 == "number" && f4 >= 0);
      var a4 = Math.ceil(f4 / 26) | 0, c5 = f4 % 26;
      this._expand(a4), c5 > 0 && a4--;
      for (var d3 = 0; d3 < a4; d3++) this.words[d3] = ~this.words[d3] & 67108863;
      return c5 > 0 && (this.words[d3] = ~this.words[d3] & 67108863 >> 26 - c5), this._strip();
    }, o4.prototype.notn = function(f4) {
      return this.clone().inotn(f4);
    }, o4.prototype.setn = function(f4, a4) {
      i4(typeof f4 == "number" && f4 >= 0);
      var c5 = f4 / 26 | 0, d3 = f4 % 26;
      return this._expand(c5 + 1), a4 ? this.words[c5] = this.words[c5] | 1 << d3 : this.words[c5] = this.words[c5] & ~(1 << d3), this._strip();
    }, o4.prototype.iadd = function(f4) {
      var a4;
      if (this.negative !== 0 && f4.negative === 0) return this.negative = 0, a4 = this.isub(f4), this.negative ^= 1, this._normSign();
      if (this.negative === 0 && f4.negative !== 0) return f4.negative = 0, a4 = this.isub(f4), f4.negative = 1, a4._normSign();
      var c5, d3;
      this.length > f4.length ? (c5 = this, d3 = f4) : (c5 = f4, d3 = this);
      for (var g3 = 0, x5 = 0; x5 < d3.length; x5++) a4 = (c5.words[x5] | 0) + (d3.words[x5] | 0) + g3, this.words[x5] = a4 & 67108863, g3 = a4 >>> 26;
      for (; g3 !== 0 && x5 < c5.length; x5++) a4 = (c5.words[x5] | 0) + g3, this.words[x5] = a4 & 67108863, g3 = a4 >>> 26;
      if (this.length = c5.length, g3 !== 0) this.words[this.length] = g3, this.length++;
      else if (c5 !== this) for (; x5 < c5.length; x5++) this.words[x5] = c5.words[x5];
      return this;
    }, o4.prototype.add = function(f4) {
      var a4;
      return f4.negative !== 0 && this.negative === 0 ? (f4.negative = 0, a4 = this.sub(f4), f4.negative ^= 1, a4) : f4.negative === 0 && this.negative !== 0 ? (this.negative = 0, a4 = f4.sub(this), this.negative = 1, a4) : this.length > f4.length ? this.clone().iadd(f4) : f4.clone().iadd(this);
    }, o4.prototype.isub = function(f4) {
      if (f4.negative !== 0) {
        f4.negative = 0;
        var a4 = this.iadd(f4);
        return f4.negative = 1, a4._normSign();
      } else if (this.negative !== 0) return this.negative = 0, this.iadd(f4), this.negative = 1, this._normSign();
      var c5 = this.cmp(f4);
      if (c5 === 0) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
      var d3, g3;
      c5 > 0 ? (d3 = this, g3 = f4) : (d3 = f4, g3 = this);
      for (var x5 = 0, M4 = 0; M4 < g3.length; M4++) a4 = (d3.words[M4] | 0) - (g3.words[M4] | 0) + x5, x5 = a4 >> 26, this.words[M4] = a4 & 67108863;
      for (; x5 !== 0 && M4 < d3.length; M4++) a4 = (d3.words[M4] | 0) + x5, x5 = a4 >> 26, this.words[M4] = a4 & 67108863;
      if (x5 === 0 && M4 < d3.length && d3 !== this) for (; M4 < d3.length; M4++) this.words[M4] = d3.words[M4];
      return this.length = Math.max(this.length, M4), d3 !== this && (this.negative = 1), this._strip();
    }, o4.prototype.sub = function(f4) {
      return this.clone().isub(f4);
    };
    function U2(b3, f4, a4) {
      a4.negative = f4.negative ^ b3.negative;
      var c5 = b3.length + f4.length | 0;
      a4.length = c5, c5 = c5 - 1 | 0;
      var d3 = b3.words[0] | 0, g3 = f4.words[0] | 0, x5 = d3 * g3, M4 = x5 & 67108863, l4 = x5 / 67108864 | 0;
      a4.words[0] = M4;
      for (var s3 = 1; s3 < c5; s3++) {
        for (var v3 = l4 >>> 26, k4 = l4 & 67108863, u3 = Math.min(s3, f4.length - 1), E4 = Math.max(0, s3 - b3.length + 1); E4 <= u3; E4++) {
          var _3 = s3 - E4 | 0;
          d3 = b3.words[_3] | 0, g3 = f4.words[E4] | 0, x5 = d3 * g3 + k4, v3 += x5 / 67108864 | 0, k4 = x5 & 67108863;
        }
        a4.words[s3] = k4 | 0, l4 = v3 | 0;
      }
      return l4 !== 0 ? a4.words[s3] = l4 | 0 : a4.length--, a4._strip();
    }
    var J2 = function(f4, a4, c5) {
      var d3 = f4.words, g3 = a4.words, x5 = c5.words, M4 = 0, l4, s3, v3, k4 = d3[0] | 0, u3 = k4 & 8191, E4 = k4 >>> 13, _3 = d3[1] | 0, B3 = _3 & 8191, R2 = _3 >>> 13, T2 = d3[2] | 0, P3 = T2 & 8191, O4 = T2 >>> 13, Ct2 = d3[3] | 0, D2 = Ct2 & 8191, q = Ct2 >>> 13, De2 = d3[4] | 0, X2 = De2 & 8191, Z2 = De2 >>> 13, Fe2 = d3[5] | 0, $ = Fe2 & 8191, tt3 = Fe2 >>> 13, Te = d3[6] | 0, et3 = Te & 8191, rt2 = Te >>> 13, Ue = d3[7] | 0, it3 = Ue & 8191, nt2 = Ue >>> 13, ke2 = d3[8] | 0, ft2 = ke2 & 8191, ot2 = ke2 >>> 13, qe3 = d3[9] | 0, st3 = qe3 & 8191, at2 = qe3 >>> 13, Ke = g3[0] | 0, ut2 = Ke & 8191, ht2 = Ke >>> 13, He3 = g3[1] | 0, ct2 = He3 & 8191, lt2 = He3 >>> 13, ze3 = g3[2] | 0, dt2 = ze3 & 8191, pt2 = ze3 >>> 13, Le2 = g3[3] | 0, vt2 = Le2 & 8191, mt2 = Le2 >>> 13, je3 = g3[4] | 0, gt2 = je3 & 8191, At2 = je3 >>> 13, Qe3 = g3[5] | 0, bt2 = Qe3 & 8191, yt2 = Qe3 >>> 13, Je3 = g3[6] | 0, wt2 = Je3 & 8191, xt2 = Je3 >>> 13, Ge3 = g3[7] | 0, Mt2 = Ge3 & 8191, Et2 = Ge3 >>> 13, Ye3 = g3[8] | 0, St2 = Ye3 & 8191, Nt2 = Ye3 >>> 13, Ve2 = g3[9] | 0, It2 = Ve2 & 8191, _t2 = Ve2 >>> 13;
      c5.negative = f4.negative ^ a4.negative, c5.length = 19, l4 = Math.imul(u3, ut2), s3 = Math.imul(u3, ht2), s3 = s3 + Math.imul(E4, ut2) | 0, v3 = Math.imul(E4, ht2);
      var Me = (M4 + l4 | 0) + ((s3 & 8191) << 13) | 0;
      M4 = (v3 + (s3 >>> 13) | 0) + (Me >>> 26) | 0, Me &= 67108863, l4 = Math.imul(B3, ut2), s3 = Math.imul(B3, ht2), s3 = s3 + Math.imul(R2, ut2) | 0, v3 = Math.imul(R2, ht2), l4 = l4 + Math.imul(u3, ct2) | 0, s3 = s3 + Math.imul(u3, lt2) | 0, s3 = s3 + Math.imul(E4, ct2) | 0, v3 = v3 + Math.imul(E4, lt2) | 0;
      var Ee2 = (M4 + l4 | 0) + ((s3 & 8191) << 13) | 0;
      M4 = (v3 + (s3 >>> 13) | 0) + (Ee2 >>> 26) | 0, Ee2 &= 67108863, l4 = Math.imul(P3, ut2), s3 = Math.imul(P3, ht2), s3 = s3 + Math.imul(O4, ut2) | 0, v3 = Math.imul(O4, ht2), l4 = l4 + Math.imul(B3, ct2) | 0, s3 = s3 + Math.imul(B3, lt2) | 0, s3 = s3 + Math.imul(R2, ct2) | 0, v3 = v3 + Math.imul(R2, lt2) | 0, l4 = l4 + Math.imul(u3, dt2) | 0, s3 = s3 + Math.imul(u3, pt2) | 0, s3 = s3 + Math.imul(E4, dt2) | 0, v3 = v3 + Math.imul(E4, pt2) | 0;
      var Se = (M4 + l4 | 0) + ((s3 & 8191) << 13) | 0;
      M4 = (v3 + (s3 >>> 13) | 0) + (Se >>> 26) | 0, Se &= 67108863, l4 = Math.imul(D2, ut2), s3 = Math.imul(D2, ht2), s3 = s3 + Math.imul(q, ut2) | 0, v3 = Math.imul(q, ht2), l4 = l4 + Math.imul(P3, ct2) | 0, s3 = s3 + Math.imul(P3, lt2) | 0, s3 = s3 + Math.imul(O4, ct2) | 0, v3 = v3 + Math.imul(O4, lt2) | 0, l4 = l4 + Math.imul(B3, dt2) | 0, s3 = s3 + Math.imul(B3, pt2) | 0, s3 = s3 + Math.imul(R2, dt2) | 0, v3 = v3 + Math.imul(R2, pt2) | 0, l4 = l4 + Math.imul(u3, vt2) | 0, s3 = s3 + Math.imul(u3, mt2) | 0, s3 = s3 + Math.imul(E4, vt2) | 0, v3 = v3 + Math.imul(E4, mt2) | 0;
      var Ne2 = (M4 + l4 | 0) + ((s3 & 8191) << 13) | 0;
      M4 = (v3 + (s3 >>> 13) | 0) + (Ne2 >>> 26) | 0, Ne2 &= 67108863, l4 = Math.imul(X2, ut2), s3 = Math.imul(X2, ht2), s3 = s3 + Math.imul(Z2, ut2) | 0, v3 = Math.imul(Z2, ht2), l4 = l4 + Math.imul(D2, ct2) | 0, s3 = s3 + Math.imul(D2, lt2) | 0, s3 = s3 + Math.imul(q, ct2) | 0, v3 = v3 + Math.imul(q, lt2) | 0, l4 = l4 + Math.imul(P3, dt2) | 0, s3 = s3 + Math.imul(P3, pt2) | 0, s3 = s3 + Math.imul(O4, dt2) | 0, v3 = v3 + Math.imul(O4, pt2) | 0, l4 = l4 + Math.imul(B3, vt2) | 0, s3 = s3 + Math.imul(B3, mt2) | 0, s3 = s3 + Math.imul(R2, vt2) | 0, v3 = v3 + Math.imul(R2, mt2) | 0, l4 = l4 + Math.imul(u3, gt2) | 0, s3 = s3 + Math.imul(u3, At2) | 0, s3 = s3 + Math.imul(E4, gt2) | 0, v3 = v3 + Math.imul(E4, At2) | 0;
      var Ie2 = (M4 + l4 | 0) + ((s3 & 8191) << 13) | 0;
      M4 = (v3 + (s3 >>> 13) | 0) + (Ie2 >>> 26) | 0, Ie2 &= 67108863, l4 = Math.imul($, ut2), s3 = Math.imul($, ht2), s3 = s3 + Math.imul(tt3, ut2) | 0, v3 = Math.imul(tt3, ht2), l4 = l4 + Math.imul(X2, ct2) | 0, s3 = s3 + Math.imul(X2, lt2) | 0, s3 = s3 + Math.imul(Z2, ct2) | 0, v3 = v3 + Math.imul(Z2, lt2) | 0, l4 = l4 + Math.imul(D2, dt2) | 0, s3 = s3 + Math.imul(D2, pt2) | 0, s3 = s3 + Math.imul(q, dt2) | 0, v3 = v3 + Math.imul(q, pt2) | 0, l4 = l4 + Math.imul(P3, vt2) | 0, s3 = s3 + Math.imul(P3, mt2) | 0, s3 = s3 + Math.imul(O4, vt2) | 0, v3 = v3 + Math.imul(O4, mt2) | 0, l4 = l4 + Math.imul(B3, gt2) | 0, s3 = s3 + Math.imul(B3, At2) | 0, s3 = s3 + Math.imul(R2, gt2) | 0, v3 = v3 + Math.imul(R2, At2) | 0, l4 = l4 + Math.imul(u3, bt2) | 0, s3 = s3 + Math.imul(u3, yt2) | 0, s3 = s3 + Math.imul(E4, bt2) | 0, v3 = v3 + Math.imul(E4, yt2) | 0;
      var Wr2 = (M4 + l4 | 0) + ((s3 & 8191) << 13) | 0;
      M4 = (v3 + (s3 >>> 13) | 0) + (Wr2 >>> 26) | 0, Wr2 &= 67108863, l4 = Math.imul(et3, ut2), s3 = Math.imul(et3, ht2), s3 = s3 + Math.imul(rt2, ut2) | 0, v3 = Math.imul(rt2, ht2), l4 = l4 + Math.imul($, ct2) | 0, s3 = s3 + Math.imul($, lt2) | 0, s3 = s3 + Math.imul(tt3, ct2) | 0, v3 = v3 + Math.imul(tt3, lt2) | 0, l4 = l4 + Math.imul(X2, dt2) | 0, s3 = s3 + Math.imul(X2, pt2) | 0, s3 = s3 + Math.imul(Z2, dt2) | 0, v3 = v3 + Math.imul(Z2, pt2) | 0, l4 = l4 + Math.imul(D2, vt2) | 0, s3 = s3 + Math.imul(D2, mt2) | 0, s3 = s3 + Math.imul(q, vt2) | 0, v3 = v3 + Math.imul(q, mt2) | 0, l4 = l4 + Math.imul(P3, gt2) | 0, s3 = s3 + Math.imul(P3, At2) | 0, s3 = s3 + Math.imul(O4, gt2) | 0, v3 = v3 + Math.imul(O4, At2) | 0, l4 = l4 + Math.imul(B3, bt2) | 0, s3 = s3 + Math.imul(B3, yt2) | 0, s3 = s3 + Math.imul(R2, bt2) | 0, v3 = v3 + Math.imul(R2, yt2) | 0, l4 = l4 + Math.imul(u3, wt2) | 0, s3 = s3 + Math.imul(u3, xt2) | 0, s3 = s3 + Math.imul(E4, wt2) | 0, v3 = v3 + Math.imul(E4, xt2) | 0;
      var Xr2 = (M4 + l4 | 0) + ((s3 & 8191) << 13) | 0;
      M4 = (v3 + (s3 >>> 13) | 0) + (Xr2 >>> 26) | 0, Xr2 &= 67108863, l4 = Math.imul(it3, ut2), s3 = Math.imul(it3, ht2), s3 = s3 + Math.imul(nt2, ut2) | 0, v3 = Math.imul(nt2, ht2), l4 = l4 + Math.imul(et3, ct2) | 0, s3 = s3 + Math.imul(et3, lt2) | 0, s3 = s3 + Math.imul(rt2, ct2) | 0, v3 = v3 + Math.imul(rt2, lt2) | 0, l4 = l4 + Math.imul($, dt2) | 0, s3 = s3 + Math.imul($, pt2) | 0, s3 = s3 + Math.imul(tt3, dt2) | 0, v3 = v3 + Math.imul(tt3, pt2) | 0, l4 = l4 + Math.imul(X2, vt2) | 0, s3 = s3 + Math.imul(X2, mt2) | 0, s3 = s3 + Math.imul(Z2, vt2) | 0, v3 = v3 + Math.imul(Z2, mt2) | 0, l4 = l4 + Math.imul(D2, gt2) | 0, s3 = s3 + Math.imul(D2, At2) | 0, s3 = s3 + Math.imul(q, gt2) | 0, v3 = v3 + Math.imul(q, At2) | 0, l4 = l4 + Math.imul(P3, bt2) | 0, s3 = s3 + Math.imul(P3, yt2) | 0, s3 = s3 + Math.imul(O4, bt2) | 0, v3 = v3 + Math.imul(O4, yt2) | 0, l4 = l4 + Math.imul(B3, wt2) | 0, s3 = s3 + Math.imul(B3, xt2) | 0, s3 = s3 + Math.imul(R2, wt2) | 0, v3 = v3 + Math.imul(R2, xt2) | 0, l4 = l4 + Math.imul(u3, Mt2) | 0, s3 = s3 + Math.imul(u3, Et2) | 0, s3 = s3 + Math.imul(E4, Mt2) | 0, v3 = v3 + Math.imul(E4, Et2) | 0;
      var Zr2 = (M4 + l4 | 0) + ((s3 & 8191) << 13) | 0;
      M4 = (v3 + (s3 >>> 13) | 0) + (Zr2 >>> 26) | 0, Zr2 &= 67108863, l4 = Math.imul(ft2, ut2), s3 = Math.imul(ft2, ht2), s3 = s3 + Math.imul(ot2, ut2) | 0, v3 = Math.imul(ot2, ht2), l4 = l4 + Math.imul(it3, ct2) | 0, s3 = s3 + Math.imul(it3, lt2) | 0, s3 = s3 + Math.imul(nt2, ct2) | 0, v3 = v3 + Math.imul(nt2, lt2) | 0, l4 = l4 + Math.imul(et3, dt2) | 0, s3 = s3 + Math.imul(et3, pt2) | 0, s3 = s3 + Math.imul(rt2, dt2) | 0, v3 = v3 + Math.imul(rt2, pt2) | 0, l4 = l4 + Math.imul($, vt2) | 0, s3 = s3 + Math.imul($, mt2) | 0, s3 = s3 + Math.imul(tt3, vt2) | 0, v3 = v3 + Math.imul(tt3, mt2) | 0, l4 = l4 + Math.imul(X2, gt2) | 0, s3 = s3 + Math.imul(X2, At2) | 0, s3 = s3 + Math.imul(Z2, gt2) | 0, v3 = v3 + Math.imul(Z2, At2) | 0, l4 = l4 + Math.imul(D2, bt2) | 0, s3 = s3 + Math.imul(D2, yt2) | 0, s3 = s3 + Math.imul(q, bt2) | 0, v3 = v3 + Math.imul(q, yt2) | 0, l4 = l4 + Math.imul(P3, wt2) | 0, s3 = s3 + Math.imul(P3, xt2) | 0, s3 = s3 + Math.imul(O4, wt2) | 0, v3 = v3 + Math.imul(O4, xt2) | 0, l4 = l4 + Math.imul(B3, Mt2) | 0, s3 = s3 + Math.imul(B3, Et2) | 0, s3 = s3 + Math.imul(R2, Mt2) | 0, v3 = v3 + Math.imul(R2, Et2) | 0, l4 = l4 + Math.imul(u3, St2) | 0, s3 = s3 + Math.imul(u3, Nt2) | 0, s3 = s3 + Math.imul(E4, St2) | 0, v3 = v3 + Math.imul(E4, Nt2) | 0;
      var $r = (M4 + l4 | 0) + ((s3 & 8191) << 13) | 0;
      M4 = (v3 + (s3 >>> 13) | 0) + ($r >>> 26) | 0, $r &= 67108863, l4 = Math.imul(st3, ut2), s3 = Math.imul(st3, ht2), s3 = s3 + Math.imul(at2, ut2) | 0, v3 = Math.imul(at2, ht2), l4 = l4 + Math.imul(ft2, ct2) | 0, s3 = s3 + Math.imul(ft2, lt2) | 0, s3 = s3 + Math.imul(ot2, ct2) | 0, v3 = v3 + Math.imul(ot2, lt2) | 0, l4 = l4 + Math.imul(it3, dt2) | 0, s3 = s3 + Math.imul(it3, pt2) | 0, s3 = s3 + Math.imul(nt2, dt2) | 0, v3 = v3 + Math.imul(nt2, pt2) | 0, l4 = l4 + Math.imul(et3, vt2) | 0, s3 = s3 + Math.imul(et3, mt2) | 0, s3 = s3 + Math.imul(rt2, vt2) | 0, v3 = v3 + Math.imul(rt2, mt2) | 0, l4 = l4 + Math.imul($, gt2) | 0, s3 = s3 + Math.imul($, At2) | 0, s3 = s3 + Math.imul(tt3, gt2) | 0, v3 = v3 + Math.imul(tt3, At2) | 0, l4 = l4 + Math.imul(X2, bt2) | 0, s3 = s3 + Math.imul(X2, yt2) | 0, s3 = s3 + Math.imul(Z2, bt2) | 0, v3 = v3 + Math.imul(Z2, yt2) | 0, l4 = l4 + Math.imul(D2, wt2) | 0, s3 = s3 + Math.imul(D2, xt2) | 0, s3 = s3 + Math.imul(q, wt2) | 0, v3 = v3 + Math.imul(q, xt2) | 0, l4 = l4 + Math.imul(P3, Mt2) | 0, s3 = s3 + Math.imul(P3, Et2) | 0, s3 = s3 + Math.imul(O4, Mt2) | 0, v3 = v3 + Math.imul(O4, Et2) | 0, l4 = l4 + Math.imul(B3, St2) | 0, s3 = s3 + Math.imul(B3, Nt2) | 0, s3 = s3 + Math.imul(R2, St2) | 0, v3 = v3 + Math.imul(R2, Nt2) | 0, l4 = l4 + Math.imul(u3, It2) | 0, s3 = s3 + Math.imul(u3, _t2) | 0, s3 = s3 + Math.imul(E4, It2) | 0, v3 = v3 + Math.imul(E4, _t2) | 0;
      var ti2 = (M4 + l4 | 0) + ((s3 & 8191) << 13) | 0;
      M4 = (v3 + (s3 >>> 13) | 0) + (ti2 >>> 26) | 0, ti2 &= 67108863, l4 = Math.imul(st3, ct2), s3 = Math.imul(st3, lt2), s3 = s3 + Math.imul(at2, ct2) | 0, v3 = Math.imul(at2, lt2), l4 = l4 + Math.imul(ft2, dt2) | 0, s3 = s3 + Math.imul(ft2, pt2) | 0, s3 = s3 + Math.imul(ot2, dt2) | 0, v3 = v3 + Math.imul(ot2, pt2) | 0, l4 = l4 + Math.imul(it3, vt2) | 0, s3 = s3 + Math.imul(it3, mt2) | 0, s3 = s3 + Math.imul(nt2, vt2) | 0, v3 = v3 + Math.imul(nt2, mt2) | 0, l4 = l4 + Math.imul(et3, gt2) | 0, s3 = s3 + Math.imul(et3, At2) | 0, s3 = s3 + Math.imul(rt2, gt2) | 0, v3 = v3 + Math.imul(rt2, At2) | 0, l4 = l4 + Math.imul($, bt2) | 0, s3 = s3 + Math.imul($, yt2) | 0, s3 = s3 + Math.imul(tt3, bt2) | 0, v3 = v3 + Math.imul(tt3, yt2) | 0, l4 = l4 + Math.imul(X2, wt2) | 0, s3 = s3 + Math.imul(X2, xt2) | 0, s3 = s3 + Math.imul(Z2, wt2) | 0, v3 = v3 + Math.imul(Z2, xt2) | 0, l4 = l4 + Math.imul(D2, Mt2) | 0, s3 = s3 + Math.imul(D2, Et2) | 0, s3 = s3 + Math.imul(q, Mt2) | 0, v3 = v3 + Math.imul(q, Et2) | 0, l4 = l4 + Math.imul(P3, St2) | 0, s3 = s3 + Math.imul(P3, Nt2) | 0, s3 = s3 + Math.imul(O4, St2) | 0, v3 = v3 + Math.imul(O4, Nt2) | 0, l4 = l4 + Math.imul(B3, It2) | 0, s3 = s3 + Math.imul(B3, _t2) | 0, s3 = s3 + Math.imul(R2, It2) | 0, v3 = v3 + Math.imul(R2, _t2) | 0;
      var ei2 = (M4 + l4 | 0) + ((s3 & 8191) << 13) | 0;
      M4 = (v3 + (s3 >>> 13) | 0) + (ei2 >>> 26) | 0, ei2 &= 67108863, l4 = Math.imul(st3, dt2), s3 = Math.imul(st3, pt2), s3 = s3 + Math.imul(at2, dt2) | 0, v3 = Math.imul(at2, pt2), l4 = l4 + Math.imul(ft2, vt2) | 0, s3 = s3 + Math.imul(ft2, mt2) | 0, s3 = s3 + Math.imul(ot2, vt2) | 0, v3 = v3 + Math.imul(ot2, mt2) | 0, l4 = l4 + Math.imul(it3, gt2) | 0, s3 = s3 + Math.imul(it3, At2) | 0, s3 = s3 + Math.imul(nt2, gt2) | 0, v3 = v3 + Math.imul(nt2, At2) | 0, l4 = l4 + Math.imul(et3, bt2) | 0, s3 = s3 + Math.imul(et3, yt2) | 0, s3 = s3 + Math.imul(rt2, bt2) | 0, v3 = v3 + Math.imul(rt2, yt2) | 0, l4 = l4 + Math.imul($, wt2) | 0, s3 = s3 + Math.imul($, xt2) | 0, s3 = s3 + Math.imul(tt3, wt2) | 0, v3 = v3 + Math.imul(tt3, xt2) | 0, l4 = l4 + Math.imul(X2, Mt2) | 0, s3 = s3 + Math.imul(X2, Et2) | 0, s3 = s3 + Math.imul(Z2, Mt2) | 0, v3 = v3 + Math.imul(Z2, Et2) | 0, l4 = l4 + Math.imul(D2, St2) | 0, s3 = s3 + Math.imul(D2, Nt2) | 0, s3 = s3 + Math.imul(q, St2) | 0, v3 = v3 + Math.imul(q, Nt2) | 0, l4 = l4 + Math.imul(P3, It2) | 0, s3 = s3 + Math.imul(P3, _t2) | 0, s3 = s3 + Math.imul(O4, It2) | 0, v3 = v3 + Math.imul(O4, _t2) | 0;
      var ri2 = (M4 + l4 | 0) + ((s3 & 8191) << 13) | 0;
      M4 = (v3 + (s3 >>> 13) | 0) + (ri2 >>> 26) | 0, ri2 &= 67108863, l4 = Math.imul(st3, vt2), s3 = Math.imul(st3, mt2), s3 = s3 + Math.imul(at2, vt2) | 0, v3 = Math.imul(at2, mt2), l4 = l4 + Math.imul(ft2, gt2) | 0, s3 = s3 + Math.imul(ft2, At2) | 0, s3 = s3 + Math.imul(ot2, gt2) | 0, v3 = v3 + Math.imul(ot2, At2) | 0, l4 = l4 + Math.imul(it3, bt2) | 0, s3 = s3 + Math.imul(it3, yt2) | 0, s3 = s3 + Math.imul(nt2, bt2) | 0, v3 = v3 + Math.imul(nt2, yt2) | 0, l4 = l4 + Math.imul(et3, wt2) | 0, s3 = s3 + Math.imul(et3, xt2) | 0, s3 = s3 + Math.imul(rt2, wt2) | 0, v3 = v3 + Math.imul(rt2, xt2) | 0, l4 = l4 + Math.imul($, Mt2) | 0, s3 = s3 + Math.imul($, Et2) | 0, s3 = s3 + Math.imul(tt3, Mt2) | 0, v3 = v3 + Math.imul(tt3, Et2) | 0, l4 = l4 + Math.imul(X2, St2) | 0, s3 = s3 + Math.imul(X2, Nt2) | 0, s3 = s3 + Math.imul(Z2, St2) | 0, v3 = v3 + Math.imul(Z2, Nt2) | 0, l4 = l4 + Math.imul(D2, It2) | 0, s3 = s3 + Math.imul(D2, _t2) | 0, s3 = s3 + Math.imul(q, It2) | 0, v3 = v3 + Math.imul(q, _t2) | 0;
      var ii2 = (M4 + l4 | 0) + ((s3 & 8191) << 13) | 0;
      M4 = (v3 + (s3 >>> 13) | 0) + (ii2 >>> 26) | 0, ii2 &= 67108863, l4 = Math.imul(st3, gt2), s3 = Math.imul(st3, At2), s3 = s3 + Math.imul(at2, gt2) | 0, v3 = Math.imul(at2, At2), l4 = l4 + Math.imul(ft2, bt2) | 0, s3 = s3 + Math.imul(ft2, yt2) | 0, s3 = s3 + Math.imul(ot2, bt2) | 0, v3 = v3 + Math.imul(ot2, yt2) | 0, l4 = l4 + Math.imul(it3, wt2) | 0, s3 = s3 + Math.imul(it3, xt2) | 0, s3 = s3 + Math.imul(nt2, wt2) | 0, v3 = v3 + Math.imul(nt2, xt2) | 0, l4 = l4 + Math.imul(et3, Mt2) | 0, s3 = s3 + Math.imul(et3, Et2) | 0, s3 = s3 + Math.imul(rt2, Mt2) | 0, v3 = v3 + Math.imul(rt2, Et2) | 0, l4 = l4 + Math.imul($, St2) | 0, s3 = s3 + Math.imul($, Nt2) | 0, s3 = s3 + Math.imul(tt3, St2) | 0, v3 = v3 + Math.imul(tt3, Nt2) | 0, l4 = l4 + Math.imul(X2, It2) | 0, s3 = s3 + Math.imul(X2, _t2) | 0, s3 = s3 + Math.imul(Z2, It2) | 0, v3 = v3 + Math.imul(Z2, _t2) | 0;
      var ni2 = (M4 + l4 | 0) + ((s3 & 8191) << 13) | 0;
      M4 = (v3 + (s3 >>> 13) | 0) + (ni2 >>> 26) | 0, ni2 &= 67108863, l4 = Math.imul(st3, bt2), s3 = Math.imul(st3, yt2), s3 = s3 + Math.imul(at2, bt2) | 0, v3 = Math.imul(at2, yt2), l4 = l4 + Math.imul(ft2, wt2) | 0, s3 = s3 + Math.imul(ft2, xt2) | 0, s3 = s3 + Math.imul(ot2, wt2) | 0, v3 = v3 + Math.imul(ot2, xt2) | 0, l4 = l4 + Math.imul(it3, Mt2) | 0, s3 = s3 + Math.imul(it3, Et2) | 0, s3 = s3 + Math.imul(nt2, Mt2) | 0, v3 = v3 + Math.imul(nt2, Et2) | 0, l4 = l4 + Math.imul(et3, St2) | 0, s3 = s3 + Math.imul(et3, Nt2) | 0, s3 = s3 + Math.imul(rt2, St2) | 0, v3 = v3 + Math.imul(rt2, Nt2) | 0, l4 = l4 + Math.imul($, It2) | 0, s3 = s3 + Math.imul($, _t2) | 0, s3 = s3 + Math.imul(tt3, It2) | 0, v3 = v3 + Math.imul(tt3, _t2) | 0;
      var fi = (M4 + l4 | 0) + ((s3 & 8191) << 13) | 0;
      M4 = (v3 + (s3 >>> 13) | 0) + (fi >>> 26) | 0, fi &= 67108863, l4 = Math.imul(st3, wt2), s3 = Math.imul(st3, xt2), s3 = s3 + Math.imul(at2, wt2) | 0, v3 = Math.imul(at2, xt2), l4 = l4 + Math.imul(ft2, Mt2) | 0, s3 = s3 + Math.imul(ft2, Et2) | 0, s3 = s3 + Math.imul(ot2, Mt2) | 0, v3 = v3 + Math.imul(ot2, Et2) | 0, l4 = l4 + Math.imul(it3, St2) | 0, s3 = s3 + Math.imul(it3, Nt2) | 0, s3 = s3 + Math.imul(nt2, St2) | 0, v3 = v3 + Math.imul(nt2, Nt2) | 0, l4 = l4 + Math.imul(et3, It2) | 0, s3 = s3 + Math.imul(et3, _t2) | 0, s3 = s3 + Math.imul(rt2, It2) | 0, v3 = v3 + Math.imul(rt2, _t2) | 0;
      var oi2 = (M4 + l4 | 0) + ((s3 & 8191) << 13) | 0;
      M4 = (v3 + (s3 >>> 13) | 0) + (oi2 >>> 26) | 0, oi2 &= 67108863, l4 = Math.imul(st3, Mt2), s3 = Math.imul(st3, Et2), s3 = s3 + Math.imul(at2, Mt2) | 0, v3 = Math.imul(at2, Et2), l4 = l4 + Math.imul(ft2, St2) | 0, s3 = s3 + Math.imul(ft2, Nt2) | 0, s3 = s3 + Math.imul(ot2, St2) | 0, v3 = v3 + Math.imul(ot2, Nt2) | 0, l4 = l4 + Math.imul(it3, It2) | 0, s3 = s3 + Math.imul(it3, _t2) | 0, s3 = s3 + Math.imul(nt2, It2) | 0, v3 = v3 + Math.imul(nt2, _t2) | 0;
      var si2 = (M4 + l4 | 0) + ((s3 & 8191) << 13) | 0;
      M4 = (v3 + (s3 >>> 13) | 0) + (si2 >>> 26) | 0, si2 &= 67108863, l4 = Math.imul(st3, St2), s3 = Math.imul(st3, Nt2), s3 = s3 + Math.imul(at2, St2) | 0, v3 = Math.imul(at2, Nt2), l4 = l4 + Math.imul(ft2, It2) | 0, s3 = s3 + Math.imul(ft2, _t2) | 0, s3 = s3 + Math.imul(ot2, It2) | 0, v3 = v3 + Math.imul(ot2, _t2) | 0;
      var ai2 = (M4 + l4 | 0) + ((s3 & 8191) << 13) | 0;
      M4 = (v3 + (s3 >>> 13) | 0) + (ai2 >>> 26) | 0, ai2 &= 67108863, l4 = Math.imul(st3, It2), s3 = Math.imul(st3, _t2), s3 = s3 + Math.imul(at2, It2) | 0, v3 = Math.imul(at2, _t2);
      var ui2 = (M4 + l4 | 0) + ((s3 & 8191) << 13) | 0;
      return M4 = (v3 + (s3 >>> 13) | 0) + (ui2 >>> 26) | 0, ui2 &= 67108863, x5[0] = Me, x5[1] = Ee2, x5[2] = Se, x5[3] = Ne2, x5[4] = Ie2, x5[5] = Wr2, x5[6] = Xr2, x5[7] = Zr2, x5[8] = $r, x5[9] = ti2, x5[10] = ei2, x5[11] = ri2, x5[12] = ii2, x5[13] = ni2, x5[14] = fi, x5[15] = oi2, x5[16] = si2, x5[17] = ai2, x5[18] = ui2, M4 !== 0 && (x5[19] = M4, c5.length++), c5;
    };
    Math.imul || (J2 = U2);
    function Bt2(b3, f4, a4) {
      a4.negative = f4.negative ^ b3.negative, a4.length = b3.length + f4.length;
      for (var c5 = 0, d3 = 0, g3 = 0; g3 < a4.length - 1; g3++) {
        var x5 = d3;
        d3 = 0;
        for (var M4 = c5 & 67108863, l4 = Math.min(g3, f4.length - 1), s3 = Math.max(0, g3 - b3.length + 1); s3 <= l4; s3++) {
          var v3 = g3 - s3, k4 = b3.words[v3] | 0, u3 = f4.words[s3] | 0, E4 = k4 * u3, _3 = E4 & 67108863;
          x5 = x5 + (E4 / 67108864 | 0) | 0, _3 = _3 + M4 | 0, M4 = _3 & 67108863, x5 = x5 + (_3 >>> 26) | 0, d3 += x5 >>> 26, x5 &= 67108863;
        }
        a4.words[g3] = M4, c5 = x5, x5 = d3;
      }
      return c5 !== 0 ? a4.words[g3] = c5 : a4.length--, a4._strip();
    }
    function G(b3, f4, a4) {
      return Bt2(b3, f4, a4);
    }
    o4.prototype.mulTo = function(f4, a4) {
      var c5, d3 = this.length + f4.length;
      return this.length === 10 && f4.length === 10 ? c5 = J2(this, f4, a4) : d3 < 63 ? c5 = U2(this, f4, a4) : d3 < 1024 ? c5 = Bt2(this, f4, a4) : c5 = G(this, f4, a4), c5;
    }, o4.prototype.mul = function(f4) {
      var a4 = new o4(null);
      return a4.words = new Array(this.length + f4.length), this.mulTo(f4, a4);
    }, o4.prototype.mulf = function(f4) {
      var a4 = new o4(null);
      return a4.words = new Array(this.length + f4.length), G(this, f4, a4);
    }, o4.prototype.imul = function(f4) {
      return this.clone().mulTo(f4, this);
    }, o4.prototype.imuln = function(f4) {
      var a4 = f4 < 0;
      a4 && (f4 = -f4), i4(typeof f4 == "number"), i4(f4 < 67108864);
      for (var c5 = 0, d3 = 0; d3 < this.length; d3++) {
        var g3 = (this.words[d3] | 0) * f4, x5 = (g3 & 67108863) + (c5 & 67108863);
        c5 >>= 26, c5 += g3 / 67108864 | 0, c5 += x5 >>> 26, this.words[d3] = x5 & 67108863;
      }
      return c5 !== 0 && (this.words[d3] = c5, this.length++), a4 ? this.ineg() : this;
    }, o4.prototype.muln = function(f4) {
      return this.clone().imuln(f4);
    }, o4.prototype.sqr = function() {
      return this.mul(this);
    }, o4.prototype.isqr = function() {
      return this.imul(this.clone());
    }, o4.prototype.pow = function(f4) {
      var a4 = F2(f4);
      if (a4.length === 0) return new o4(1);
      for (var c5 = this, d3 = 0; d3 < a4.length && a4[d3] === 0; d3++, c5 = c5.sqr()) ;
      if (++d3 < a4.length) for (var g3 = c5.sqr(); d3 < a4.length; d3++, g3 = g3.sqr()) a4[d3] !== 0 && (c5 = c5.mul(g3));
      return c5;
    }, o4.prototype.iushln = function(f4) {
      i4(typeof f4 == "number" && f4 >= 0);
      var a4 = f4 % 26, c5 = (f4 - a4) / 26, d3 = 67108863 >>> 26 - a4 << 26 - a4, g3;
      if (a4 !== 0) {
        var x5 = 0;
        for (g3 = 0; g3 < this.length; g3++) {
          var M4 = this.words[g3] & d3, l4 = (this.words[g3] | 0) - M4 << a4;
          this.words[g3] = l4 | x5, x5 = M4 >>> 26 - a4;
        }
        x5 && (this.words[g3] = x5, this.length++);
      }
      if (c5 !== 0) {
        for (g3 = this.length - 1; g3 >= 0; g3--) this.words[g3 + c5] = this.words[g3];
        for (g3 = 0; g3 < c5; g3++) this.words[g3] = 0;
        this.length += c5;
      }
      return this._strip();
    }, o4.prototype.ishln = function(f4) {
      return i4(this.negative === 0), this.iushln(f4);
    }, o4.prototype.iushrn = function(f4, a4, c5) {
      i4(typeof f4 == "number" && f4 >= 0);
      var d3;
      a4 ? d3 = (a4 - a4 % 26) / 26 : d3 = 0;
      var g3 = f4 % 26, x5 = Math.min((f4 - g3) / 26, this.length), M4 = 67108863 ^ 67108863 >>> g3 << g3, l4 = c5;
      if (d3 -= x5, d3 = Math.max(0, d3), l4) {
        for (var s3 = 0; s3 < x5; s3++) l4.words[s3] = this.words[s3];
        l4.length = x5;
      }
      if (x5 !== 0) if (this.length > x5) for (this.length -= x5, s3 = 0; s3 < this.length; s3++) this.words[s3] = this.words[s3 + x5];
      else this.words[0] = 0, this.length = 1;
      var v3 = 0;
      for (s3 = this.length - 1; s3 >= 0 && (v3 !== 0 || s3 >= d3); s3--) {
        var k4 = this.words[s3] | 0;
        this.words[s3] = v3 << 26 - g3 | k4 >>> g3, v3 = k4 & M4;
      }
      return l4 && v3 !== 0 && (l4.words[l4.length++] = v3), this.length === 0 && (this.words[0] = 0, this.length = 1), this._strip();
    }, o4.prototype.ishrn = function(f4, a4, c5) {
      return i4(this.negative === 0), this.iushrn(f4, a4, c5);
    }, o4.prototype.shln = function(f4) {
      return this.clone().ishln(f4);
    }, o4.prototype.ushln = function(f4) {
      return this.clone().iushln(f4);
    }, o4.prototype.shrn = function(f4) {
      return this.clone().ishrn(f4);
    }, o4.prototype.ushrn = function(f4) {
      return this.clone().iushrn(f4);
    }, o4.prototype.testn = function(f4) {
      i4(typeof f4 == "number" && f4 >= 0);
      var a4 = f4 % 26, c5 = (f4 - a4) / 26, d3 = 1 << a4;
      if (this.length <= c5) return false;
      var g3 = this.words[c5];
      return !!(g3 & d3);
    }, o4.prototype.imaskn = function(f4) {
      i4(typeof f4 == "number" && f4 >= 0);
      var a4 = f4 % 26, c5 = (f4 - a4) / 26;
      if (i4(this.negative === 0, "imaskn works only with positive numbers"), this.length <= c5) return this;
      if (a4 !== 0 && c5++, this.length = Math.min(c5, this.length), a4 !== 0) {
        var d3 = 67108863 ^ 67108863 >>> a4 << a4;
        this.words[this.length - 1] &= d3;
      }
      return this._strip();
    }, o4.prototype.maskn = function(f4) {
      return this.clone().imaskn(f4);
    }, o4.prototype.iaddn = function(f4) {
      return i4(typeof f4 == "number"), i4(f4 < 67108864), f4 < 0 ? this.isubn(-f4) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) <= f4 ? (this.words[0] = f4 - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(f4), this.negative = 1, this) : this._iaddn(f4);
    }, o4.prototype._iaddn = function(f4) {
      this.words[0] += f4;
      for (var a4 = 0; a4 < this.length && this.words[a4] >= 67108864; a4++) this.words[a4] -= 67108864, a4 === this.length - 1 ? this.words[a4 + 1] = 1 : this.words[a4 + 1]++;
      return this.length = Math.max(this.length, a4 + 1), this;
    }, o4.prototype.isubn = function(f4) {
      if (i4(typeof f4 == "number"), i4(f4 < 67108864), f4 < 0) return this.iaddn(-f4);
      if (this.negative !== 0) return this.negative = 0, this.iaddn(f4), this.negative = 1, this;
      if (this.words[0] -= f4, this.length === 1 && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
      else for (var a4 = 0; a4 < this.length && this.words[a4] < 0; a4++) this.words[a4] += 67108864, this.words[a4 + 1] -= 1;
      return this._strip();
    }, o4.prototype.addn = function(f4) {
      return this.clone().iaddn(f4);
    }, o4.prototype.subn = function(f4) {
      return this.clone().isubn(f4);
    }, o4.prototype.iabs = function() {
      return this.negative = 0, this;
    }, o4.prototype.abs = function() {
      return this.clone().iabs();
    }, o4.prototype._ishlnsubmul = function(f4, a4, c5) {
      var d3 = f4.length + c5, g3;
      this._expand(d3);
      var x5, M4 = 0;
      for (g3 = 0; g3 < f4.length; g3++) {
        x5 = (this.words[g3 + c5] | 0) + M4;
        var l4 = (f4.words[g3] | 0) * a4;
        x5 -= l4 & 67108863, M4 = (x5 >> 26) - (l4 / 67108864 | 0), this.words[g3 + c5] = x5 & 67108863;
      }
      for (; g3 < this.length - c5; g3++) x5 = (this.words[g3 + c5] | 0) + M4, M4 = x5 >> 26, this.words[g3 + c5] = x5 & 67108863;
      if (M4 === 0) return this._strip();
      for (i4(M4 === -1), M4 = 0, g3 = 0; g3 < this.length; g3++) x5 = -(this.words[g3] | 0) + M4, M4 = x5 >> 26, this.words[g3] = x5 & 67108863;
      return this.negative = 1, this._strip();
    }, o4.prototype._wordDiv = function(f4, a4) {
      var c5 = this.length - f4.length, d3 = this.clone(), g3 = f4, x5 = g3.words[g3.length - 1] | 0, M4 = this._countBits(x5);
      c5 = 26 - M4, c5 !== 0 && (g3 = g3.ushln(c5), d3.iushln(c5), x5 = g3.words[g3.length - 1] | 0);
      var l4 = d3.length - g3.length, s3;
      if (a4 !== "mod") {
        s3 = new o4(null), s3.length = l4 + 1, s3.words = new Array(s3.length);
        for (var v3 = 0; v3 < s3.length; v3++) s3.words[v3] = 0;
      }
      var k4 = d3.clone()._ishlnsubmul(g3, 1, l4);
      k4.negative === 0 && (d3 = k4, s3 && (s3.words[l4] = 1));
      for (var u3 = l4 - 1; u3 >= 0; u3--) {
        var E4 = (d3.words[g3.length + u3] | 0) * 67108864 + (d3.words[g3.length + u3 - 1] | 0);
        for (E4 = Math.min(E4 / x5 | 0, 67108863), d3._ishlnsubmul(g3, E4, u3); d3.negative !== 0; ) E4--, d3.negative = 0, d3._ishlnsubmul(g3, 1, u3), d3.isZero() || (d3.negative ^= 1);
        s3 && (s3.words[u3] = E4);
      }
      return s3 && s3._strip(), d3._strip(), a4 !== "div" && c5 !== 0 && d3.iushrn(c5), { div: s3 || null, mod: d3 };
    }, o4.prototype.divmod = function(f4, a4, c5) {
      if (i4(!f4.isZero()), this.isZero()) return { div: new o4(0), mod: new o4(0) };
      var d3, g3, x5;
      return this.negative !== 0 && f4.negative === 0 ? (x5 = this.neg().divmod(f4, a4), a4 !== "mod" && (d3 = x5.div.neg()), a4 !== "div" && (g3 = x5.mod.neg(), c5 && g3.negative !== 0 && g3.iadd(f4)), { div: d3, mod: g3 }) : this.negative === 0 && f4.negative !== 0 ? (x5 = this.divmod(f4.neg(), a4), a4 !== "mod" && (d3 = x5.div.neg()), { div: d3, mod: x5.mod }) : this.negative & f4.negative ? (x5 = this.neg().divmod(f4.neg(), a4), a4 !== "div" && (g3 = x5.mod.neg(), c5 && g3.negative !== 0 && g3.isub(f4)), { div: x5.div, mod: g3 }) : f4.length > this.length || this.cmp(f4) < 0 ? { div: new o4(0), mod: this } : f4.length === 1 ? a4 === "div" ? { div: this.divn(f4.words[0]), mod: null } : a4 === "mod" ? { div: null, mod: new o4(this.modrn(f4.words[0])) } : { div: this.divn(f4.words[0]), mod: new o4(this.modrn(f4.words[0])) } : this._wordDiv(f4, a4);
    }, o4.prototype.div = function(f4) {
      return this.divmod(f4, "div", false).div;
    }, o4.prototype.mod = function(f4) {
      return this.divmod(f4, "mod", false).mod;
    }, o4.prototype.umod = function(f4) {
      return this.divmod(f4, "mod", true).mod;
    }, o4.prototype.divRound = function(f4) {
      var a4 = this.divmod(f4);
      if (a4.mod.isZero()) return a4.div;
      var c5 = a4.div.negative !== 0 ? a4.mod.isub(f4) : a4.mod, d3 = f4.ushrn(1), g3 = f4.andln(1), x5 = c5.cmp(d3);
      return x5 < 0 || g3 === 1 && x5 === 0 ? a4.div : a4.div.negative !== 0 ? a4.div.isubn(1) : a4.div.iaddn(1);
    }, o4.prototype.modrn = function(f4) {
      var a4 = f4 < 0;
      a4 && (f4 = -f4), i4(f4 <= 67108863);
      for (var c5 = (1 << 26) % f4, d3 = 0, g3 = this.length - 1; g3 >= 0; g3--) d3 = (c5 * d3 + (this.words[g3] | 0)) % f4;
      return a4 ? -d3 : d3;
    }, o4.prototype.modn = function(f4) {
      return this.modrn(f4);
    }, o4.prototype.idivn = function(f4) {
      var a4 = f4 < 0;
      a4 && (f4 = -f4), i4(f4 <= 67108863);
      for (var c5 = 0, d3 = this.length - 1; d3 >= 0; d3--) {
        var g3 = (this.words[d3] | 0) + c5 * 67108864;
        this.words[d3] = g3 / f4 | 0, c5 = g3 % f4;
      }
      return this._strip(), a4 ? this.ineg() : this;
    }, o4.prototype.divn = function(f4) {
      return this.clone().idivn(f4);
    }, o4.prototype.egcd = function(f4) {
      i4(f4.negative === 0), i4(!f4.isZero());
      var a4 = this, c5 = f4.clone();
      a4.negative !== 0 ? a4 = a4.umod(f4) : a4 = a4.clone();
      for (var d3 = new o4(1), g3 = new o4(0), x5 = new o4(0), M4 = new o4(1), l4 = 0; a4.isEven() && c5.isEven(); ) a4.iushrn(1), c5.iushrn(1), ++l4;
      for (var s3 = c5.clone(), v3 = a4.clone(); !a4.isZero(); ) {
        for (var k4 = 0, u3 = 1; !(a4.words[0] & u3) && k4 < 26; ++k4, u3 <<= 1) ;
        if (k4 > 0) for (a4.iushrn(k4); k4-- > 0; ) (d3.isOdd() || g3.isOdd()) && (d3.iadd(s3), g3.isub(v3)), d3.iushrn(1), g3.iushrn(1);
        for (var E4 = 0, _3 = 1; !(c5.words[0] & _3) && E4 < 26; ++E4, _3 <<= 1) ;
        if (E4 > 0) for (c5.iushrn(E4); E4-- > 0; ) (x5.isOdd() || M4.isOdd()) && (x5.iadd(s3), M4.isub(v3)), x5.iushrn(1), M4.iushrn(1);
        a4.cmp(c5) >= 0 ? (a4.isub(c5), d3.isub(x5), g3.isub(M4)) : (c5.isub(a4), x5.isub(d3), M4.isub(g3));
      }
      return { a: x5, b: M4, gcd: c5.iushln(l4) };
    }, o4.prototype._invmp = function(f4) {
      i4(f4.negative === 0), i4(!f4.isZero());
      var a4 = this, c5 = f4.clone();
      a4.negative !== 0 ? a4 = a4.umod(f4) : a4 = a4.clone();
      for (var d3 = new o4(1), g3 = new o4(0), x5 = c5.clone(); a4.cmpn(1) > 0 && c5.cmpn(1) > 0; ) {
        for (var M4 = 0, l4 = 1; !(a4.words[0] & l4) && M4 < 26; ++M4, l4 <<= 1) ;
        if (M4 > 0) for (a4.iushrn(M4); M4-- > 0; ) d3.isOdd() && d3.iadd(x5), d3.iushrn(1);
        for (var s3 = 0, v3 = 1; !(c5.words[0] & v3) && s3 < 26; ++s3, v3 <<= 1) ;
        if (s3 > 0) for (c5.iushrn(s3); s3-- > 0; ) g3.isOdd() && g3.iadd(x5), g3.iushrn(1);
        a4.cmp(c5) >= 0 ? (a4.isub(c5), d3.isub(g3)) : (c5.isub(a4), g3.isub(d3));
      }
      var k4;
      return a4.cmpn(1) === 0 ? k4 = d3 : k4 = g3, k4.cmpn(0) < 0 && k4.iadd(f4), k4;
    }, o4.prototype.gcd = function(f4) {
      if (this.isZero()) return f4.abs();
      if (f4.isZero()) return this.abs();
      var a4 = this.clone(), c5 = f4.clone();
      a4.negative = 0, c5.negative = 0;
      for (var d3 = 0; a4.isEven() && c5.isEven(); d3++) a4.iushrn(1), c5.iushrn(1);
      do {
        for (; a4.isEven(); ) a4.iushrn(1);
        for (; c5.isEven(); ) c5.iushrn(1);
        var g3 = a4.cmp(c5);
        if (g3 < 0) {
          var x5 = a4;
          a4 = c5, c5 = x5;
        } else if (g3 === 0 || c5.cmpn(1) === 0) break;
        a4.isub(c5);
      } while (true);
      return c5.iushln(d3);
    }, o4.prototype.invm = function(f4) {
      return this.egcd(f4).a.umod(f4);
    }, o4.prototype.isEven = function() {
      return (this.words[0] & 1) === 0;
    }, o4.prototype.isOdd = function() {
      return (this.words[0] & 1) === 1;
    }, o4.prototype.andln = function(f4) {
      return this.words[0] & f4;
    }, o4.prototype.bincn = function(f4) {
      i4(typeof f4 == "number");
      var a4 = f4 % 26, c5 = (f4 - a4) / 26, d3 = 1 << a4;
      if (this.length <= c5) return this._expand(c5 + 1), this.words[c5] |= d3, this;
      for (var g3 = d3, x5 = c5; g3 !== 0 && x5 < this.length; x5++) {
        var M4 = this.words[x5] | 0;
        M4 += g3, g3 = M4 >>> 26, M4 &= 67108863, this.words[x5] = M4;
      }
      return g3 !== 0 && (this.words[x5] = g3, this.length++), this;
    }, o4.prototype.isZero = function() {
      return this.length === 1 && this.words[0] === 0;
    }, o4.prototype.cmpn = function(f4) {
      var a4 = f4 < 0;
      if (this.negative !== 0 && !a4) return -1;
      if (this.negative === 0 && a4) return 1;
      this._strip();
      var c5;
      if (this.length > 1) c5 = 1;
      else {
        a4 && (f4 = -f4), i4(f4 <= 67108863, "Number is too big");
        var d3 = this.words[0] | 0;
        c5 = d3 === f4 ? 0 : d3 < f4 ? -1 : 1;
      }
      return this.negative !== 0 ? -c5 | 0 : c5;
    }, o4.prototype.cmp = function(f4) {
      if (this.negative !== 0 && f4.negative === 0) return -1;
      if (this.negative === 0 && f4.negative !== 0) return 1;
      var a4 = this.ucmp(f4);
      return this.negative !== 0 ? -a4 | 0 : a4;
    }, o4.prototype.ucmp = function(f4) {
      if (this.length > f4.length) return 1;
      if (this.length < f4.length) return -1;
      for (var a4 = 0, c5 = this.length - 1; c5 >= 0; c5--) {
        var d3 = this.words[c5] | 0, g3 = f4.words[c5] | 0;
        if (d3 !== g3) {
          d3 < g3 ? a4 = -1 : d3 > g3 && (a4 = 1);
          break;
        }
      }
      return a4;
    }, o4.prototype.gtn = function(f4) {
      return this.cmpn(f4) === 1;
    }, o4.prototype.gt = function(f4) {
      return this.cmp(f4) === 1;
    }, o4.prototype.gten = function(f4) {
      return this.cmpn(f4) >= 0;
    }, o4.prototype.gte = function(f4) {
      return this.cmp(f4) >= 0;
    }, o4.prototype.ltn = function(f4) {
      return this.cmpn(f4) === -1;
    }, o4.prototype.lt = function(f4) {
      return this.cmp(f4) === -1;
    }, o4.prototype.lten = function(f4) {
      return this.cmpn(f4) <= 0;
    }, o4.prototype.lte = function(f4) {
      return this.cmp(f4) <= 0;
    }, o4.prototype.eqn = function(f4) {
      return this.cmpn(f4) === 0;
    }, o4.prototype.eq = function(f4) {
      return this.cmp(f4) === 0;
    }, o4.red = function(f4) {
      return new Y2(f4);
    }, o4.prototype.toRed = function(f4) {
      return i4(!this.red, "Already a number in reduction context"), i4(this.negative === 0, "red works only with positives"), f4.convertTo(this)._forceRed(f4);
    }, o4.prototype.fromRed = function() {
      return i4(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
    }, o4.prototype._forceRed = function(f4) {
      return this.red = f4, this;
    }, o4.prototype.forceRed = function(f4) {
      return i4(!this.red, "Already a number in reduction context"), this._forceRed(f4);
    }, o4.prototype.redAdd = function(f4) {
      return i4(this.red, "redAdd works only with red numbers"), this.red.add(this, f4);
    }, o4.prototype.redIAdd = function(f4) {
      return i4(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, f4);
    }, o4.prototype.redSub = function(f4) {
      return i4(this.red, "redSub works only with red numbers"), this.red.sub(this, f4);
    }, o4.prototype.redISub = function(f4) {
      return i4(this.red, "redISub works only with red numbers"), this.red.isub(this, f4);
    }, o4.prototype.redShl = function(f4) {
      return i4(this.red, "redShl works only with red numbers"), this.red.shl(this, f4);
    }, o4.prototype.redMul = function(f4) {
      return i4(this.red, "redMul works only with red numbers"), this.red._verify2(this, f4), this.red.mul(this, f4);
    }, o4.prototype.redIMul = function(f4) {
      return i4(this.red, "redMul works only with red numbers"), this.red._verify2(this, f4), this.red.imul(this, f4);
    }, o4.prototype.redSqr = function() {
      return i4(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
    }, o4.prototype.redISqr = function() {
      return i4(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
    }, o4.prototype.redSqrt = function() {
      return i4(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
    }, o4.prototype.redInvm = function() {
      return i4(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
    }, o4.prototype.redNeg = function() {
      return i4(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
    }, o4.prototype.redPow = function(f4) {
      return i4(this.red && !f4.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, f4);
    };
    var H = { k256: null, p224: null, p192: null, p25519: null };
    function z3(b3, f4) {
      this.name = b3, this.p = new o4(f4, 16), this.n = this.p.bitLength(), this.k = new o4(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
    }
    z3.prototype._tmp = function() {
      var f4 = new o4(null);
      return f4.words = new Array(Math.ceil(this.n / 13)), f4;
    }, z3.prototype.ireduce = function(f4) {
      var a4 = f4, c5;
      do
        this.split(a4, this.tmp), a4 = this.imulK(a4), a4 = a4.iadd(this.tmp), c5 = a4.bitLength();
      while (c5 > this.n);
      var d3 = c5 < this.n ? -1 : a4.ucmp(this.p);
      return d3 === 0 ? (a4.words[0] = 0, a4.length = 1) : d3 > 0 ? a4.isub(this.p) : a4.strip !== void 0 ? a4.strip() : a4._strip(), a4;
    }, z3.prototype.split = function(f4, a4) {
      f4.iushrn(this.n, 0, a4);
    }, z3.prototype.imulK = function(f4) {
      return f4.imul(this.k);
    };
    function Pt2() {
      z3.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
    }
    n5(Pt2, z3), Pt2.prototype.split = function(f4, a4) {
      for (var c5 = 4194303, d3 = Math.min(f4.length, 9), g3 = 0; g3 < d3; g3++) a4.words[g3] = f4.words[g3];
      if (a4.length = d3, f4.length <= 9) {
        f4.words[0] = 0, f4.length = 1;
        return;
      }
      var x5 = f4.words[9];
      for (a4.words[a4.length++] = x5 & c5, g3 = 10; g3 < f4.length; g3++) {
        var M4 = f4.words[g3] | 0;
        f4.words[g3 - 10] = (M4 & c5) << 4 | x5 >>> 22, x5 = M4;
      }
      x5 >>>= 22, f4.words[g3 - 10] = x5, x5 === 0 && f4.length > 10 ? f4.length -= 10 : f4.length -= 9;
    }, Pt2.prototype.imulK = function(f4) {
      f4.words[f4.length] = 0, f4.words[f4.length + 1] = 0, f4.length += 2;
      for (var a4 = 0, c5 = 0; c5 < f4.length; c5++) {
        var d3 = f4.words[c5] | 0;
        a4 += d3 * 977, f4.words[c5] = a4 & 67108863, a4 = d3 * 64 + (a4 / 67108864 | 0);
      }
      return f4.words[f4.length - 1] === 0 && (f4.length--, f4.words[f4.length - 1] === 0 && f4.length--), f4;
    };
    function W2() {
      z3.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
    }
    n5(W2, z3);
    function Rt2() {
      z3.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
    }
    n5(Rt2, z3);
    function Yt2() {
      z3.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
    }
    n5(Yt2, z3), Yt2.prototype.imulK = function(f4) {
      for (var a4 = 0, c5 = 0; c5 < f4.length; c5++) {
        var d3 = (f4.words[c5] | 0) * 19 + a4, g3 = d3 & 67108863;
        d3 >>>= 26, f4.words[c5] = g3, a4 = d3;
      }
      return a4 !== 0 && (f4.words[f4.length++] = a4), f4;
    }, o4._prime = function(f4) {
      if (H[f4]) return H[f4];
      var a4;
      if (f4 === "k256") a4 = new Pt2();
      else if (f4 === "p224") a4 = new W2();
      else if (f4 === "p192") a4 = new Rt2();
      else if (f4 === "p25519") a4 = new Yt2();
      else throw new Error("Unknown prime " + f4);
      return H[f4] = a4, a4;
    };
    function Y2(b3) {
      if (typeof b3 == "string") {
        var f4 = o4._prime(b3);
        this.m = f4.p, this.prime = f4;
      } else i4(b3.gtn(1), "modulus must be greater than 1"), this.m = b3, this.prime = null;
    }
    Y2.prototype._verify1 = function(f4) {
      i4(f4.negative === 0, "red works only with positives"), i4(f4.red, "red works only with red numbers");
    }, Y2.prototype._verify2 = function(f4, a4) {
      i4((f4.negative | a4.negative) === 0, "red works only with positives"), i4(f4.red && f4.red === a4.red, "red works only with red numbers");
    }, Y2.prototype.imod = function(f4) {
      return this.prime ? this.prime.ireduce(f4)._forceRed(this) : (w4(f4, f4.umod(this.m)._forceRed(this)), f4);
    }, Y2.prototype.neg = function(f4) {
      return f4.isZero() ? f4.clone() : this.m.sub(f4)._forceRed(this);
    }, Y2.prototype.add = function(f4, a4) {
      this._verify2(f4, a4);
      var c5 = f4.add(a4);
      return c5.cmp(this.m) >= 0 && c5.isub(this.m), c5._forceRed(this);
    }, Y2.prototype.iadd = function(f4, a4) {
      this._verify2(f4, a4);
      var c5 = f4.iadd(a4);
      return c5.cmp(this.m) >= 0 && c5.isub(this.m), c5;
    }, Y2.prototype.sub = function(f4, a4) {
      this._verify2(f4, a4);
      var c5 = f4.sub(a4);
      return c5.cmpn(0) < 0 && c5.iadd(this.m), c5._forceRed(this);
    }, Y2.prototype.isub = function(f4, a4) {
      this._verify2(f4, a4);
      var c5 = f4.isub(a4);
      return c5.cmpn(0) < 0 && c5.iadd(this.m), c5;
    }, Y2.prototype.shl = function(f4, a4) {
      return this._verify1(f4), this.imod(f4.ushln(a4));
    }, Y2.prototype.imul = function(f4, a4) {
      return this._verify2(f4, a4), this.imod(f4.imul(a4));
    }, Y2.prototype.mul = function(f4, a4) {
      return this._verify2(f4, a4), this.imod(f4.mul(a4));
    }, Y2.prototype.isqr = function(f4) {
      return this.imul(f4, f4.clone());
    }, Y2.prototype.sqr = function(f4) {
      return this.mul(f4, f4);
    }, Y2.prototype.sqrt = function(f4) {
      if (f4.isZero()) return f4.clone();
      var a4 = this.m.andln(3);
      if (i4(a4 % 2 === 1), a4 === 3) {
        var c5 = this.m.add(new o4(1)).iushrn(2);
        return this.pow(f4, c5);
      }
      for (var d3 = this.m.subn(1), g3 = 0; !d3.isZero() && d3.andln(1) === 0; ) g3++, d3.iushrn(1);
      i4(!d3.isZero());
      var x5 = new o4(1).toRed(this), M4 = x5.redNeg(), l4 = this.m.subn(1).iushrn(1), s3 = this.m.bitLength();
      for (s3 = new o4(2 * s3 * s3).toRed(this); this.pow(s3, l4).cmp(M4) !== 0; ) s3.redIAdd(M4);
      for (var v3 = this.pow(s3, d3), k4 = this.pow(f4, d3.addn(1).iushrn(1)), u3 = this.pow(f4, d3), E4 = g3; u3.cmp(x5) !== 0; ) {
        for (var _3 = u3, B3 = 0; _3.cmp(x5) !== 0; B3++) _3 = _3.redSqr();
        i4(B3 < E4);
        var R2 = this.pow(v3, new o4(1).iushln(E4 - B3 - 1));
        k4 = k4.redMul(R2), v3 = R2.redSqr(), u3 = u3.redMul(v3), E4 = B3;
      }
      return k4;
    }, Y2.prototype.invm = function(f4) {
      var a4 = f4._invmp(this.m);
      return a4.negative !== 0 ? (a4.negative = 0, this.imod(a4).redNeg()) : this.imod(a4);
    }, Y2.prototype.pow = function(f4, a4) {
      if (a4.isZero()) return new o4(1).toRed(this);
      if (a4.cmpn(1) === 0) return f4.clone();
      var c5 = 4, d3 = new Array(1 << c5);
      d3[0] = new o4(1).toRed(this), d3[1] = f4;
      for (var g3 = 2; g3 < d3.length; g3++) d3[g3] = this.mul(d3[g3 - 1], f4);
      var x5 = d3[0], M4 = 0, l4 = 0, s3 = a4.bitLength() % 26;
      for (s3 === 0 && (s3 = 26), g3 = a4.length - 1; g3 >= 0; g3--) {
        for (var v3 = a4.words[g3], k4 = s3 - 1; k4 >= 0; k4--) {
          var u3 = v3 >> k4 & 1;
          if (x5 !== d3[0] && (x5 = this.sqr(x5)), u3 === 0 && M4 === 0) {
            l4 = 0;
            continue;
          }
          M4 <<= 1, M4 |= u3, l4++, !(l4 !== c5 && (g3 !== 0 || k4 !== 0)) && (x5 = this.mul(x5, d3[M4]), l4 = 0, M4 = 0);
        }
        s3 = 26;
      }
      return x5;
    }, Y2.prototype.convertTo = function(f4) {
      var a4 = f4.umod(this.m);
      return a4 === f4 ? a4.clone() : a4;
    }, Y2.prototype.convertFrom = function(f4) {
      var a4 = f4.clone();
      return a4.red = null, a4;
    }, o4.mont = function(f4) {
      return new Vt2(f4);
    };
    function Vt2(b3) {
      Y2.call(this, b3), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new o4(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
    }
    n5(Vt2, Y2), Vt2.prototype.convertTo = function(f4) {
      return this.imod(f4.ushln(this.shift));
    }, Vt2.prototype.convertFrom = function(f4) {
      var a4 = this.imod(f4.mul(this.rinv));
      return a4.red = null, a4;
    }, Vt2.prototype.imul = function(f4, a4) {
      if (f4.isZero() || a4.isZero()) return f4.words[0] = 0, f4.length = 1, f4;
      var c5 = f4.imul(a4), d3 = c5.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), g3 = c5.isub(d3).iushrn(this.shift), x5 = g3;
      return g3.cmp(this.m) >= 0 ? x5 = g3.isub(this.m) : g3.cmpn(0) < 0 && (x5 = g3.iadd(this.m)), x5._forceRed(this);
    }, Vt2.prototype.mul = function(f4, a4) {
      if (f4.isZero() || a4.isZero()) return new o4(0)._forceRed(this);
      var c5 = f4.mul(a4), d3 = c5.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), g3 = c5.isub(d3).iushrn(this.shift), x5 = g3;
      return g3.cmp(this.m) >= 0 ? x5 = g3.isub(this.m) : g3.cmpn(0) < 0 && (x5 = g3.iadd(this.m)), x5._forceRed(this);
    }, Vt2.prototype.invm = function(f4) {
      var a4 = this.imod(f4._invmp(this.m).mul(this.r2));
      return a4._forceRed(this);
    };
  })(e2, Pn);
})(jn);
var K2 = jn.exports;
var Qn = "bignumber/5.7.0";
var Rr = K2.BN;
var Ae = new L2(Qn);
var wi = {};
var Jn = 9007199254740991;
function Ts(e2) {
  return e2 != null && (V.isBigNumber(e2) || typeof e2 == "number" && e2 % 1 === 0 || typeof e2 == "string" && !!e2.match(/^-?[0-9]+$/) || Qt(e2) || typeof e2 == "bigint" || ir(e2));
}
var Gn = false;
var V = class _V {
  constructor(t, r3) {
    t !== wi && Ae.throwError("cannot call constructor directly; use BigNumber.from", L2.errors.UNSUPPORTED_OPERATION, { operation: "new (BigNumber)" }), this._hex = r3, this._isBigNumber = true, Object.freeze(this);
  }
  fromTwos(t) {
    return Lt(j2(this).fromTwos(t));
  }
  toTwos(t) {
    return Lt(j2(this).toTwos(t));
  }
  abs() {
    return this._hex[0] === "-" ? _V.from(this._hex.substring(1)) : this;
  }
  add(t) {
    return Lt(j2(this).add(j2(t)));
  }
  sub(t) {
    return Lt(j2(this).sub(j2(t)));
  }
  div(t) {
    return _V.from(t).isZero() && Wt("division-by-zero", "div"), Lt(j2(this).div(j2(t)));
  }
  mul(t) {
    return Lt(j2(this).mul(j2(t)));
  }
  mod(t) {
    const r3 = j2(t);
    return r3.isNeg() && Wt("division-by-zero", "mod"), Lt(j2(this).umod(r3));
  }
  pow(t) {
    const r3 = j2(t);
    return r3.isNeg() && Wt("negative-power", "pow"), Lt(j2(this).pow(r3));
  }
  and(t) {
    const r3 = j2(t);
    return (this.isNegative() || r3.isNeg()) && Wt("unbound-bitwise-result", "and"), Lt(j2(this).and(r3));
  }
  or(t) {
    const r3 = j2(t);
    return (this.isNegative() || r3.isNeg()) && Wt("unbound-bitwise-result", "or"), Lt(j2(this).or(r3));
  }
  xor(t) {
    const r3 = j2(t);
    return (this.isNegative() || r3.isNeg()) && Wt("unbound-bitwise-result", "xor"), Lt(j2(this).xor(r3));
  }
  mask(t) {
    return (this.isNegative() || t < 0) && Wt("negative-width", "mask"), Lt(j2(this).maskn(t));
  }
  shl(t) {
    return (this.isNegative() || t < 0) && Wt("negative-width", "shl"), Lt(j2(this).shln(t));
  }
  shr(t) {
    return (this.isNegative() || t < 0) && Wt("negative-width", "shr"), Lt(j2(this).shrn(t));
  }
  eq(t) {
    return j2(this).eq(j2(t));
  }
  lt(t) {
    return j2(this).lt(j2(t));
  }
  lte(t) {
    return j2(this).lte(j2(t));
  }
  gt(t) {
    return j2(this).gt(j2(t));
  }
  gte(t) {
    return j2(this).gte(j2(t));
  }
  isNegative() {
    return this._hex[0] === "-";
  }
  isZero() {
    return j2(this).isZero();
  }
  toNumber() {
    try {
      return j2(this).toNumber();
    } catch {
      Wt("overflow", "toNumber", this.toString());
    }
    return null;
  }
  toBigInt() {
    try {
      return BigInt(this.toString());
    } catch {
    }
    return Ae.throwError("this platform does not support BigInt", L2.errors.UNSUPPORTED_OPERATION, { value: this.toString() });
  }
  toString() {
    return arguments.length > 0 && (arguments[0] === 10 ? Gn || (Gn = true, Ae.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : arguments[0] === 16 ? Ae.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", L2.errors.UNEXPECTED_ARGUMENT, {}) : Ae.throwError("BigNumber.toString does not accept parameters", L2.errors.UNEXPECTED_ARGUMENT, {})), j2(this).toString(10);
  }
  toHexString() {
    return this._hex;
  }
  toJSON(t) {
    return { type: "BigNumber", hex: this.toHexString() };
  }
  static from(t) {
    if (t instanceof _V) return t;
    if (typeof t == "string") return t.match(/^-?0x[0-9a-f]+$/i) ? new _V(wi, vr(t)) : t.match(/^-?[0-9]+$/) ? new _V(wi, vr(new Rr(t))) : Ae.throwArgumentError("invalid BigNumber string", "value", t);
    if (typeof t == "number") return t % 1 && Wt("underflow", "BigNumber.from", t), (t >= Jn || t <= -Jn) && Wt("overflow", "BigNumber.from", t), _V.from(String(t));
    const r3 = t;
    if (typeof r3 == "bigint") return _V.from(r3.toString());
    if (ir(r3)) return _V.from(Kt(r3));
    if (r3) if (r3.toHexString) {
      const i4 = r3.toHexString();
      if (typeof i4 == "string") return _V.from(i4);
    } else {
      let i4 = r3._hex;
      if (i4 == null && r3.type === "BigNumber" && (i4 = r3.hex), typeof i4 == "string" && (Qt(i4) || i4[0] === "-" && Qt(i4.substring(1)))) return _V.from(i4);
    }
    return Ae.throwArgumentError("invalid BigNumber value", "value", t);
  }
  static isBigNumber(t) {
    return !!(t && t._isBigNumber);
  }
};
function vr(e2) {
  if (typeof e2 != "string") return vr(e2.toString(16));
  if (e2[0] === "-") return e2 = e2.substring(1), e2[0] === "-" && Ae.throwArgumentError("invalid hex", "value", e2), e2 = vr(e2), e2 === "0x00" ? e2 : "-" + e2;
  if (e2.substring(0, 2) !== "0x" && (e2 = "0x" + e2), e2 === "0x") return "0x00";
  for (e2.length % 2 && (e2 = "0x0" + e2.substring(2)); e2.length > 4 && e2.substring(0, 4) === "0x00"; ) e2 = "0x" + e2.substring(4);
  return e2;
}
function Lt(e2) {
  return V.from(vr(e2));
}
function j2(e2) {
  const t = V.from(e2).toHexString();
  return t[0] === "-" ? new Rr("-" + t.substring(3), 16) : new Rr(t.substring(2), 16);
}
function Wt(e2, t, r3) {
  const i4 = { fault: e2, operation: t };
  return r3 != null && (i4.value = r3), Ae.throwError(e2, L2.errors.NUMERIC_FAULT, i4);
}
function Us(e2) {
  return new Rr(e2, 36).toString(16);
}
var Ht = new L2(Qn);
var mr = {};
var Yn = V.from(0);
var Vn = V.from(-1);
function Wn(e2, t, r3, i4) {
  const n5 = { fault: t, operation: r3 };
  return i4 !== void 0 && (n5.value = i4), Ht.throwError(e2, L2.errors.NUMERIC_FAULT, n5);
}
var gr = "0";
for (; gr.length < 256; ) gr += gr;
function xi(e2) {
  if (typeof e2 != "number") try {
    e2 = V.from(e2).toNumber();
  } catch {
  }
  return typeof e2 == "number" && e2 >= 0 && e2 <= 256 && !(e2 % 1) ? "1" + gr.substring(0, e2) : Ht.throwArgumentError("invalid decimal size", "decimals", e2);
}
function Mi(e2, t) {
  t == null && (t = 0);
  const r3 = xi(t);
  e2 = V.from(e2);
  const i4 = e2.lt(Yn);
  i4 && (e2 = e2.mul(Vn));
  let n5 = e2.mod(r3).toString();
  for (; n5.length < r3.length - 1; ) n5 = "0" + n5;
  n5 = n5.match(/^([0-9]*[1-9]|0)(0*)/)[1];
  const o4 = e2.div(r3).toString();
  return r3.length === 1 ? e2 = o4 : e2 = o4 + "." + n5, i4 && (e2 = "-" + e2), e2;
}
function be(e2, t) {
  t == null && (t = 0);
  const r3 = xi(t);
  (typeof e2 != "string" || !e2.match(/^-?[0-9.]+$/)) && Ht.throwArgumentError("invalid decimal value", "value", e2);
  const i4 = e2.substring(0, 1) === "-";
  i4 && (e2 = e2.substring(1)), e2 === "." && Ht.throwArgumentError("missing value", "value", e2);
  const n5 = e2.split(".");
  n5.length > 2 && Ht.throwArgumentError("too many decimal points", "value", e2);
  let o4 = n5[0], h5 = n5[1];
  for (o4 || (o4 = "0"), h5 || (h5 = "0"); h5[h5.length - 1] === "0"; ) h5 = h5.substring(0, h5.length - 1);
  for (h5.length > r3.length - 1 && Wn("fractional component exceeds decimals", "underflow", "parseFixed"), h5 === "" && (h5 = "0"); h5.length < r3.length - 1; ) h5 += "0";
  const p3 = V.from(o4), A3 = V.from(h5);
  let m2 = p3.mul(r3).add(A3);
  return i4 && (m2 = m2.mul(Vn)), m2;
}
var dr = class _dr {
  constructor(t, r3, i4, n5) {
    t !== mr && Ht.throwError("cannot use FixedFormat constructor; use FixedFormat.from", L2.errors.UNSUPPORTED_OPERATION, { operation: "new FixedFormat" }), this.signed = r3, this.width = i4, this.decimals = n5, this.name = (r3 ? "" : "u") + "fixed" + String(i4) + "x" + String(n5), this._multiplier = xi(n5), Object.freeze(this);
  }
  static from(t) {
    if (t instanceof _dr) return t;
    typeof t == "number" && (t = `fixed128x${t}`);
    let r3 = true, i4 = 128, n5 = 18;
    if (typeof t == "string") {
      if (t !== "fixed") if (t === "ufixed") r3 = false;
      else {
        const o4 = t.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
        o4 || Ht.throwArgumentError("invalid fixed format", "format", t), r3 = o4[1] !== "u", i4 = parseInt(o4[2]), n5 = parseInt(o4[3]);
      }
    } else if (t) {
      const o4 = (h5, p3, A3) => t[h5] == null ? A3 : (typeof t[h5] !== p3 && Ht.throwArgumentError("invalid fixed format (" + h5 + " not " + p3 + ")", "format." + h5, t[h5]), t[h5]);
      r3 = o4("signed", "boolean", r3), i4 = o4("width", "number", i4), n5 = o4("decimals", "number", n5);
    }
    return i4 % 8 && Ht.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", i4), n5 > 80 && Ht.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", n5), new _dr(mr, r3, i4, n5);
  }
};
var Ut = class _Ut {
  constructor(t, r3, i4, n5) {
    t !== mr && Ht.throwError("cannot use FixedNumber constructor; use FixedNumber.from", L2.errors.UNSUPPORTED_OPERATION, { operation: "new FixedFormat" }), this.format = n5, this._hex = r3, this._value = i4, this._isFixedNumber = true, Object.freeze(this);
  }
  _checkFormat(t) {
    this.format.name !== t.format.name && Ht.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", t);
  }
  addUnsafe(t) {
    this._checkFormat(t);
    const r3 = be(this._value, this.format.decimals), i4 = be(t._value, t.format.decimals);
    return _Ut.fromValue(r3.add(i4), this.format.decimals, this.format);
  }
  subUnsafe(t) {
    this._checkFormat(t);
    const r3 = be(this._value, this.format.decimals), i4 = be(t._value, t.format.decimals);
    return _Ut.fromValue(r3.sub(i4), this.format.decimals, this.format);
  }
  mulUnsafe(t) {
    this._checkFormat(t);
    const r3 = be(this._value, this.format.decimals), i4 = be(t._value, t.format.decimals);
    return _Ut.fromValue(r3.mul(i4).div(this.format._multiplier), this.format.decimals, this.format);
  }
  divUnsafe(t) {
    this._checkFormat(t);
    const r3 = be(this._value, this.format.decimals), i4 = be(t._value, t.format.decimals);
    return _Ut.fromValue(r3.mul(this.format._multiplier).div(i4), this.format.decimals, this.format);
  }
  floor() {
    const t = this.toString().split(".");
    t.length === 1 && t.push("0");
    let r3 = _Ut.from(t[0], this.format);
    const i4 = !t[1].match(/^(0*)$/);
    return this.isNegative() && i4 && (r3 = r3.subUnsafe(Xn.toFormat(r3.format))), r3;
  }
  ceiling() {
    const t = this.toString().split(".");
    t.length === 1 && t.push("0");
    let r3 = _Ut.from(t[0], this.format);
    const i4 = !t[1].match(/^(0*)$/);
    return !this.isNegative() && i4 && (r3 = r3.addUnsafe(Xn.toFormat(r3.format))), r3;
  }
  round(t) {
    t == null && (t = 0);
    const r3 = this.toString().split(".");
    if (r3.length === 1 && r3.push("0"), (t < 0 || t > 80 || t % 1) && Ht.throwArgumentError("invalid decimal count", "decimals", t), r3[1].length <= t) return this;
    const i4 = _Ut.from("1" + gr.substring(0, t), this.format), n5 = ks.toFormat(this.format);
    return this.mulUnsafe(i4).addUnsafe(n5).floor().divUnsafe(i4);
  }
  isZero() {
    return this._value === "0.0" || this._value === "0";
  }
  isNegative() {
    return this._value[0] === "-";
  }
  toString() {
    return this._value;
  }
  toHexString(t) {
    if (t == null) return this._hex;
    t % 8 && Ht.throwArgumentError("invalid byte width", "width", t);
    const r3 = V.from(this._hex).fromTwos(this.format.width).toTwos(t).toHexString();
    return oe(r3, t / 8);
  }
  toUnsafeFloat() {
    return parseFloat(this.toString());
  }
  toFormat(t) {
    return _Ut.fromString(this._value, t);
  }
  static fromValue(t, r3, i4) {
    return i4 == null && r3 != null && !Ts(r3) && (i4 = r3, r3 = null), r3 == null && (r3 = 0), i4 == null && (i4 = "fixed"), _Ut.fromString(Mi(t, r3), dr.from(i4));
  }
  static fromString(t, r3) {
    r3 == null && (r3 = "fixed");
    const i4 = dr.from(r3), n5 = be(t, i4.decimals);
    !i4.signed && n5.lt(Yn) && Wn("unsigned value cannot be negative", "overflow", "value", t);
    let o4 = null;
    i4.signed ? o4 = n5.toTwos(i4.width).toHexString() : (o4 = n5.toHexString(), o4 = oe(o4, i4.width / 8));
    const h5 = Mi(n5, i4.decimals);
    return new _Ut(mr, o4, h5, i4);
  }
  static fromBytes(t, r3) {
    r3 == null && (r3 = "fixed");
    const i4 = dr.from(r3);
    if (Ot(t).length > i4.width / 8) throw new Error("overflow");
    let n5 = V.from(t);
    i4.signed && (n5 = n5.fromTwos(i4.width));
    const o4 = n5.toTwos((i4.signed ? 0 : 1) + i4.width).toHexString(), h5 = Mi(n5, i4.decimals);
    return new _Ut(mr, o4, h5, i4);
  }
  static from(t, r3) {
    if (typeof t == "string") return _Ut.fromString(t, r3);
    if (ir(t)) return _Ut.fromBytes(t, r3);
    try {
      return _Ut.fromValue(t, 0, r3);
    } catch (i4) {
      if (i4.code !== L2.errors.INVALID_ARGUMENT) throw i4;
    }
    return Ht.throwArgumentError("invalid FixedNumber value", "value", t);
  }
  static isFixedNumber(t) {
    return !!(t && t._isFixedNumber);
  }
};
var Xn = Ut.from(1);
var ks = Ut.from("0.5");
var qs = "strings/5.7.0";
var Zn = new L2(qs);
var Or;
(function(e2) {
  e2.current = "", e2.NFC = "NFC", e2.NFD = "NFD", e2.NFKC = "NFKC", e2.NFKD = "NFKD";
})(Or || (Or = {}));
var nr;
(function(e2) {
  e2.UNEXPECTED_CONTINUE = "unexpected continuation byte", e2.BAD_PREFIX = "bad codepoint prefix", e2.OVERRUN = "string overrun", e2.MISSING_CONTINUE = "missing continuation byte", e2.OUT_OF_RANGE = "out of UTF-8 range", e2.UTF16_SURROGATE = "UTF-16 surrogate", e2.OVERLONG = "overlong representation";
})(nr || (nr = {}));
function Ks(e2, t, r3, i4, n5) {
  return Zn.throwArgumentError(`invalid codepoint at offset ${t}; ${e2}`, "bytes", r3);
}
function $n(e2, t, r3, i4, n5) {
  if (e2 === nr.BAD_PREFIX || e2 === nr.UNEXPECTED_CONTINUE) {
    let o4 = 0;
    for (let h5 = t + 1; h5 < r3.length && r3[h5] >> 6 === 2; h5++) o4++;
    return o4;
  }
  return e2 === nr.OVERRUN ? r3.length - t - 1 : 0;
}
function Hs(e2, t, r3, i4, n5) {
  return e2 === nr.OVERLONG ? (i4.push(n5), 0) : (i4.push(65533), $n(e2, t, r3));
}
Object.freeze({ error: Ks, ignore: $n, replace: Hs });
function Ei(e2, t = Or.current) {
  t != Or.current && (Zn.checkNormalize(), e2 = e2.normalize(t));
  let r3 = [];
  for (let i4 = 0; i4 < e2.length; i4++) {
    const n5 = e2.charCodeAt(i4);
    if (n5 < 128) r3.push(n5);
    else if (n5 < 2048) r3.push(n5 >> 6 | 192), r3.push(n5 & 63 | 128);
    else if ((n5 & 64512) == 55296) {
      i4++;
      const o4 = e2.charCodeAt(i4);
      if (i4 >= e2.length || (o4 & 64512) !== 56320) throw new Error("invalid utf-8 string");
      const h5 = 65536 + ((n5 & 1023) << 10) + (o4 & 1023);
      r3.push(h5 >> 18 | 240), r3.push(h5 >> 12 & 63 | 128), r3.push(h5 >> 6 & 63 | 128), r3.push(h5 & 63 | 128);
    } else r3.push(n5 >> 12 | 224), r3.push(n5 >> 6 & 63 | 128), r3.push(n5 & 63 | 128);
  }
  return Ot(r3);
}
function zs(e2) {
  if (e2.length % 4 !== 0) throw new Error("bad data");
  let t = [];
  for (let r3 = 0; r3 < e2.length; r3 += 4) t.push(parseInt(e2.substring(r3, r3 + 4), 16));
  return t;
}
function Si(e2, t) {
  t || (t = function(n5) {
    return [parseInt(n5, 16)];
  });
  let r3 = 0, i4 = {};
  return e2.split(",").forEach((n5) => {
    let o4 = n5.split(":");
    r3 += parseInt(o4[0], 16), i4[r3] = t(o4[1]);
  }), i4;
}
function tf(e2) {
  let t = 0;
  return e2.split(",").map((r3) => {
    let i4 = r3.split("-");
    i4.length === 1 ? i4[1] = "0" : i4[1] === "" && (i4[1] = "1");
    let n5 = t + parseInt(i4[0], 16);
    return t = parseInt(i4[1], 16), { l: n5, h: t };
  });
}
tf("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"), "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map((e2) => parseInt(e2, 16)), Si("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"), Si("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"), Si("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", zs), tf("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");
var ef = "hash/5.7.0";
function Ls(e2) {
  e2 = atob(e2);
  const t = [];
  for (let r3 = 0; r3 < e2.length; r3++) t.push(e2.charCodeAt(r3));
  return Ot(t);
}
function rf(e2, t) {
  t == null && (t = 1);
  const r3 = [], i4 = r3.forEach, n5 = function(o4, h5) {
    i4.call(o4, function(p3) {
      h5 > 0 && Array.isArray(p3) ? n5(p3, h5 - 1) : r3.push(p3);
    });
  };
  return n5(e2, t), r3;
}
function js(e2) {
  const t = {};
  for (let r3 = 0; r3 < e2.length; r3++) {
    const i4 = e2[r3];
    t[i4[0]] = i4[1];
  }
  return t;
}
function Qs(e2) {
  let t = 0;
  function r3() {
    return e2[t++] << 8 | e2[t++];
  }
  let i4 = r3(), n5 = 1, o4 = [0, 1];
  for (let H = 1; H < i4; H++) o4.push(n5 += r3());
  let h5 = r3(), p3 = t;
  t += h5;
  let A3 = 0, m2 = 0;
  function w4() {
    return A3 == 0 && (m2 = m2 << 8 | e2[t++], A3 = 8), m2 >> --A3 & 1;
  }
  const y6 = 31, S6 = Math.pow(2, y6), I3 = S6 >>> 1, N10 = I3 >> 1, C4 = S6 - 1;
  let F2 = 0;
  for (let H = 0; H < y6; H++) F2 = F2 << 1 | w4();
  let U2 = [], J2 = 0, Bt2 = S6;
  for (; ; ) {
    let H = Math.floor(((F2 - J2 + 1) * n5 - 1) / Bt2), z3 = 0, Pt2 = i4;
    for (; Pt2 - z3 > 1; ) {
      let Yt2 = z3 + Pt2 >>> 1;
      H < o4[Yt2] ? Pt2 = Yt2 : z3 = Yt2;
    }
    if (z3 == 0) break;
    U2.push(z3);
    let W2 = J2 + Math.floor(Bt2 * o4[z3] / n5), Rt2 = J2 + Math.floor(Bt2 * o4[z3 + 1] / n5) - 1;
    for (; !((W2 ^ Rt2) & I3); ) F2 = F2 << 1 & C4 | w4(), W2 = W2 << 1 & C4, Rt2 = Rt2 << 1 & C4 | 1;
    for (; W2 & ~Rt2 & N10; ) F2 = F2 & I3 | F2 << 1 & C4 >>> 1 | w4(), W2 = W2 << 1 ^ I3, Rt2 = (Rt2 ^ I3) << 1 | I3 | 1;
    J2 = W2, Bt2 = 1 + Rt2 - W2;
  }
  let G = i4 - 4;
  return U2.map((H) => {
    switch (H - G) {
      case 3:
        return G + 65792 + (e2[p3++] << 16 | e2[p3++] << 8 | e2[p3++]);
      case 2:
        return G + 256 + (e2[p3++] << 8 | e2[p3++]);
      case 1:
        return G + e2[p3++];
      default:
        return H - 1;
    }
  });
}
function Js(e2) {
  let t = 0;
  return () => e2[t++];
}
function Gs(e2) {
  return Js(Qs(e2));
}
function Ys(e2) {
  return e2 & 1 ? ~e2 >> 1 : e2 >> 1;
}
function Vs(e2, t) {
  let r3 = Array(e2);
  for (let i4 = 0; i4 < e2; i4++) r3[i4] = 1 + t();
  return r3;
}
function nf(e2, t) {
  let r3 = Array(e2);
  for (let i4 = 0, n5 = -1; i4 < e2; i4++) r3[i4] = n5 += 1 + t();
  return r3;
}
function Ws(e2, t) {
  let r3 = Array(e2);
  for (let i4 = 0, n5 = 0; i4 < e2; i4++) r3[i4] = n5 += Ys(t());
  return r3;
}
function Pr(e2, t) {
  let r3 = nf(e2(), e2), i4 = e2(), n5 = nf(i4, e2), o4 = Vs(i4, e2);
  for (let h5 = 0; h5 < i4; h5++) for (let p3 = 0; p3 < o4[h5]; p3++) r3.push(n5[h5] + p3);
  return t ? r3.map((h5) => t[h5]) : r3;
}
function Xs(e2) {
  let t = [];
  for (; ; ) {
    let r3 = e2();
    if (r3 == 0) break;
    t.push($s(r3, e2));
  }
  for (; ; ) {
    let r3 = e2() - 1;
    if (r3 < 0) break;
    t.push(t0(r3, e2));
  }
  return js(rf(t));
}
function Zs(e2) {
  let t = [];
  for (; ; ) {
    let r3 = e2();
    if (r3 == 0) break;
    t.push(r3);
  }
  return t;
}
function ff(e2, t, r3) {
  let i4 = Array(e2).fill(void 0).map(() => []);
  for (let n5 = 0; n5 < t; n5++) Ws(e2, r3).forEach((o4, h5) => i4[h5].push(o4));
  return i4;
}
function $s(e2, t) {
  let r3 = 1 + t(), i4 = t(), n5 = Zs(t), o4 = ff(n5.length, 1 + e2, t);
  return rf(o4.map((h5, p3) => {
    const A3 = h5[0], m2 = h5.slice(1);
    return Array(n5[p3]).fill(void 0).map((w4, y6) => {
      let S6 = y6 * i4;
      return [A3 + y6 * r3, m2.map((I3) => I3 + S6)];
    });
  }));
}
function t0(e2, t) {
  let r3 = 1 + t();
  return ff(r3, 1 + e2, t).map((n5) => [n5[0], n5.slice(1)]);
}
function e0(e2) {
  let t = Pr(e2).sort((i4, n5) => i4 - n5);
  return r3();
  function r3() {
    let i4 = [];
    for (; ; ) {
      let m2 = Pr(e2, t);
      if (m2.length == 0) break;
      i4.push({ set: new Set(m2), node: r3() });
    }
    i4.sort((m2, w4) => w4.set.size - m2.set.size);
    let n5 = e2(), o4 = n5 % 3;
    n5 = n5 / 3 | 0;
    let h5 = !!(n5 & 1);
    n5 >>= 1;
    let p3 = n5 == 1, A3 = n5 == 2;
    return { branches: i4, valid: o4, fe0f: h5, save: p3, check: A3 };
  }
}
function r0() {
  return Gs(Ls(""));
}
var Dr = r0();
new Set(Pr(Dr)), new Set(Pr(Dr)), Xs(Dr), e0(Dr), new L2(ef);
var i0 = new Uint8Array(32);
i0.fill(0);
var n0 = `Ethereum Signed Message:
`;
function of(e2) {
  return typeof e2 == "string" && (e2 = Ei(e2)), yi(Cs([Ei(n0), Ei(String(e2.length)), e2]));
}
var f0 = "rlp/5.7.0";
new L2(f0);
var o0 = "address/5.7.0";
var Ar = new L2(o0);
function sf(e2) {
  Qt(e2, 20) || Ar.throwArgumentError("invalid address", "address", e2), e2 = e2.toLowerCase();
  const t = e2.substring(2).split(""), r3 = new Uint8Array(40);
  for (let n5 = 0; n5 < 40; n5++) r3[n5] = t[n5].charCodeAt(0);
  const i4 = Ot(yi(r3));
  for (let n5 = 0; n5 < 40; n5 += 2) i4[n5 >> 1] >> 4 >= 8 && (t[n5] = t[n5].toUpperCase()), (i4[n5 >> 1] & 15) >= 8 && (t[n5 + 1] = t[n5 + 1].toUpperCase());
  return "0x" + t.join("");
}
var s0 = 9007199254740991;
function a0(e2) {
  return Math.log10 ? Math.log10(e2) : Math.log(e2) / Math.LN10;
}
var Ni = {};
for (let e2 = 0; e2 < 10; e2++) Ni[String(e2)] = String(e2);
for (let e2 = 0; e2 < 26; e2++) Ni[String.fromCharCode(65 + e2)] = String(10 + e2);
var af = Math.floor(a0(s0));
function u0(e2) {
  e2 = e2.toUpperCase(), e2 = e2.substring(4) + e2.substring(0, 2) + "00";
  let t = e2.split("").map((i4) => Ni[i4]).join("");
  for (; t.length >= af; ) {
    let i4 = t.substring(0, af);
    t = parseInt(i4, 10) % 97 + t.substring(i4.length);
  }
  let r3 = String(98 - parseInt(t, 10) % 97);
  for (; r3.length < 2; ) r3 = "0" + r3;
  return r3;
}
function h0(e2) {
  let t = null;
  if (typeof e2 != "string" && Ar.throwArgumentError("invalid address", "address", e2), e2.match(/^(0x)?[0-9a-fA-F]{40}$/)) e2.substring(0, 2) !== "0x" && (e2 = "0x" + e2), t = sf(e2), e2.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && t !== e2 && Ar.throwArgumentError("bad address checksum", "address", e2);
  else if (e2.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
    for (e2.substring(2, 4) !== u0(e2) && Ar.throwArgumentError("bad icap checksum", "address", e2), t = Us(e2.substring(4)); t.length < 40; ) t = "0" + t;
    t = sf("0x" + t);
  } else Ar.throwArgumentError("invalid address", "address", e2);
  return t;
}
var c0 = "properties/5.7.0";
new L2(c0);
function br(e2, t, r3) {
  Object.defineProperty(e2, t, { enumerable: true, value: r3, writable: false });
}
new L2(ef);
var l0 = new Uint8Array(32);
l0.fill(0), V.from(-1);
var d0 = V.from(0);
var p0 = V.from(1);
V.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"), oe(p0.toHexString(), 32), oe(d0.toHexString(), 32);
var se = {};
var Q = {};
var yr = uf;
function uf(e2, t) {
  if (!e2) throw new Error(t || "Assertion failed");
}
uf.equal = function(t, r3, i4) {
  if (t != r3) throw new Error(i4 || "Assertion failed: " + t + " != " + r3);
};
var Ii = { exports: {} };
typeof Object.create == "function" ? Ii.exports = function(t, r3) {
  r3 && (t.super_ = r3, t.prototype = Object.create(r3.prototype, { constructor: { value: t, enumerable: false, writable: true, configurable: true } }));
} : Ii.exports = function(t, r3) {
  if (r3) {
    t.super_ = r3;
    var i4 = function() {
    };
    i4.prototype = r3.prototype, t.prototype = new i4(), t.prototype.constructor = t;
  }
};
var v0 = yr;
var m0 = Ii.exports;
Q.inherits = m0;
function g0(e2, t) {
  return (e2.charCodeAt(t) & 64512) !== 55296 || t < 0 || t + 1 >= e2.length ? false : (e2.charCodeAt(t + 1) & 64512) === 56320;
}
function A0(e2, t) {
  if (Array.isArray(e2)) return e2.slice();
  if (!e2) return [];
  var r3 = [];
  if (typeof e2 == "string") if (t) {
    if (t === "hex") for (e2 = e2.replace(/[^a-z0-9]+/ig, ""), e2.length % 2 !== 0 && (e2 = "0" + e2), n5 = 0; n5 < e2.length; n5 += 2) r3.push(parseInt(e2[n5] + e2[n5 + 1], 16));
  } else for (var i4 = 0, n5 = 0; n5 < e2.length; n5++) {
    var o4 = e2.charCodeAt(n5);
    o4 < 128 ? r3[i4++] = o4 : o4 < 2048 ? (r3[i4++] = o4 >> 6 | 192, r3[i4++] = o4 & 63 | 128) : g0(e2, n5) ? (o4 = 65536 + ((o4 & 1023) << 10) + (e2.charCodeAt(++n5) & 1023), r3[i4++] = o4 >> 18 | 240, r3[i4++] = o4 >> 12 & 63 | 128, r3[i4++] = o4 >> 6 & 63 | 128, r3[i4++] = o4 & 63 | 128) : (r3[i4++] = o4 >> 12 | 224, r3[i4++] = o4 >> 6 & 63 | 128, r3[i4++] = o4 & 63 | 128);
  }
  else for (n5 = 0; n5 < e2.length; n5++) r3[n5] = e2[n5] | 0;
  return r3;
}
Q.toArray = A0;
function b0(e2) {
  for (var t = "", r3 = 0; r3 < e2.length; r3++) t += cf(e2[r3].toString(16));
  return t;
}
Q.toHex = b0;
function hf(e2) {
  var t = e2 >>> 24 | e2 >>> 8 & 65280 | e2 << 8 & 16711680 | (e2 & 255) << 24;
  return t >>> 0;
}
Q.htonl = hf;
function y0(e2, t) {
  for (var r3 = "", i4 = 0; i4 < e2.length; i4++) {
    var n5 = e2[i4];
    t === "little" && (n5 = hf(n5)), r3 += lf(n5.toString(16));
  }
  return r3;
}
Q.toHex32 = y0;
function cf(e2) {
  return e2.length === 1 ? "0" + e2 : e2;
}
Q.zero2 = cf;
function lf(e2) {
  return e2.length === 7 ? "0" + e2 : e2.length === 6 ? "00" + e2 : e2.length === 5 ? "000" + e2 : e2.length === 4 ? "0000" + e2 : e2.length === 3 ? "00000" + e2 : e2.length === 2 ? "000000" + e2 : e2.length === 1 ? "0000000" + e2 : e2;
}
Q.zero8 = lf;
function w0(e2, t, r3, i4) {
  var n5 = r3 - t;
  v0(n5 % 4 === 0);
  for (var o4 = new Array(n5 / 4), h5 = 0, p3 = t; h5 < o4.length; h5++, p3 += 4) {
    var A3;
    i4 === "big" ? A3 = e2[p3] << 24 | e2[p3 + 1] << 16 | e2[p3 + 2] << 8 | e2[p3 + 3] : A3 = e2[p3 + 3] << 24 | e2[p3 + 2] << 16 | e2[p3 + 1] << 8 | e2[p3], o4[h5] = A3 >>> 0;
  }
  return o4;
}
Q.join32 = w0;
function x0(e2, t) {
  for (var r3 = new Array(e2.length * 4), i4 = 0, n5 = 0; i4 < e2.length; i4++, n5 += 4) {
    var o4 = e2[i4];
    t === "big" ? (r3[n5] = o4 >>> 24, r3[n5 + 1] = o4 >>> 16 & 255, r3[n5 + 2] = o4 >>> 8 & 255, r3[n5 + 3] = o4 & 255) : (r3[n5 + 3] = o4 >>> 24, r3[n5 + 2] = o4 >>> 16 & 255, r3[n5 + 1] = o4 >>> 8 & 255, r3[n5] = o4 & 255);
  }
  return r3;
}
Q.split32 = x0;
function M0(e2, t) {
  return e2 >>> t | e2 << 32 - t;
}
Q.rotr32 = M0;
function E0(e2, t) {
  return e2 << t | e2 >>> 32 - t;
}
Q.rotl32 = E0;
function S0(e2, t) {
  return e2 + t >>> 0;
}
Q.sum32 = S0;
function N0(e2, t, r3) {
  return e2 + t + r3 >>> 0;
}
Q.sum32_3 = N0;
function I0(e2, t, r3, i4) {
  return e2 + t + r3 + i4 >>> 0;
}
Q.sum32_4 = I0;
function _0(e2, t, r3, i4, n5) {
  return e2 + t + r3 + i4 + n5 >>> 0;
}
Q.sum32_5 = _0;
function B0(e2, t, r3, i4) {
  var n5 = e2[t], o4 = e2[t + 1], h5 = i4 + o4 >>> 0, p3 = (h5 < i4 ? 1 : 0) + r3 + n5;
  e2[t] = p3 >>> 0, e2[t + 1] = h5;
}
Q.sum64 = B0;
function C0(e2, t, r3, i4) {
  var n5 = t + i4 >>> 0, o4 = (n5 < t ? 1 : 0) + e2 + r3;
  return o4 >>> 0;
}
Q.sum64_hi = C0;
function R0(e2, t, r3, i4) {
  var n5 = t + i4;
  return n5 >>> 0;
}
Q.sum64_lo = R0;
function O0(e2, t, r3, i4, n5, o4, h5, p3) {
  var A3 = 0, m2 = t;
  m2 = m2 + i4 >>> 0, A3 += m2 < t ? 1 : 0, m2 = m2 + o4 >>> 0, A3 += m2 < o4 ? 1 : 0, m2 = m2 + p3 >>> 0, A3 += m2 < p3 ? 1 : 0;
  var w4 = e2 + r3 + n5 + h5 + A3;
  return w4 >>> 0;
}
Q.sum64_4_hi = O0;
function P0(e2, t, r3, i4, n5, o4, h5, p3) {
  var A3 = t + i4 + o4 + p3;
  return A3 >>> 0;
}
Q.sum64_4_lo = P0;
function D0(e2, t, r3, i4, n5, o4, h5, p3, A3, m2) {
  var w4 = 0, y6 = t;
  y6 = y6 + i4 >>> 0, w4 += y6 < t ? 1 : 0, y6 = y6 + o4 >>> 0, w4 += y6 < o4 ? 1 : 0, y6 = y6 + p3 >>> 0, w4 += y6 < p3 ? 1 : 0, y6 = y6 + m2 >>> 0, w4 += y6 < m2 ? 1 : 0;
  var S6 = e2 + r3 + n5 + h5 + A3 + w4;
  return S6 >>> 0;
}
Q.sum64_5_hi = D0;
function F0(e2, t, r3, i4, n5, o4, h5, p3, A3, m2) {
  var w4 = t + i4 + o4 + p3 + m2;
  return w4 >>> 0;
}
Q.sum64_5_lo = F0;
function T0(e2, t, r3) {
  var i4 = t << 32 - r3 | e2 >>> r3;
  return i4 >>> 0;
}
Q.rotr64_hi = T0;
function U0(e2, t, r3) {
  var i4 = e2 << 32 - r3 | t >>> r3;
  return i4 >>> 0;
}
Q.rotr64_lo = U0;
function k0(e2, t, r3) {
  return e2 >>> r3;
}
Q.shr64_hi = k0;
function q0(e2, t, r3) {
  var i4 = e2 << 32 - r3 | t >>> r3;
  return i4 >>> 0;
}
Q.shr64_lo = q0;
var fr = {};
var df = Q;
var K0 = yr;
function Fr() {
  this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
}
fr.BlockHash = Fr, Fr.prototype.update = function(t, r3) {
  if (t = df.toArray(t, r3), this.pending ? this.pending = this.pending.concat(t) : this.pending = t, this.pendingTotal += t.length, this.pending.length >= this._delta8) {
    t = this.pending;
    var i4 = t.length % this._delta8;
    this.pending = t.slice(t.length - i4, t.length), this.pending.length === 0 && (this.pending = null), t = df.join32(t, 0, t.length - i4, this.endian);
    for (var n5 = 0; n5 < t.length; n5 += this._delta32) this._update(t, n5, n5 + this._delta32);
  }
  return this;
}, Fr.prototype.digest = function(t) {
  return this.update(this._pad()), K0(this.pending === null), this._digest(t);
}, Fr.prototype._pad = function() {
  var t = this.pendingTotal, r3 = this._delta8, i4 = r3 - (t + this.padLength) % r3, n5 = new Array(i4 + this.padLength);
  n5[0] = 128;
  for (var o4 = 1; o4 < i4; o4++) n5[o4] = 0;
  if (t <<= 3, this.endian === "big") {
    for (var h5 = 8; h5 < this.padLength; h5++) n5[o4++] = 0;
    n5[o4++] = 0, n5[o4++] = 0, n5[o4++] = 0, n5[o4++] = 0, n5[o4++] = t >>> 24 & 255, n5[o4++] = t >>> 16 & 255, n5[o4++] = t >>> 8 & 255, n5[o4++] = t & 255;
  } else for (n5[o4++] = t & 255, n5[o4++] = t >>> 8 & 255, n5[o4++] = t >>> 16 & 255, n5[o4++] = t >>> 24 & 255, n5[o4++] = 0, n5[o4++] = 0, n5[o4++] = 0, n5[o4++] = 0, h5 = 8; h5 < this.padLength; h5++) n5[o4++] = 0;
  return n5;
};
var or2 = {};
var ae = {};
var H0 = Q;
var ue = H0.rotr32;
function z0(e2, t, r3, i4) {
  if (e2 === 0) return pf(t, r3, i4);
  if (e2 === 1 || e2 === 3) return mf(t, r3, i4);
  if (e2 === 2) return vf(t, r3, i4);
}
ae.ft_1 = z0;
function pf(e2, t, r3) {
  return e2 & t ^ ~e2 & r3;
}
ae.ch32 = pf;
function vf(e2, t, r3) {
  return e2 & t ^ e2 & r3 ^ t & r3;
}
ae.maj32 = vf;
function mf(e2, t, r3) {
  return e2 ^ t ^ r3;
}
ae.p32 = mf;
function L0(e2) {
  return ue(e2, 2) ^ ue(e2, 13) ^ ue(e2, 22);
}
ae.s0_256 = L0;
function j0(e2) {
  return ue(e2, 6) ^ ue(e2, 11) ^ ue(e2, 25);
}
ae.s1_256 = j0;
function Q0(e2) {
  return ue(e2, 7) ^ ue(e2, 18) ^ e2 >>> 3;
}
ae.g0_256 = Q0;
function J0(e2) {
  return ue(e2, 17) ^ ue(e2, 19) ^ e2 >>> 10;
}
ae.g1_256 = J0;
var sr = Q;
var G0 = fr;
var Y0 = ae;
var _i = sr.rotl32;
var wr = sr.sum32;
var V0 = sr.sum32_5;
var W0 = Y0.ft_1;
var gf = G0.BlockHash;
var X0 = [1518500249, 1859775393, 2400959708, 3395469782];
function he() {
  if (!(this instanceof he)) return new he();
  gf.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.W = new Array(80);
}
sr.inherits(he, gf);
var Z0 = he;
he.blockSize = 512, he.outSize = 160, he.hmacStrength = 80, he.padLength = 64, he.prototype._update = function(t, r3) {
  for (var i4 = this.W, n5 = 0; n5 < 16; n5++) i4[n5] = t[r3 + n5];
  for (; n5 < i4.length; n5++) i4[n5] = _i(i4[n5 - 3] ^ i4[n5 - 8] ^ i4[n5 - 14] ^ i4[n5 - 16], 1);
  var o4 = this.h[0], h5 = this.h[1], p3 = this.h[2], A3 = this.h[3], m2 = this.h[4];
  for (n5 = 0; n5 < i4.length; n5++) {
    var w4 = ~~(n5 / 20), y6 = V0(_i(o4, 5), W0(w4, h5, p3, A3), m2, i4[n5], X0[w4]);
    m2 = A3, A3 = p3, p3 = _i(h5, 30), h5 = o4, o4 = y6;
  }
  this.h[0] = wr(this.h[0], o4), this.h[1] = wr(this.h[1], h5), this.h[2] = wr(this.h[2], p3), this.h[3] = wr(this.h[3], A3), this.h[4] = wr(this.h[4], m2);
}, he.prototype._digest = function(t) {
  return t === "hex" ? sr.toHex32(this.h, "big") : sr.split32(this.h, "big");
};
var ar = Q;
var $0 = fr;
var ur = ae;
var ta = yr;
var ie = ar.sum32;
var ea = ar.sum32_4;
var ra = ar.sum32_5;
var ia = ur.ch32;
var na = ur.maj32;
var fa = ur.s0_256;
var oa = ur.s1_256;
var sa = ur.g0_256;
var aa = ur.g1_256;
var Af = $0.BlockHash;
var ua = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
function ce() {
  if (!(this instanceof ce)) return new ce();
  Af.call(this), this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], this.k = ua, this.W = new Array(64);
}
ar.inherits(ce, Af);
var bf = ce;
ce.blockSize = 512, ce.outSize = 256, ce.hmacStrength = 192, ce.padLength = 64, ce.prototype._update = function(t, r3) {
  for (var i4 = this.W, n5 = 0; n5 < 16; n5++) i4[n5] = t[r3 + n5];
  for (; n5 < i4.length; n5++) i4[n5] = ea(aa(i4[n5 - 2]), i4[n5 - 7], sa(i4[n5 - 15]), i4[n5 - 16]);
  var o4 = this.h[0], h5 = this.h[1], p3 = this.h[2], A3 = this.h[3], m2 = this.h[4], w4 = this.h[5], y6 = this.h[6], S6 = this.h[7];
  for (ta(this.k.length === i4.length), n5 = 0; n5 < i4.length; n5++) {
    var I3 = ra(S6, oa(m2), ia(m2, w4, y6), this.k[n5], i4[n5]), N10 = ie(fa(o4), na(o4, h5, p3));
    S6 = y6, y6 = w4, w4 = m2, m2 = ie(A3, I3), A3 = p3, p3 = h5, h5 = o4, o4 = ie(I3, N10);
  }
  this.h[0] = ie(this.h[0], o4), this.h[1] = ie(this.h[1], h5), this.h[2] = ie(this.h[2], p3), this.h[3] = ie(this.h[3], A3), this.h[4] = ie(this.h[4], m2), this.h[5] = ie(this.h[5], w4), this.h[6] = ie(this.h[6], y6), this.h[7] = ie(this.h[7], S6);
}, ce.prototype._digest = function(t) {
  return t === "hex" ? ar.toHex32(this.h, "big") : ar.split32(this.h, "big");
};
var Bi = Q;
var yf = bf;
function ye() {
  if (!(this instanceof ye)) return new ye();
  yf.call(this), this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428];
}
Bi.inherits(ye, yf);
var ha = ye;
ye.blockSize = 512, ye.outSize = 224, ye.hmacStrength = 192, ye.padLength = 64, ye.prototype._digest = function(t) {
  return t === "hex" ? Bi.toHex32(this.h.slice(0, 7), "big") : Bi.split32(this.h.slice(0, 7), "big");
};
var jt = Q;
var ca = fr;
var la = yr;
var le = jt.rotr64_hi;
var de = jt.rotr64_lo;
var wf = jt.shr64_hi;
var xf = jt.shr64_lo;
var Be = jt.sum64;
var Ci = jt.sum64_hi;
var Ri = jt.sum64_lo;
var da = jt.sum64_4_hi;
var pa = jt.sum64_4_lo;
var va = jt.sum64_5_hi;
var ma = jt.sum64_5_lo;
var Mf = ca.BlockHash;
var ga = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
function ne() {
  if (!(this instanceof ne)) return new ne();
  Mf.call(this), this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209], this.k = ga, this.W = new Array(160);
}
jt.inherits(ne, Mf);
var Ef = ne;
ne.blockSize = 1024, ne.outSize = 512, ne.hmacStrength = 192, ne.padLength = 128, ne.prototype._prepareBlock = function(t, r3) {
  for (var i4 = this.W, n5 = 0; n5 < 32; n5++) i4[n5] = t[r3 + n5];
  for (; n5 < i4.length; n5 += 2) {
    var o4 = _a(i4[n5 - 4], i4[n5 - 3]), h5 = Ba(i4[n5 - 4], i4[n5 - 3]), p3 = i4[n5 - 14], A3 = i4[n5 - 13], m2 = Na(i4[n5 - 30], i4[n5 - 29]), w4 = Ia(i4[n5 - 30], i4[n5 - 29]), y6 = i4[n5 - 32], S6 = i4[n5 - 31];
    i4[n5] = da(o4, h5, p3, A3, m2, w4, y6, S6), i4[n5 + 1] = pa(o4, h5, p3, A3, m2, w4, y6, S6);
  }
}, ne.prototype._update = function(t, r3) {
  this._prepareBlock(t, r3);
  var i4 = this.W, n5 = this.h[0], o4 = this.h[1], h5 = this.h[2], p3 = this.h[3], A3 = this.h[4], m2 = this.h[5], w4 = this.h[6], y6 = this.h[7], S6 = this.h[8], I3 = this.h[9], N10 = this.h[10], C4 = this.h[11], F2 = this.h[12], U2 = this.h[13], J2 = this.h[14], Bt2 = this.h[15];
  la(this.k.length === i4.length);
  for (var G = 0; G < i4.length; G += 2) {
    var H = J2, z3 = Bt2, Pt2 = Ea(S6, I3), W2 = Sa(S6, I3), Rt2 = Aa(S6, I3, N10, C4, F2), Yt2 = ba(S6, I3, N10, C4, F2, U2), Y2 = this.k[G], Vt2 = this.k[G + 1], b3 = i4[G], f4 = i4[G + 1], a4 = va(H, z3, Pt2, W2, Rt2, Yt2, Y2, Vt2, b3, f4), c5 = ma(H, z3, Pt2, W2, Rt2, Yt2, Y2, Vt2, b3, f4);
    H = xa(n5, o4), z3 = Ma(n5, o4), Pt2 = ya(n5, o4, h5, p3, A3), W2 = wa(n5, o4, h5, p3, A3, m2);
    var d3 = Ci(H, z3, Pt2, W2), g3 = Ri(H, z3, Pt2, W2);
    J2 = F2, Bt2 = U2, F2 = N10, U2 = C4, N10 = S6, C4 = I3, S6 = Ci(w4, y6, a4, c5), I3 = Ri(y6, y6, a4, c5), w4 = A3, y6 = m2, A3 = h5, m2 = p3, h5 = n5, p3 = o4, n5 = Ci(a4, c5, d3, g3), o4 = Ri(a4, c5, d3, g3);
  }
  Be(this.h, 0, n5, o4), Be(this.h, 2, h5, p3), Be(this.h, 4, A3, m2), Be(this.h, 6, w4, y6), Be(this.h, 8, S6, I3), Be(this.h, 10, N10, C4), Be(this.h, 12, F2, U2), Be(this.h, 14, J2, Bt2);
}, ne.prototype._digest = function(t) {
  return t === "hex" ? jt.toHex32(this.h, "big") : jt.split32(this.h, "big");
};
function Aa(e2, t, r3, i4, n5) {
  var o4 = e2 & r3 ^ ~e2 & n5;
  return o4 < 0 && (o4 += 4294967296), o4;
}
function ba(e2, t, r3, i4, n5, o4) {
  var h5 = t & i4 ^ ~t & o4;
  return h5 < 0 && (h5 += 4294967296), h5;
}
function ya(e2, t, r3, i4, n5) {
  var o4 = e2 & r3 ^ e2 & n5 ^ r3 & n5;
  return o4 < 0 && (o4 += 4294967296), o4;
}
function wa(e2, t, r3, i4, n5, o4) {
  var h5 = t & i4 ^ t & o4 ^ i4 & o4;
  return h5 < 0 && (h5 += 4294967296), h5;
}
function xa(e2, t) {
  var r3 = le(e2, t, 28), i4 = le(t, e2, 2), n5 = le(t, e2, 7), o4 = r3 ^ i4 ^ n5;
  return o4 < 0 && (o4 += 4294967296), o4;
}
function Ma(e2, t) {
  var r3 = de(e2, t, 28), i4 = de(t, e2, 2), n5 = de(t, e2, 7), o4 = r3 ^ i4 ^ n5;
  return o4 < 0 && (o4 += 4294967296), o4;
}
function Ea(e2, t) {
  var r3 = le(e2, t, 14), i4 = le(e2, t, 18), n5 = le(t, e2, 9), o4 = r3 ^ i4 ^ n5;
  return o4 < 0 && (o4 += 4294967296), o4;
}
function Sa(e2, t) {
  var r3 = de(e2, t, 14), i4 = de(e2, t, 18), n5 = de(t, e2, 9), o4 = r3 ^ i4 ^ n5;
  return o4 < 0 && (o4 += 4294967296), o4;
}
function Na(e2, t) {
  var r3 = le(e2, t, 1), i4 = le(e2, t, 8), n5 = wf(e2, t, 7), o4 = r3 ^ i4 ^ n5;
  return o4 < 0 && (o4 += 4294967296), o4;
}
function Ia(e2, t) {
  var r3 = de(e2, t, 1), i4 = de(e2, t, 8), n5 = xf(e2, t, 7), o4 = r3 ^ i4 ^ n5;
  return o4 < 0 && (o4 += 4294967296), o4;
}
function _a(e2, t) {
  var r3 = le(e2, t, 19), i4 = le(t, e2, 29), n5 = wf(e2, t, 6), o4 = r3 ^ i4 ^ n5;
  return o4 < 0 && (o4 += 4294967296), o4;
}
function Ba(e2, t) {
  var r3 = de(e2, t, 19), i4 = de(t, e2, 29), n5 = xf(e2, t, 6), o4 = r3 ^ i4 ^ n5;
  return o4 < 0 && (o4 += 4294967296), o4;
}
var Oi = Q;
var Sf = Ef;
function we() {
  if (!(this instanceof we)) return new we();
  Sf.call(this), this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428];
}
Oi.inherits(we, Sf);
var Ca = we;
we.blockSize = 1024, we.outSize = 384, we.hmacStrength = 192, we.padLength = 128, we.prototype._digest = function(t) {
  return t === "hex" ? Oi.toHex32(this.h.slice(0, 12), "big") : Oi.split32(this.h.slice(0, 12), "big");
}, or2.sha1 = Z0, or2.sha224 = ha, or2.sha256 = bf, or2.sha384 = Ca, or2.sha512 = Ef;
var Nf = {};
var Xe = Q;
var Ra = fr;
var Tr = Xe.rotl32;
var If = Xe.sum32;
var xr = Xe.sum32_3;
var _f = Xe.sum32_4;
var Bf = Ra.BlockHash;
function pe() {
  if (!(this instanceof pe)) return new pe();
  Bf.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little";
}
Xe.inherits(pe, Bf), Nf.ripemd160 = pe, pe.blockSize = 512, pe.outSize = 160, pe.hmacStrength = 192, pe.padLength = 64, pe.prototype._update = function(t, r3) {
  for (var i4 = this.h[0], n5 = this.h[1], o4 = this.h[2], h5 = this.h[3], p3 = this.h[4], A3 = i4, m2 = n5, w4 = o4, y6 = h5, S6 = p3, I3 = 0; I3 < 80; I3++) {
    var N10 = If(Tr(_f(i4, Cf(I3, n5, o4, h5), t[Da[I3] + r3], Oa(I3)), Ta[I3]), p3);
    i4 = p3, p3 = h5, h5 = Tr(o4, 10), o4 = n5, n5 = N10, N10 = If(Tr(_f(A3, Cf(79 - I3, m2, w4, y6), t[Fa[I3] + r3], Pa(I3)), Ua[I3]), S6), A3 = S6, S6 = y6, y6 = Tr(w4, 10), w4 = m2, m2 = N10;
  }
  N10 = xr(this.h[1], o4, y6), this.h[1] = xr(this.h[2], h5, S6), this.h[2] = xr(this.h[3], p3, A3), this.h[3] = xr(this.h[4], i4, m2), this.h[4] = xr(this.h[0], n5, w4), this.h[0] = N10;
}, pe.prototype._digest = function(t) {
  return t === "hex" ? Xe.toHex32(this.h, "little") : Xe.split32(this.h, "little");
};
function Cf(e2, t, r3, i4) {
  return e2 <= 15 ? t ^ r3 ^ i4 : e2 <= 31 ? t & r3 | ~t & i4 : e2 <= 47 ? (t | ~r3) ^ i4 : e2 <= 63 ? t & i4 | r3 & ~i4 : t ^ (r3 | ~i4);
}
function Oa(e2) {
  return e2 <= 15 ? 0 : e2 <= 31 ? 1518500249 : e2 <= 47 ? 1859775393 : e2 <= 63 ? 2400959708 : 2840853838;
}
function Pa(e2) {
  return e2 <= 15 ? 1352829926 : e2 <= 31 ? 1548603684 : e2 <= 47 ? 1836072691 : e2 <= 63 ? 2053994217 : 0;
}
var Da = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];
var Fa = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];
var Ta = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];
var Ua = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];
var ka = Q;
var qa = yr;
function hr(e2, t, r3) {
  if (!(this instanceof hr)) return new hr(e2, t, r3);
  this.Hash = e2, this.blockSize = e2.blockSize / 8, this.outSize = e2.outSize / 8, this.inner = null, this.outer = null, this._init(ka.toArray(t, r3));
}
var Ka = hr;
hr.prototype._init = function(t) {
  t.length > this.blockSize && (t = new this.Hash().update(t).digest()), qa(t.length <= this.blockSize);
  for (var r3 = t.length; r3 < this.blockSize; r3++) t.push(0);
  for (r3 = 0; r3 < t.length; r3++) t[r3] ^= 54;
  for (this.inner = new this.Hash().update(t), r3 = 0; r3 < t.length; r3++) t[r3] ^= 106;
  this.outer = new this.Hash().update(t);
}, hr.prototype.update = function(t, r3) {
  return this.inner.update(t, r3), this;
}, hr.prototype.digest = function(t) {
  return this.outer.update(this.inner.digest()), this.outer.digest(t);
}, function(e2) {
  var t = e2;
  t.utils = Q, t.common = fr, t.sha = or2, t.ripemd = Nf, t.hmac = Ka, t.sha1 = t.sha.sha1, t.sha256 = t.sha.sha256, t.sha224 = t.sha.sha224, t.sha384 = t.sha.sha384, t.sha512 = t.sha.sha512, t.ripemd160 = t.ripemd.ripemd160;
}(se);
function cr(e2, t, r3) {
  return r3 = { path: t, exports: {}, require: function(i4, n5) {
    return Ha(i4, n5 ?? r3.path);
  } }, e2(r3, r3.exports), r3.exports;
}
function Ha() {
  throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
}
var Pi = Rf;
function Rf(e2, t) {
  if (!e2) throw new Error(t || "Assertion failed");
}
Rf.equal = function(t, r3, i4) {
  if (t != r3) throw new Error(i4 || "Assertion failed: " + t + " != " + r3);
};
var fe = cr(function(e2, t) {
  var r3 = t;
  function i4(h5, p3) {
    if (Array.isArray(h5)) return h5.slice();
    if (!h5) return [];
    var A3 = [];
    if (typeof h5 != "string") {
      for (var m2 = 0; m2 < h5.length; m2++) A3[m2] = h5[m2] | 0;
      return A3;
    }
    if (p3 === "hex") {
      h5 = h5.replace(/[^a-z0-9]+/ig, ""), h5.length % 2 !== 0 && (h5 = "0" + h5);
      for (var m2 = 0; m2 < h5.length; m2 += 2) A3.push(parseInt(h5[m2] + h5[m2 + 1], 16));
    } else for (var m2 = 0; m2 < h5.length; m2++) {
      var w4 = h5.charCodeAt(m2), y6 = w4 >> 8, S6 = w4 & 255;
      y6 ? A3.push(y6, S6) : A3.push(S6);
    }
    return A3;
  }
  r3.toArray = i4;
  function n5(h5) {
    return h5.length === 1 ? "0" + h5 : h5;
  }
  r3.zero2 = n5;
  function o4(h5) {
    for (var p3 = "", A3 = 0; A3 < h5.length; A3++) p3 += n5(h5[A3].toString(16));
    return p3;
  }
  r3.toHex = o4, r3.encode = function(p3, A3) {
    return A3 === "hex" ? o4(p3) : p3;
  };
});
var Jt = cr(function(e2, t) {
  var r3 = t;
  r3.assert = Pi, r3.toArray = fe.toArray, r3.zero2 = fe.zero2, r3.toHex = fe.toHex, r3.encode = fe.encode;
  function i4(A3, m2, w4) {
    var y6 = new Array(Math.max(A3.bitLength(), w4) + 1);
    y6.fill(0);
    for (var S6 = 1 << m2 + 1, I3 = A3.clone(), N10 = 0; N10 < y6.length; N10++) {
      var C4, F2 = I3.andln(S6 - 1);
      I3.isOdd() ? (F2 > (S6 >> 1) - 1 ? C4 = (S6 >> 1) - F2 : C4 = F2, I3.isubn(C4)) : C4 = 0, y6[N10] = C4, I3.iushrn(1);
    }
    return y6;
  }
  r3.getNAF = i4;
  function n5(A3, m2) {
    var w4 = [[], []];
    A3 = A3.clone(), m2 = m2.clone();
    for (var y6 = 0, S6 = 0, I3; A3.cmpn(-y6) > 0 || m2.cmpn(-S6) > 0; ) {
      var N10 = A3.andln(3) + y6 & 3, C4 = m2.andln(3) + S6 & 3;
      N10 === 3 && (N10 = -1), C4 === 3 && (C4 = -1);
      var F2;
      N10 & 1 ? (I3 = A3.andln(7) + y6 & 7, (I3 === 3 || I3 === 5) && C4 === 2 ? F2 = -N10 : F2 = N10) : F2 = 0, w4[0].push(F2);
      var U2;
      C4 & 1 ? (I3 = m2.andln(7) + S6 & 7, (I3 === 3 || I3 === 5) && N10 === 2 ? U2 = -C4 : U2 = C4) : U2 = 0, w4[1].push(U2), 2 * y6 === F2 + 1 && (y6 = 1 - y6), 2 * S6 === U2 + 1 && (S6 = 1 - S6), A3.iushrn(1), m2.iushrn(1);
    }
    return w4;
  }
  r3.getJSF = n5;
  function o4(A3, m2, w4) {
    var y6 = "_" + m2;
    A3.prototype[m2] = function() {
      return this[y6] !== void 0 ? this[y6] : this[y6] = w4.call(this);
    };
  }
  r3.cachedProperty = o4;
  function h5(A3) {
    return typeof A3 == "string" ? r3.toArray(A3, "hex") : A3;
  }
  r3.parseBytes = h5;
  function p3(A3) {
    return new K2(A3, "hex", "le");
  }
  r3.intFromLE = p3;
});
var Ur = Jt.getNAF;
var za = Jt.getJSF;
var kr = Jt.assert;
function Ce(e2, t) {
  this.type = e2, this.p = new K2(t.p, 16), this.red = t.prime ? K2.red(t.prime) : K2.mont(this.p), this.zero = new K2(0).toRed(this.red), this.one = new K2(1).toRed(this.red), this.two = new K2(2).toRed(this.red), this.n = t.n && new K2(t.n, 16), this.g = t.g && this.pointFromJSON(t.g, t.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
  var r3 = this.n && this.p.div(this.n);
  !r3 || r3.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = true, this.redN = this.n.toRed(this.red));
}
var Ze = Ce;
Ce.prototype.point = function() {
  throw new Error("Not implemented");
}, Ce.prototype.validate = function() {
  throw new Error("Not implemented");
}, Ce.prototype._fixedNafMul = function(t, r3) {
  kr(t.precomputed);
  var i4 = t._getDoubles(), n5 = Ur(r3, 1, this._bitLength), o4 = (1 << i4.step + 1) - (i4.step % 2 === 0 ? 2 : 1);
  o4 /= 3;
  var h5 = [], p3, A3;
  for (p3 = 0; p3 < n5.length; p3 += i4.step) {
    A3 = 0;
    for (var m2 = p3 + i4.step - 1; m2 >= p3; m2--) A3 = (A3 << 1) + n5[m2];
    h5.push(A3);
  }
  for (var w4 = this.jpoint(null, null, null), y6 = this.jpoint(null, null, null), S6 = o4; S6 > 0; S6--) {
    for (p3 = 0; p3 < h5.length; p3++) A3 = h5[p3], A3 === S6 ? y6 = y6.mixedAdd(i4.points[p3]) : A3 === -S6 && (y6 = y6.mixedAdd(i4.points[p3].neg()));
    w4 = w4.add(y6);
  }
  return w4.toP();
}, Ce.prototype._wnafMul = function(t, r3) {
  var i4 = 4, n5 = t._getNAFPoints(i4);
  i4 = n5.wnd;
  for (var o4 = n5.points, h5 = Ur(r3, i4, this._bitLength), p3 = this.jpoint(null, null, null), A3 = h5.length - 1; A3 >= 0; A3--) {
    for (var m2 = 0; A3 >= 0 && h5[A3] === 0; A3--) m2++;
    if (A3 >= 0 && m2++, p3 = p3.dblp(m2), A3 < 0) break;
    var w4 = h5[A3];
    kr(w4 !== 0), t.type === "affine" ? w4 > 0 ? p3 = p3.mixedAdd(o4[w4 - 1 >> 1]) : p3 = p3.mixedAdd(o4[-w4 - 1 >> 1].neg()) : w4 > 0 ? p3 = p3.add(o4[w4 - 1 >> 1]) : p3 = p3.add(o4[-w4 - 1 >> 1].neg());
  }
  return t.type === "affine" ? p3.toP() : p3;
}, Ce.prototype._wnafMulAdd = function(t, r3, i4, n5, o4) {
  var h5 = this._wnafT1, p3 = this._wnafT2, A3 = this._wnafT3, m2 = 0, w4, y6, S6;
  for (w4 = 0; w4 < n5; w4++) {
    S6 = r3[w4];
    var I3 = S6._getNAFPoints(t);
    h5[w4] = I3.wnd, p3[w4] = I3.points;
  }
  for (w4 = n5 - 1; w4 >= 1; w4 -= 2) {
    var N10 = w4 - 1, C4 = w4;
    if (h5[N10] !== 1 || h5[C4] !== 1) {
      A3[N10] = Ur(i4[N10], h5[N10], this._bitLength), A3[C4] = Ur(i4[C4], h5[C4], this._bitLength), m2 = Math.max(A3[N10].length, m2), m2 = Math.max(A3[C4].length, m2);
      continue;
    }
    var F2 = [r3[N10], null, null, r3[C4]];
    r3[N10].y.cmp(r3[C4].y) === 0 ? (F2[1] = r3[N10].add(r3[C4]), F2[2] = r3[N10].toJ().mixedAdd(r3[C4].neg())) : r3[N10].y.cmp(r3[C4].y.redNeg()) === 0 ? (F2[1] = r3[N10].toJ().mixedAdd(r3[C4]), F2[2] = r3[N10].add(r3[C4].neg())) : (F2[1] = r3[N10].toJ().mixedAdd(r3[C4]), F2[2] = r3[N10].toJ().mixedAdd(r3[C4].neg()));
    var U2 = [-3, -1, -5, -7, 0, 7, 5, 1, 3], J2 = za(i4[N10], i4[C4]);
    for (m2 = Math.max(J2[0].length, m2), A3[N10] = new Array(m2), A3[C4] = new Array(m2), y6 = 0; y6 < m2; y6++) {
      var Bt2 = J2[0][y6] | 0, G = J2[1][y6] | 0;
      A3[N10][y6] = U2[(Bt2 + 1) * 3 + (G + 1)], A3[C4][y6] = 0, p3[N10] = F2;
    }
  }
  var H = this.jpoint(null, null, null), z3 = this._wnafT4;
  for (w4 = m2; w4 >= 0; w4--) {
    for (var Pt2 = 0; w4 >= 0; ) {
      var W2 = true;
      for (y6 = 0; y6 < n5; y6++) z3[y6] = A3[y6][w4] | 0, z3[y6] !== 0 && (W2 = false);
      if (!W2) break;
      Pt2++, w4--;
    }
    if (w4 >= 0 && Pt2++, H = H.dblp(Pt2), w4 < 0) break;
    for (y6 = 0; y6 < n5; y6++) {
      var Rt2 = z3[y6];
      Rt2 !== 0 && (Rt2 > 0 ? S6 = p3[y6][Rt2 - 1 >> 1] : Rt2 < 0 && (S6 = p3[y6][-Rt2 - 1 >> 1].neg()), S6.type === "affine" ? H = H.mixedAdd(S6) : H = H.add(S6));
    }
  }
  for (w4 = 0; w4 < n5; w4++) p3[w4] = null;
  return o4 ? H : H.toP();
};
function Xt(e2, t) {
  this.curve = e2, this.type = t, this.precomputed = null;
}
Ce.BasePoint = Xt, Xt.prototype.eq = function() {
  throw new Error("Not implemented");
}, Xt.prototype.validate = function() {
  return this.curve.validate(this);
}, Ce.prototype.decodePoint = function(t, r3) {
  t = Jt.toArray(t, r3);
  var i4 = this.p.byteLength();
  if ((t[0] === 4 || t[0] === 6 || t[0] === 7) && t.length - 1 === 2 * i4) {
    t[0] === 6 ? kr(t[t.length - 1] % 2 === 0) : t[0] === 7 && kr(t[t.length - 1] % 2 === 1);
    var n5 = this.point(t.slice(1, 1 + i4), t.slice(1 + i4, 1 + 2 * i4));
    return n5;
  } else if ((t[0] === 2 || t[0] === 3) && t.length - 1 === i4) return this.pointFromX(t.slice(1, 1 + i4), t[0] === 3);
  throw new Error("Unknown point format");
}, Xt.prototype.encodeCompressed = function(t) {
  return this.encode(t, true);
}, Xt.prototype._encode = function(t) {
  var r3 = this.curve.p.byteLength(), i4 = this.getX().toArray("be", r3);
  return t ? [this.getY().isEven() ? 2 : 3].concat(i4) : [4].concat(i4, this.getY().toArray("be", r3));
}, Xt.prototype.encode = function(t, r3) {
  return Jt.encode(this._encode(r3), t);
}, Xt.prototype.precompute = function(t) {
  if (this.precomputed) return this;
  var r3 = { doubles: null, naf: null, beta: null };
  return r3.naf = this._getNAFPoints(8), r3.doubles = this._getDoubles(4, t), r3.beta = this._getBeta(), this.precomputed = r3, this;
}, Xt.prototype._hasDoubles = function(t) {
  if (!this.precomputed) return false;
  var r3 = this.precomputed.doubles;
  return r3 ? r3.points.length >= Math.ceil((t.bitLength() + 1) / r3.step) : false;
}, Xt.prototype._getDoubles = function(t, r3) {
  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
  for (var i4 = [this], n5 = this, o4 = 0; o4 < r3; o4 += t) {
    for (var h5 = 0; h5 < t; h5++) n5 = n5.dbl();
    i4.push(n5);
  }
  return { step: t, points: i4 };
}, Xt.prototype._getNAFPoints = function(t) {
  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
  for (var r3 = [this], i4 = (1 << t) - 1, n5 = i4 === 1 ? null : this.dbl(), o4 = 1; o4 < i4; o4++) r3[o4] = r3[o4 - 1].add(n5);
  return { wnd: t, points: r3 };
}, Xt.prototype._getBeta = function() {
  return null;
}, Xt.prototype.dblp = function(t) {
  for (var r3 = this, i4 = 0; i4 < t; i4++) r3 = r3.dbl();
  return r3;
};
var Di = cr(function(e2) {
  typeof Object.create == "function" ? e2.exports = function(r3, i4) {
    i4 && (r3.super_ = i4, r3.prototype = Object.create(i4.prototype, { constructor: { value: r3, enumerable: false, writable: true, configurable: true } }));
  } : e2.exports = function(r3, i4) {
    if (i4) {
      r3.super_ = i4;
      var n5 = function() {
      };
      n5.prototype = i4.prototype, r3.prototype = new n5(), r3.prototype.constructor = r3;
    }
  };
});
var La = Jt.assert;
function Zt(e2) {
  Ze.call(this, "short", e2), this.a = new K2(e2.a, 16).toRed(this.red), this.b = new K2(e2.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = this.a.fromRed().cmpn(0) === 0, this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0, this.endo = this._getEndomorphism(e2), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
}
Di(Zt, Ze);
var ja = Zt;
Zt.prototype._getEndomorphism = function(t) {
  if (!(!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)) {
    var r3, i4;
    if (t.beta) r3 = new K2(t.beta, 16).toRed(this.red);
    else {
      var n5 = this._getEndoRoots(this.p);
      r3 = n5[0].cmp(n5[1]) < 0 ? n5[0] : n5[1], r3 = r3.toRed(this.red);
    }
    if (t.lambda) i4 = new K2(t.lambda, 16);
    else {
      var o4 = this._getEndoRoots(this.n);
      this.g.mul(o4[0]).x.cmp(this.g.x.redMul(r3)) === 0 ? i4 = o4[0] : (i4 = o4[1], La(this.g.mul(i4).x.cmp(this.g.x.redMul(r3)) === 0));
    }
    var h5;
    return t.basis ? h5 = t.basis.map(function(p3) {
      return { a: new K2(p3.a, 16), b: new K2(p3.b, 16) };
    }) : h5 = this._getEndoBasis(i4), { beta: r3, lambda: i4, basis: h5 };
  }
}, Zt.prototype._getEndoRoots = function(t) {
  var r3 = t === this.p ? this.red : K2.mont(t), i4 = new K2(2).toRed(r3).redInvm(), n5 = i4.redNeg(), o4 = new K2(3).toRed(r3).redNeg().redSqrt().redMul(i4), h5 = n5.redAdd(o4).fromRed(), p3 = n5.redSub(o4).fromRed();
  return [h5, p3];
}, Zt.prototype._getEndoBasis = function(t) {
  for (var r3 = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), i4 = t, n5 = this.n.clone(), o4 = new K2(1), h5 = new K2(0), p3 = new K2(0), A3 = new K2(1), m2, w4, y6, S6, I3, N10, C4, F2 = 0, U2, J2; i4.cmpn(0) !== 0; ) {
    var Bt2 = n5.div(i4);
    U2 = n5.sub(Bt2.mul(i4)), J2 = p3.sub(Bt2.mul(o4));
    var G = A3.sub(Bt2.mul(h5));
    if (!y6 && U2.cmp(r3) < 0) m2 = C4.neg(), w4 = o4, y6 = U2.neg(), S6 = J2;
    else if (y6 && ++F2 === 2) break;
    C4 = U2, n5 = i4, i4 = U2, p3 = o4, o4 = J2, A3 = h5, h5 = G;
  }
  I3 = U2.neg(), N10 = J2;
  var H = y6.sqr().add(S6.sqr()), z3 = I3.sqr().add(N10.sqr());
  return z3.cmp(H) >= 0 && (I3 = m2, N10 = w4), y6.negative && (y6 = y6.neg(), S6 = S6.neg()), I3.negative && (I3 = I3.neg(), N10 = N10.neg()), [{ a: y6, b: S6 }, { a: I3, b: N10 }];
}, Zt.prototype._endoSplit = function(t) {
  var r3 = this.endo.basis, i4 = r3[0], n5 = r3[1], o4 = n5.b.mul(t).divRound(this.n), h5 = i4.b.neg().mul(t).divRound(this.n), p3 = o4.mul(i4.a), A3 = h5.mul(n5.a), m2 = o4.mul(i4.b), w4 = h5.mul(n5.b), y6 = t.sub(p3).sub(A3), S6 = m2.add(w4).neg();
  return { k1: y6, k2: S6 };
}, Zt.prototype.pointFromX = function(t, r3) {
  t = new K2(t, 16), t.red || (t = t.toRed(this.red));
  var i4 = t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b), n5 = i4.redSqrt();
  if (n5.redSqr().redSub(i4).cmp(this.zero) !== 0) throw new Error("invalid point");
  var o4 = n5.fromRed().isOdd();
  return (r3 && !o4 || !r3 && o4) && (n5 = n5.redNeg()), this.point(t, n5);
}, Zt.prototype.validate = function(t) {
  if (t.inf) return true;
  var r3 = t.x, i4 = t.y, n5 = this.a.redMul(r3), o4 = r3.redSqr().redMul(r3).redIAdd(n5).redIAdd(this.b);
  return i4.redSqr().redISub(o4).cmpn(0) === 0;
}, Zt.prototype._endoWnafMulAdd = function(t, r3, i4) {
  for (var n5 = this._endoWnafT1, o4 = this._endoWnafT2, h5 = 0; h5 < t.length; h5++) {
    var p3 = this._endoSplit(r3[h5]), A3 = t[h5], m2 = A3._getBeta();
    p3.k1.negative && (p3.k1.ineg(), A3 = A3.neg(true)), p3.k2.negative && (p3.k2.ineg(), m2 = m2.neg(true)), n5[h5 * 2] = A3, n5[h5 * 2 + 1] = m2, o4[h5 * 2] = p3.k1, o4[h5 * 2 + 1] = p3.k2;
  }
  for (var w4 = this._wnafMulAdd(1, n5, o4, h5 * 2, i4), y6 = 0; y6 < h5 * 2; y6++) n5[y6] = null, o4[y6] = null;
  return w4;
};
function Ft(e2, t, r3, i4) {
  Ze.BasePoint.call(this, e2, "affine"), t === null && r3 === null ? (this.x = null, this.y = null, this.inf = true) : (this.x = new K2(t, 16), this.y = new K2(r3, 16), i4 && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = false);
}
Di(Ft, Ze.BasePoint), Zt.prototype.point = function(t, r3, i4) {
  return new Ft(this, t, r3, i4);
}, Zt.prototype.pointFromJSON = function(t, r3) {
  return Ft.fromJSON(this, t, r3);
}, Ft.prototype._getBeta = function() {
  if (this.curve.endo) {
    var t = this.precomputed;
    if (t && t.beta) return t.beta;
    var r3 = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
    if (t) {
      var i4 = this.curve, n5 = function(o4) {
        return i4.point(o4.x.redMul(i4.endo.beta), o4.y);
      };
      t.beta = r3, r3.precomputed = { beta: null, naf: t.naf && { wnd: t.naf.wnd, points: t.naf.points.map(n5) }, doubles: t.doubles && { step: t.doubles.step, points: t.doubles.points.map(n5) } };
    }
    return r3;
  }
}, Ft.prototype.toJSON = function() {
  return this.precomputed ? [this.x, this.y, this.precomputed && { doubles: this.precomputed.doubles && { step: this.precomputed.doubles.step, points: this.precomputed.doubles.points.slice(1) }, naf: this.precomputed.naf && { wnd: this.precomputed.naf.wnd, points: this.precomputed.naf.points.slice(1) } }] : [this.x, this.y];
}, Ft.fromJSON = function(t, r3, i4) {
  typeof r3 == "string" && (r3 = JSON.parse(r3));
  var n5 = t.point(r3[0], r3[1], i4);
  if (!r3[2]) return n5;
  function o4(p3) {
    return t.point(p3[0], p3[1], i4);
  }
  var h5 = r3[2];
  return n5.precomputed = { beta: null, doubles: h5.doubles && { step: h5.doubles.step, points: [n5].concat(h5.doubles.points.map(o4)) }, naf: h5.naf && { wnd: h5.naf.wnd, points: [n5].concat(h5.naf.points.map(o4)) } }, n5;
}, Ft.prototype.inspect = function() {
  return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
}, Ft.prototype.isInfinity = function() {
  return this.inf;
}, Ft.prototype.add = function(t) {
  if (this.inf) return t;
  if (t.inf) return this;
  if (this.eq(t)) return this.dbl();
  if (this.neg().eq(t)) return this.curve.point(null, null);
  if (this.x.cmp(t.x) === 0) return this.curve.point(null, null);
  var r3 = this.y.redSub(t.y);
  r3.cmpn(0) !== 0 && (r3 = r3.redMul(this.x.redSub(t.x).redInvm()));
  var i4 = r3.redSqr().redISub(this.x).redISub(t.x), n5 = r3.redMul(this.x.redSub(i4)).redISub(this.y);
  return this.curve.point(i4, n5);
}, Ft.prototype.dbl = function() {
  if (this.inf) return this;
  var t = this.y.redAdd(this.y);
  if (t.cmpn(0) === 0) return this.curve.point(null, null);
  var r3 = this.curve.a, i4 = this.x.redSqr(), n5 = t.redInvm(), o4 = i4.redAdd(i4).redIAdd(i4).redIAdd(r3).redMul(n5), h5 = o4.redSqr().redISub(this.x.redAdd(this.x)), p3 = o4.redMul(this.x.redSub(h5)).redISub(this.y);
  return this.curve.point(h5, p3);
}, Ft.prototype.getX = function() {
  return this.x.fromRed();
}, Ft.prototype.getY = function() {
  return this.y.fromRed();
}, Ft.prototype.mul = function(t) {
  return t = new K2(t, 16), this.isInfinity() ? this : this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [t]) : this.curve._wnafMul(this, t);
}, Ft.prototype.mulAdd = function(t, r3, i4) {
  var n5 = [this, r3], o4 = [t, i4];
  return this.curve.endo ? this.curve._endoWnafMulAdd(n5, o4) : this.curve._wnafMulAdd(1, n5, o4, 2);
}, Ft.prototype.jmulAdd = function(t, r3, i4) {
  var n5 = [this, r3], o4 = [t, i4];
  return this.curve.endo ? this.curve._endoWnafMulAdd(n5, o4, true) : this.curve._wnafMulAdd(1, n5, o4, 2, true);
}, Ft.prototype.eq = function(t) {
  return this === t || this.inf === t.inf && (this.inf || this.x.cmp(t.x) === 0 && this.y.cmp(t.y) === 0);
}, Ft.prototype.neg = function(t) {
  if (this.inf) return this;
  var r3 = this.curve.point(this.x, this.y.redNeg());
  if (t && this.precomputed) {
    var i4 = this.precomputed, n5 = function(o4) {
      return o4.neg();
    };
    r3.precomputed = { naf: i4.naf && { wnd: i4.naf.wnd, points: i4.naf.points.map(n5) }, doubles: i4.doubles && { step: i4.doubles.step, points: i4.doubles.points.map(n5) } };
  }
  return r3;
}, Ft.prototype.toJ = function() {
  if (this.inf) return this.curve.jpoint(null, null, null);
  var t = this.curve.jpoint(this.x, this.y, this.curve.one);
  return t;
};
function Tt(e2, t, r3, i4) {
  Ze.BasePoint.call(this, e2, "jacobian"), t === null && r3 === null && i4 === null ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new K2(0)) : (this.x = new K2(t, 16), this.y = new K2(r3, 16), this.z = new K2(i4, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
}
Di(Tt, Ze.BasePoint), Zt.prototype.jpoint = function(t, r3, i4) {
  return new Tt(this, t, r3, i4);
}, Tt.prototype.toP = function() {
  if (this.isInfinity()) return this.curve.point(null, null);
  var t = this.z.redInvm(), r3 = t.redSqr(), i4 = this.x.redMul(r3), n5 = this.y.redMul(r3).redMul(t);
  return this.curve.point(i4, n5);
}, Tt.prototype.neg = function() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
}, Tt.prototype.add = function(t) {
  if (this.isInfinity()) return t;
  if (t.isInfinity()) return this;
  var r3 = t.z.redSqr(), i4 = this.z.redSqr(), n5 = this.x.redMul(r3), o4 = t.x.redMul(i4), h5 = this.y.redMul(r3.redMul(t.z)), p3 = t.y.redMul(i4.redMul(this.z)), A3 = n5.redSub(o4), m2 = h5.redSub(p3);
  if (A3.cmpn(0) === 0) return m2.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
  var w4 = A3.redSqr(), y6 = w4.redMul(A3), S6 = n5.redMul(w4), I3 = m2.redSqr().redIAdd(y6).redISub(S6).redISub(S6), N10 = m2.redMul(S6.redISub(I3)).redISub(h5.redMul(y6)), C4 = this.z.redMul(t.z).redMul(A3);
  return this.curve.jpoint(I3, N10, C4);
}, Tt.prototype.mixedAdd = function(t) {
  if (this.isInfinity()) return t.toJ();
  if (t.isInfinity()) return this;
  var r3 = this.z.redSqr(), i4 = this.x, n5 = t.x.redMul(r3), o4 = this.y, h5 = t.y.redMul(r3).redMul(this.z), p3 = i4.redSub(n5), A3 = o4.redSub(h5);
  if (p3.cmpn(0) === 0) return A3.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
  var m2 = p3.redSqr(), w4 = m2.redMul(p3), y6 = i4.redMul(m2), S6 = A3.redSqr().redIAdd(w4).redISub(y6).redISub(y6), I3 = A3.redMul(y6.redISub(S6)).redISub(o4.redMul(w4)), N10 = this.z.redMul(p3);
  return this.curve.jpoint(S6, I3, N10);
}, Tt.prototype.dblp = function(t) {
  if (t === 0) return this;
  if (this.isInfinity()) return this;
  if (!t) return this.dbl();
  var r3;
  if (this.curve.zeroA || this.curve.threeA) {
    var i4 = this;
    for (r3 = 0; r3 < t; r3++) i4 = i4.dbl();
    return i4;
  }
  var n5 = this.curve.a, o4 = this.curve.tinv, h5 = this.x, p3 = this.y, A3 = this.z, m2 = A3.redSqr().redSqr(), w4 = p3.redAdd(p3);
  for (r3 = 0; r3 < t; r3++) {
    var y6 = h5.redSqr(), S6 = w4.redSqr(), I3 = S6.redSqr(), N10 = y6.redAdd(y6).redIAdd(y6).redIAdd(n5.redMul(m2)), C4 = h5.redMul(S6), F2 = N10.redSqr().redISub(C4.redAdd(C4)), U2 = C4.redISub(F2), J2 = N10.redMul(U2);
    J2 = J2.redIAdd(J2).redISub(I3);
    var Bt2 = w4.redMul(A3);
    r3 + 1 < t && (m2 = m2.redMul(I3)), h5 = F2, A3 = Bt2, w4 = J2;
  }
  return this.curve.jpoint(h5, w4.redMul(o4), A3);
}, Tt.prototype.dbl = function() {
  return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
}, Tt.prototype._zeroDbl = function() {
  var t, r3, i4;
  if (this.zOne) {
    var n5 = this.x.redSqr(), o4 = this.y.redSqr(), h5 = o4.redSqr(), p3 = this.x.redAdd(o4).redSqr().redISub(n5).redISub(h5);
    p3 = p3.redIAdd(p3);
    var A3 = n5.redAdd(n5).redIAdd(n5), m2 = A3.redSqr().redISub(p3).redISub(p3), w4 = h5.redIAdd(h5);
    w4 = w4.redIAdd(w4), w4 = w4.redIAdd(w4), t = m2, r3 = A3.redMul(p3.redISub(m2)).redISub(w4), i4 = this.y.redAdd(this.y);
  } else {
    var y6 = this.x.redSqr(), S6 = this.y.redSqr(), I3 = S6.redSqr(), N10 = this.x.redAdd(S6).redSqr().redISub(y6).redISub(I3);
    N10 = N10.redIAdd(N10);
    var C4 = y6.redAdd(y6).redIAdd(y6), F2 = C4.redSqr(), U2 = I3.redIAdd(I3);
    U2 = U2.redIAdd(U2), U2 = U2.redIAdd(U2), t = F2.redISub(N10).redISub(N10), r3 = C4.redMul(N10.redISub(t)).redISub(U2), i4 = this.y.redMul(this.z), i4 = i4.redIAdd(i4);
  }
  return this.curve.jpoint(t, r3, i4);
}, Tt.prototype._threeDbl = function() {
  var t, r3, i4;
  if (this.zOne) {
    var n5 = this.x.redSqr(), o4 = this.y.redSqr(), h5 = o4.redSqr(), p3 = this.x.redAdd(o4).redSqr().redISub(n5).redISub(h5);
    p3 = p3.redIAdd(p3);
    var A3 = n5.redAdd(n5).redIAdd(n5).redIAdd(this.curve.a), m2 = A3.redSqr().redISub(p3).redISub(p3);
    t = m2;
    var w4 = h5.redIAdd(h5);
    w4 = w4.redIAdd(w4), w4 = w4.redIAdd(w4), r3 = A3.redMul(p3.redISub(m2)).redISub(w4), i4 = this.y.redAdd(this.y);
  } else {
    var y6 = this.z.redSqr(), S6 = this.y.redSqr(), I3 = this.x.redMul(S6), N10 = this.x.redSub(y6).redMul(this.x.redAdd(y6));
    N10 = N10.redAdd(N10).redIAdd(N10);
    var C4 = I3.redIAdd(I3);
    C4 = C4.redIAdd(C4);
    var F2 = C4.redAdd(C4);
    t = N10.redSqr().redISub(F2), i4 = this.y.redAdd(this.z).redSqr().redISub(S6).redISub(y6);
    var U2 = S6.redSqr();
    U2 = U2.redIAdd(U2), U2 = U2.redIAdd(U2), U2 = U2.redIAdd(U2), r3 = N10.redMul(C4.redISub(t)).redISub(U2);
  }
  return this.curve.jpoint(t, r3, i4);
}, Tt.prototype._dbl = function() {
  var t = this.curve.a, r3 = this.x, i4 = this.y, n5 = this.z, o4 = n5.redSqr().redSqr(), h5 = r3.redSqr(), p3 = i4.redSqr(), A3 = h5.redAdd(h5).redIAdd(h5).redIAdd(t.redMul(o4)), m2 = r3.redAdd(r3);
  m2 = m2.redIAdd(m2);
  var w4 = m2.redMul(p3), y6 = A3.redSqr().redISub(w4.redAdd(w4)), S6 = w4.redISub(y6), I3 = p3.redSqr();
  I3 = I3.redIAdd(I3), I3 = I3.redIAdd(I3), I3 = I3.redIAdd(I3);
  var N10 = A3.redMul(S6).redISub(I3), C4 = i4.redAdd(i4).redMul(n5);
  return this.curve.jpoint(y6, N10, C4);
}, Tt.prototype.trpl = function() {
  if (!this.curve.zeroA) return this.dbl().add(this);
  var t = this.x.redSqr(), r3 = this.y.redSqr(), i4 = this.z.redSqr(), n5 = r3.redSqr(), o4 = t.redAdd(t).redIAdd(t), h5 = o4.redSqr(), p3 = this.x.redAdd(r3).redSqr().redISub(t).redISub(n5);
  p3 = p3.redIAdd(p3), p3 = p3.redAdd(p3).redIAdd(p3), p3 = p3.redISub(h5);
  var A3 = p3.redSqr(), m2 = n5.redIAdd(n5);
  m2 = m2.redIAdd(m2), m2 = m2.redIAdd(m2), m2 = m2.redIAdd(m2);
  var w4 = o4.redIAdd(p3).redSqr().redISub(h5).redISub(A3).redISub(m2), y6 = r3.redMul(w4);
  y6 = y6.redIAdd(y6), y6 = y6.redIAdd(y6);
  var S6 = this.x.redMul(A3).redISub(y6);
  S6 = S6.redIAdd(S6), S6 = S6.redIAdd(S6);
  var I3 = this.y.redMul(w4.redMul(m2.redISub(w4)).redISub(p3.redMul(A3)));
  I3 = I3.redIAdd(I3), I3 = I3.redIAdd(I3), I3 = I3.redIAdd(I3);
  var N10 = this.z.redAdd(p3).redSqr().redISub(i4).redISub(A3);
  return this.curve.jpoint(S6, I3, N10);
}, Tt.prototype.mul = function(t, r3) {
  return t = new K2(t, r3), this.curve._wnafMul(this, t);
}, Tt.prototype.eq = function(t) {
  if (t.type === "affine") return this.eq(t.toJ());
  if (this === t) return true;
  var r3 = this.z.redSqr(), i4 = t.z.redSqr();
  if (this.x.redMul(i4).redISub(t.x.redMul(r3)).cmpn(0) !== 0) return false;
  var n5 = r3.redMul(this.z), o4 = i4.redMul(t.z);
  return this.y.redMul(o4).redISub(t.y.redMul(n5)).cmpn(0) === 0;
}, Tt.prototype.eqXToP = function(t) {
  var r3 = this.z.redSqr(), i4 = t.toRed(this.curve.red).redMul(r3);
  if (this.x.cmp(i4) === 0) return true;
  for (var n5 = t.clone(), o4 = this.curve.redN.redMul(r3); ; ) {
    if (n5.iadd(this.curve.n), n5.cmp(this.curve.p) >= 0) return false;
    if (i4.redIAdd(o4), this.x.cmp(i4) === 0) return true;
  }
}, Tt.prototype.inspect = function() {
  return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
}, Tt.prototype.isInfinity = function() {
  return this.z.cmpn(0) === 0;
};
var qr = cr(function(e2, t) {
  var r3 = t;
  r3.base = Ze, r3.short = ja, r3.mont = null, r3.edwards = null;
});
var Kr = cr(function(e2, t) {
  var r3 = t, i4 = Jt.assert;
  function n5(p3) {
    p3.type === "short" ? this.curve = new qr.short(p3) : p3.type === "edwards" ? this.curve = new qr.edwards(p3) : this.curve = new qr.mont(p3), this.g = this.curve.g, this.n = this.curve.n, this.hash = p3.hash, i4(this.g.validate(), "Invalid curve"), i4(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
  }
  r3.PresetCurve = n5;
  function o4(p3, A3) {
    Object.defineProperty(r3, p3, { configurable: true, enumerable: true, get: function() {
      var m2 = new n5(A3);
      return Object.defineProperty(r3, p3, { configurable: true, enumerable: true, value: m2 }), m2;
    } });
  }
  o4("p192", { type: "short", prime: "p192", p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff", a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc", b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1", n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831", hash: se.sha256, gRed: false, g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"] }), o4("p224", { type: "short", prime: "p224", p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001", a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe", b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4", n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d", hash: se.sha256, gRed: false, g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"] }), o4("p256", { type: "short", prime: null, p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff", a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc", b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b", n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551", hash: se.sha256, gRed: false, g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"] }), o4("p384", { type: "short", prime: null, p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff", a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc", b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef", n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973", hash: se.sha384, gRed: false, g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"] }), o4("p521", { type: "short", prime: null, p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff", a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc", b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00", n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409", hash: se.sha512, gRed: false, g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"] }), o4("curve25519", { type: "mont", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "76d06", b: "1", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: se.sha256, gRed: false, g: ["9"] }), o4("ed25519", { type: "edwards", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "-1", c: "1", d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: se.sha256, gRed: false, g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"] });
  var h5;
  try {
    h5 = null.crash();
  } catch {
    h5 = void 0;
  }
  o4("secp256k1", { type: "short", prime: "k256", p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f", a: "0", b: "7", n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141", h: "1", hash: se.sha256, beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee", lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72", basis: [{ a: "3086d221a7d46bcde86c90e49284eb15", b: "-e4437ed6010e88286f547fa90abfe4c3" }, { a: "114ca50f7a8e2f3f657c1108d9d44cfd8", b: "3086d221a7d46bcde86c90e49284eb15" }], gRed: false, g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", h5] });
});
function Re(e2) {
  if (!(this instanceof Re)) return new Re(e2);
  this.hash = e2.hash, this.predResist = !!e2.predResist, this.outLen = this.hash.outSize, this.minEntropy = e2.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
  var t = fe.toArray(e2.entropy, e2.entropyEnc || "hex"), r3 = fe.toArray(e2.nonce, e2.nonceEnc || "hex"), i4 = fe.toArray(e2.pers, e2.persEnc || "hex");
  Pi(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(t, r3, i4);
}
var Of = Re;
Re.prototype._init = function(t, r3, i4) {
  var n5 = t.concat(r3).concat(i4);
  this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
  for (var o4 = 0; o4 < this.V.length; o4++) this.K[o4] = 0, this.V[o4] = 1;
  this._update(n5), this._reseed = 1, this.reseedInterval = 281474976710656;
}, Re.prototype._hmac = function() {
  return new se.hmac(this.hash, this.K);
}, Re.prototype._update = function(t) {
  var r3 = this._hmac().update(this.V).update([0]);
  t && (r3 = r3.update(t)), this.K = r3.digest(), this.V = this._hmac().update(this.V).digest(), t && (this.K = this._hmac().update(this.V).update([1]).update(t).digest(), this.V = this._hmac().update(this.V).digest());
}, Re.prototype.reseed = function(t, r3, i4, n5) {
  typeof r3 != "string" && (n5 = i4, i4 = r3, r3 = null), t = fe.toArray(t, r3), i4 = fe.toArray(i4, n5), Pi(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(t.concat(i4 || [])), this._reseed = 1;
}, Re.prototype.generate = function(t, r3, i4, n5) {
  if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
  typeof r3 != "string" && (n5 = i4, i4 = r3, r3 = null), i4 && (i4 = fe.toArray(i4, n5 || "hex"), this._update(i4));
  for (var o4 = []; o4.length < t; ) this.V = this._hmac().update(this.V).digest(), o4 = o4.concat(this.V);
  var h5 = o4.slice(0, t);
  return this._update(i4), this._reseed++, fe.encode(h5, r3);
};
var Fi = Jt.assert;
function kt(e2, t) {
  this.ec = e2, this.priv = null, this.pub = null, t.priv && this._importPrivate(t.priv, t.privEnc), t.pub && this._importPublic(t.pub, t.pubEnc);
}
var Ti = kt;
kt.fromPublic = function(t, r3, i4) {
  return r3 instanceof kt ? r3 : new kt(t, { pub: r3, pubEnc: i4 });
}, kt.fromPrivate = function(t, r3, i4) {
  return r3 instanceof kt ? r3 : new kt(t, { priv: r3, privEnc: i4 });
}, kt.prototype.validate = function() {
  var t = this.getPublic();
  return t.isInfinity() ? { result: false, reason: "Invalid public key" } : t.validate() ? t.mul(this.ec.curve.n).isInfinity() ? { result: true, reason: null } : { result: false, reason: "Public key * N != O" } : { result: false, reason: "Public key is not a point" };
}, kt.prototype.getPublic = function(t, r3) {
  return typeof t == "string" && (r3 = t, t = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), r3 ? this.pub.encode(r3, t) : this.pub;
}, kt.prototype.getPrivate = function(t) {
  return t === "hex" ? this.priv.toString(16, 2) : this.priv;
}, kt.prototype._importPrivate = function(t, r3) {
  this.priv = new K2(t, r3 || 16), this.priv = this.priv.umod(this.ec.curve.n);
}, kt.prototype._importPublic = function(t, r3) {
  if (t.x || t.y) {
    this.ec.curve.type === "mont" ? Fi(t.x, "Need x coordinate") : (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") && Fi(t.x && t.y, "Need both x and y coordinate"), this.pub = this.ec.curve.point(t.x, t.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(t, r3);
}, kt.prototype.derive = function(t) {
  return t.validate() || Fi(t.validate(), "public point not validated"), t.mul(this.priv).getX();
}, kt.prototype.sign = function(t, r3, i4) {
  return this.ec.sign(t, this, r3, i4);
}, kt.prototype.verify = function(t, r3) {
  return this.ec.verify(t, r3, this);
}, kt.prototype.inspect = function() {
  return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
};
var Qa = Jt.assert;
function Hr(e2, t) {
  if (e2 instanceof Hr) return e2;
  this._importDER(e2, t) || (Qa(e2.r && e2.s, "Signature without r or s"), this.r = new K2(e2.r, 16), this.s = new K2(e2.s, 16), e2.recoveryParam === void 0 ? this.recoveryParam = null : this.recoveryParam = e2.recoveryParam);
}
var zr = Hr;
function Ja() {
  this.place = 0;
}
function Ui(e2, t) {
  var r3 = e2[t.place++];
  if (!(r3 & 128)) return r3;
  var i4 = r3 & 15;
  if (i4 === 0 || i4 > 4) return false;
  for (var n5 = 0, o4 = 0, h5 = t.place; o4 < i4; o4++, h5++) n5 <<= 8, n5 |= e2[h5], n5 >>>= 0;
  return n5 <= 127 ? false : (t.place = h5, n5);
}
function Pf(e2) {
  for (var t = 0, r3 = e2.length - 1; !e2[t] && !(e2[t + 1] & 128) && t < r3; ) t++;
  return t === 0 ? e2 : e2.slice(t);
}
Hr.prototype._importDER = function(t, r3) {
  t = Jt.toArray(t, r3);
  var i4 = new Ja();
  if (t[i4.place++] !== 48) return false;
  var n5 = Ui(t, i4);
  if (n5 === false || n5 + i4.place !== t.length || t[i4.place++] !== 2) return false;
  var o4 = Ui(t, i4);
  if (o4 === false) return false;
  var h5 = t.slice(i4.place, o4 + i4.place);
  if (i4.place += o4, t[i4.place++] !== 2) return false;
  var p3 = Ui(t, i4);
  if (p3 === false || t.length !== p3 + i4.place) return false;
  var A3 = t.slice(i4.place, p3 + i4.place);
  if (h5[0] === 0) if (h5[1] & 128) h5 = h5.slice(1);
  else return false;
  if (A3[0] === 0) if (A3[1] & 128) A3 = A3.slice(1);
  else return false;
  return this.r = new K2(h5), this.s = new K2(A3), this.recoveryParam = null, true;
};
function ki(e2, t) {
  if (t < 128) {
    e2.push(t);
    return;
  }
  var r3 = 1 + (Math.log(t) / Math.LN2 >>> 3);
  for (e2.push(r3 | 128); --r3; ) e2.push(t >>> (r3 << 3) & 255);
  e2.push(t);
}
Hr.prototype.toDER = function(t) {
  var r3 = this.r.toArray(), i4 = this.s.toArray();
  for (r3[0] & 128 && (r3 = [0].concat(r3)), i4[0] & 128 && (i4 = [0].concat(i4)), r3 = Pf(r3), i4 = Pf(i4); !i4[0] && !(i4[1] & 128); ) i4 = i4.slice(1);
  var n5 = [2];
  ki(n5, r3.length), n5 = n5.concat(r3), n5.push(2), ki(n5, i4.length);
  var o4 = n5.concat(i4), h5 = [48];
  return ki(h5, o4.length), h5 = h5.concat(o4), Jt.encode(h5, t);
};
var Ga = function() {
  throw new Error("unsupported");
};
var Df = Jt.assert;
function $t(e2) {
  if (!(this instanceof $t)) return new $t(e2);
  typeof e2 == "string" && (Df(Object.prototype.hasOwnProperty.call(Kr, e2), "Unknown curve " + e2), e2 = Kr[e2]), e2 instanceof Kr.PresetCurve && (e2 = { curve: e2 }), this.curve = e2.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e2.curve.g, this.g.precompute(e2.curve.n.bitLength() + 1), this.hash = e2.hash || e2.curve.hash;
}
var Ya = $t;
$t.prototype.keyPair = function(t) {
  return new Ti(this, t);
}, $t.prototype.keyFromPrivate = function(t, r3) {
  return Ti.fromPrivate(this, t, r3);
}, $t.prototype.keyFromPublic = function(t, r3) {
  return Ti.fromPublic(this, t, r3);
}, $t.prototype.genKeyPair = function(t) {
  t || (t = {});
  for (var r3 = new Of({ hash: this.hash, pers: t.pers, persEnc: t.persEnc || "utf8", entropy: t.entropy || Ga(this.hash.hmacStrength), entropyEnc: t.entropy && t.entropyEnc || "utf8", nonce: this.n.toArray() }), i4 = this.n.byteLength(), n5 = this.n.sub(new K2(2)); ; ) {
    var o4 = new K2(r3.generate(i4));
    if (!(o4.cmp(n5) > 0)) return o4.iaddn(1), this.keyFromPrivate(o4);
  }
}, $t.prototype._truncateToN = function(t, r3) {
  var i4 = t.byteLength() * 8 - this.n.bitLength();
  return i4 > 0 && (t = t.ushrn(i4)), !r3 && t.cmp(this.n) >= 0 ? t.sub(this.n) : t;
}, $t.prototype.sign = function(t, r3, i4, n5) {
  typeof i4 == "object" && (n5 = i4, i4 = null), n5 || (n5 = {}), r3 = this.keyFromPrivate(r3, i4), t = this._truncateToN(new K2(t, 16));
  for (var o4 = this.n.byteLength(), h5 = r3.getPrivate().toArray("be", o4), p3 = t.toArray("be", o4), A3 = new Of({ hash: this.hash, entropy: h5, nonce: p3, pers: n5.pers, persEnc: n5.persEnc || "utf8" }), m2 = this.n.sub(new K2(1)), w4 = 0; ; w4++) {
    var y6 = n5.k ? n5.k(w4) : new K2(A3.generate(this.n.byteLength()));
    if (y6 = this._truncateToN(y6, true), !(y6.cmpn(1) <= 0 || y6.cmp(m2) >= 0)) {
      var S6 = this.g.mul(y6);
      if (!S6.isInfinity()) {
        var I3 = S6.getX(), N10 = I3.umod(this.n);
        if (N10.cmpn(0) !== 0) {
          var C4 = y6.invm(this.n).mul(N10.mul(r3.getPrivate()).iadd(t));
          if (C4 = C4.umod(this.n), C4.cmpn(0) !== 0) {
            var F2 = (S6.getY().isOdd() ? 1 : 0) | (I3.cmp(N10) !== 0 ? 2 : 0);
            return n5.canonical && C4.cmp(this.nh) > 0 && (C4 = this.n.sub(C4), F2 ^= 1), new zr({ r: N10, s: C4, recoveryParam: F2 });
          }
        }
      }
    }
  }
}, $t.prototype.verify = function(t, r3, i4, n5) {
  t = this._truncateToN(new K2(t, 16)), i4 = this.keyFromPublic(i4, n5), r3 = new zr(r3, "hex");
  var o4 = r3.r, h5 = r3.s;
  if (o4.cmpn(1) < 0 || o4.cmp(this.n) >= 0 || h5.cmpn(1) < 0 || h5.cmp(this.n) >= 0) return false;
  var p3 = h5.invm(this.n), A3 = p3.mul(t).umod(this.n), m2 = p3.mul(o4).umod(this.n), w4;
  return this.curve._maxwellTrick ? (w4 = this.g.jmulAdd(A3, i4.getPublic(), m2), w4.isInfinity() ? false : w4.eqXToP(o4)) : (w4 = this.g.mulAdd(A3, i4.getPublic(), m2), w4.isInfinity() ? false : w4.getX().umod(this.n).cmp(o4) === 0);
}, $t.prototype.recoverPubKey = function(e2, t, r3, i4) {
  Df((3 & r3) === r3, "The recovery param is more than two bits"), t = new zr(t, i4);
  var n5 = this.n, o4 = new K2(e2), h5 = t.r, p3 = t.s, A3 = r3 & 1, m2 = r3 >> 1;
  if (h5.cmp(this.curve.p.umod(this.curve.n)) >= 0 && m2) throw new Error("Unable to find sencond key candinate");
  m2 ? h5 = this.curve.pointFromX(h5.add(this.curve.n), A3) : h5 = this.curve.pointFromX(h5, A3);
  var w4 = t.r.invm(n5), y6 = n5.sub(o4).mul(w4).umod(n5), S6 = p3.mul(w4).umod(n5);
  return this.g.mulAdd(y6, h5, S6);
}, $t.prototype.getKeyRecoveryParam = function(e2, t, r3, i4) {
  if (t = new zr(t, i4), t.recoveryParam !== null) return t.recoveryParam;
  for (var n5 = 0; n5 < 4; n5++) {
    var o4;
    try {
      o4 = this.recoverPubKey(e2, t, n5);
    } catch {
      continue;
    }
    if (o4.eq(r3)) return n5;
  }
  throw new Error("Unable to find valid recovery factor");
};
var Va = cr(function(e2, t) {
  var r3 = t;
  r3.version = "6.5.4", r3.utils = Jt, r3.rand = function() {
    throw new Error("unsupported");
  }, r3.curve = qr, r3.curves = Kr, r3.ec = Ya, r3.eddsa = null;
});
var Wa = Va.ec;
var Xa = "signing-key/5.7.0";
var qi = new L2(Xa);
var Ki = null;
function ve() {
  return Ki || (Ki = new Wa("secp256k1")), Ki;
}
var Za = class {
  constructor(t) {
    br(this, "curve", "secp256k1"), br(this, "privateKey", Kt(t)), Os(this.privateKey) !== 32 && qi.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
    const r3 = ve().keyFromPrivate(Ot(this.privateKey));
    br(this, "publicKey", "0x" + r3.getPublic(false, "hex")), br(this, "compressedPublicKey", "0x" + r3.getPublic(true, "hex")), br(this, "_isSigningKey", true);
  }
  _addPoint(t) {
    const r3 = ve().keyFromPublic(Ot(this.publicKey)), i4 = ve().keyFromPublic(Ot(t));
    return "0x" + r3.pub.add(i4.pub).encodeCompressed("hex");
  }
  signDigest(t) {
    const r3 = ve().keyFromPrivate(Ot(this.privateKey)), i4 = Ot(t);
    i4.length !== 32 && qi.throwArgumentError("bad digest length", "digest", t);
    const n5 = r3.sign(i4, { canonical: true });
    return Ln({ recoveryParam: n5.recoveryParam, r: oe("0x" + n5.r.toString(16), 32), s: oe("0x" + n5.s.toString(16), 32) });
  }
  computeSharedSecret(t) {
    const r3 = ve().keyFromPrivate(Ot(this.privateKey)), i4 = ve().keyFromPublic(Ot(Ff(t)));
    return oe("0x" + r3.derive(i4.getPublic()).toString(16), 32);
  }
  static isSigningKey(t) {
    return !!(t && t._isSigningKey);
  }
};
function $a(e2, t) {
  const r3 = Ln(t), i4 = { r: Ot(r3.r), s: Ot(r3.s) };
  return "0x" + ve().recoverPubKey(Ot(e2), i4, r3.recoveryParam).encode("hex", false);
}
function Ff(e2, t) {
  const r3 = Ot(e2);
  if (r3.length === 32) {
    const i4 = new Za(r3);
    return t ? "0x" + ve().keyFromPrivate(r3).getPublic(true, "hex") : i4.publicKey;
  } else {
    if (r3.length === 33) return t ? Kt(r3) : "0x" + ve().keyFromPublic(r3).getPublic(false, "hex");
    if (r3.length === 65) return t ? "0x" + ve().keyFromPublic(r3).getPublic(true, "hex") : Kt(r3);
  }
  return qi.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
}
var tu = "transactions/5.7.0";
new L2(tu);
var Tf;
(function(e2) {
  e2[e2.legacy = 0] = "legacy", e2[e2.eip2930 = 1] = "eip2930", e2[e2.eip1559 = 2] = "eip1559";
})(Tf || (Tf = {}));
function eu(e2) {
  const t = Ff(e2);
  return h0(zn(yi(zn(t, 1)), 12));
}
function ru(e2, t) {
  return eu($a(Ot(e2), t));
}
var iu = "https://rpc.walletconnect.com/v1";
async function Uf(e2, t, r3, i4, n5, o4) {
  switch (r3.t) {
    case "eip191":
      return kf(e2, t, r3.s);
    case "eip1271":
      return await qf(e2, t, r3.s, i4, n5, o4);
    default:
      throw new Error(`verifySignature failed: Attempted to verify CacaoSignature with unknown type: ${r3.t}`);
  }
}
function kf(e2, t, r3) {
  return ru(of(t), r3).toLowerCase() === e2.toLowerCase();
}
async function qf(e2, t, r3, i4, n5, o4) {
  try {
    const h5 = "0x1626ba7e", p3 = "0000000000000000000000000000000000000000000000000000000000000040", A3 = "0000000000000000000000000000000000000000000000000000000000000041", m2 = r3.substring(2), w4 = of(t).substring(2), y6 = h5 + w4 + p3 + A3 + m2, S6 = await fetch(`${o4 || iu}/?chainId=${i4}&projectId=${n5}`, { method: "POST", body: JSON.stringify({ id: nu(), jsonrpc: "2.0", method: "eth_call", params: [{ to: e2, data: y6 }, "latest"] }) }), { result: I3 } = await S6.json();
    return I3 ? I3.slice(0, h5.length).toLowerCase() === h5.toLowerCase() : false;
  } catch (h5) {
    return console.error("isValidEip1271Signature: ", h5), false;
  }
}
function nu() {
  return Date.now() + Math.floor(Math.random() * 1e3);
}
var fu = Object.defineProperty;
var ou = Object.defineProperties;
var su = Object.getOwnPropertyDescriptors;
var Kf = Object.getOwnPropertySymbols;
var au = Object.prototype.hasOwnProperty;
var uu = Object.prototype.propertyIsEnumerable;
var Hf = (e2, t, r3) => t in e2 ? fu(e2, t, { enumerable: true, configurable: true, writable: true, value: r3 }) : e2[t] = r3;
var Hi = (e2, t) => {
  for (var r3 in t || (t = {})) au.call(t, r3) && Hf(e2, r3, t[r3]);
  if (Kf) for (var r3 of Kf(t)) uu.call(t, r3) && Hf(e2, r3, t[r3]);
  return e2;
};
var zf = (e2, t) => ou(e2, su(t));
var hu = "did:pkh:";
var Lr = (e2) => e2 == null ? void 0 : e2.split(":");
var zi = (e2) => {
  const t = e2 && Lr(e2);
  if (t) return e2.includes(hu) ? t[3] : t[1];
};
var cu = (e2) => {
  const t = e2 && Lr(e2);
  if (t) return t[2] + ":" + t[3];
};
var Li = (e2) => {
  const t = e2 && Lr(e2);
  if (t) return t.pop();
};
async function lu(e2) {
  const { cacao: t, projectId: r3 } = e2, { s: i4, p: n5 } = t, o4 = Lf(n5, n5.iss), h5 = Li(n5.iss);
  return await Uf(h5, o4, i4, zi(n5.iss), r3);
}
var Lf = (e2, t) => {
  const r3 = `${e2.domain} wants you to sign in with your Ethereum account:`, i4 = Li(t);
  if (!e2.aud && !e2.uri) throw new Error("Either `aud` or `uri` is required to construct the message");
  let n5 = e2.statement || void 0;
  const o4 = `URI: ${e2.aud || e2.uri}`, h5 = `Version: ${e2.version}`, p3 = `Chain ID: ${zi(t)}`, A3 = `Nonce: ${e2.nonce}`, m2 = `Issued At: ${e2.iat}`, w4 = e2.exp ? `Expiration Time: ${e2.exp}` : void 0, y6 = e2.nbf ? `Not Before: ${e2.nbf}` : void 0, S6 = e2.requestId ? `Request ID: ${e2.requestId}` : void 0, I3 = e2.resources ? `Resources:${e2.resources.map((C4) => `
- ${C4}`).join("")}` : void 0, N10 = Qr(e2.resources);
  if (N10) {
    const C4 = Oe(N10);
    n5 = Ji(n5, C4);
  }
  return [r3, i4, "", n5, "", o4, h5, p3, A3, m2, w4, y6, S6, I3].filter((C4) => C4 != null).join(`
`);
};
function Gf(e2) {
  return Buffer.from(JSON.stringify(e2)).toString("base64");
}
function Yf(e2) {
  return JSON.parse(Buffer.from(e2, "base64").toString("utf-8"));
}
function me(e2) {
  if (!e2) throw new Error("No recap provided, value is undefined");
  if (!e2.att) throw new Error("No `att` property found");
  const t = Object.keys(e2.att);
  if (!(t != null && t.length)) throw new Error("No resources found in `att` property");
  t.forEach((r3) => {
    const i4 = e2.att[r3];
    if (Array.isArray(i4)) throw new Error(`Resource must be an object: ${r3}`);
    if (typeof i4 != "object") throw new Error(`Resource must be an object: ${r3}`);
    if (!Object.keys(i4).length) throw new Error(`Resource object is empty: ${r3}`);
    Object.keys(i4).forEach((n5) => {
      const o4 = i4[n5];
      if (!Array.isArray(o4)) throw new Error(`Ability limits ${n5} must be an array of objects, found: ${o4}`);
      if (!o4.length) throw new Error(`Value of ${n5} is empty array, must be an array with objects`);
      o4.forEach((h5) => {
        if (typeof h5 != "object") throw new Error(`Ability limits (${n5}) must be an array of objects, found: ${h5}`);
      });
    });
  });
}
function Vf(e2, t, r3, i4 = {}) {
  return r3 == null ? void 0 : r3.sort((n5, o4) => n5.localeCompare(o4)), { att: { [e2]: ji(t, r3, i4) } };
}
function ji(e2, t, r3 = {}) {
  t = t == null ? void 0 : t.sort((n5, o4) => n5.localeCompare(o4));
  const i4 = t.map((n5) => ({ [`${e2}/${n5}`]: [r3] }));
  return Object.assign({}, ...i4);
}
function jr(e2) {
  return me(e2), `urn:recap:${Gf(e2).replace(/=/g, "")}`;
}
function Oe(e2) {
  const t = Yf(e2.replace("urn:recap:", ""));
  return me(t), t;
}
function gu(e2, t, r3) {
  const i4 = Vf(e2, t, r3);
  return jr(i4);
}
function Qi(e2) {
  return e2 && e2.includes("urn:recap:");
}
function Au(e2, t) {
  const r3 = Oe(e2), i4 = Oe(t), n5 = Xf(r3, i4);
  return jr(n5);
}
function Xf(e2, t) {
  me(e2), me(t);
  const r3 = Object.keys(e2.att).concat(Object.keys(t.att)).sort((n5, o4) => n5.localeCompare(o4)), i4 = { att: {} };
  return r3.forEach((n5) => {
    var o4, h5;
    Object.keys(((o4 = e2.att) == null ? void 0 : o4[n5]) || {}).concat(Object.keys(((h5 = t.att) == null ? void 0 : h5[n5]) || {})).sort((p3, A3) => p3.localeCompare(A3)).forEach((p3) => {
      var A3, m2;
      i4.att[n5] = zf(Hi({}, i4.att[n5]), { [p3]: ((A3 = e2.att[n5]) == null ? void 0 : A3[p3]) || ((m2 = t.att[n5]) == null ? void 0 : m2[p3]) });
    });
  }), i4;
}
function Ji(e2 = "", t) {
  me(t);
  const r3 = "I further authorize the stated URI to perform the following actions on my behalf: ";
  if (e2.includes(r3)) return e2;
  const i4 = [];
  let n5 = 0;
  Object.keys(t.att).forEach((p3) => {
    const A3 = Object.keys(t.att[p3]).map((y6) => ({ ability: y6.split("/")[0], action: y6.split("/")[1] }));
    A3.sort((y6, S6) => y6.action.localeCompare(S6.action));
    const m2 = {};
    A3.forEach((y6) => {
      m2[y6.ability] || (m2[y6.ability] = []), m2[y6.ability].push(y6.action);
    });
    const w4 = Object.keys(m2).map((y6) => (n5++, `(${n5}) '${y6}': '${m2[y6].join("', '")}' for '${p3}'.`));
    i4.push(w4.join(", ").replace(".,", "."));
  });
  const o4 = i4.join(" "), h5 = `${r3}${o4}`;
  return `${e2 ? e2 + " " : ""}${h5}`;
}
function bu(e2) {
  var t;
  const r3 = Oe(e2);
  me(r3);
  const i4 = (t = r3.att) == null ? void 0 : t.eip155;
  return i4 ? Object.keys(i4).map((n5) => n5.split("/")[1]) : [];
}
function yu(e2) {
  const t = Oe(e2);
  me(t);
  const r3 = [];
  return Object.values(t.att).forEach((i4) => {
    Object.values(i4).forEach((n5) => {
      var o4;
      (o4 = n5 == null ? void 0 : n5[0]) != null && o4.chains && r3.push(n5[0].chains);
    });
  }), [...new Set(r3.flat())];
}
function Qr(e2) {
  if (!e2) return;
  const t = e2 == null ? void 0 : e2[e2.length - 1];
  return Qi(t) ? t : void 0;
}
var wu = Object.defineProperty;
var xu = Object.defineProperties;
var Mu = Object.getOwnPropertyDescriptors;
var $f = Object.getOwnPropertySymbols;
var Eu = Object.prototype.hasOwnProperty;
var Su = Object.prototype.propertyIsEnumerable;
var to = (e2, t, r3) => t in e2 ? wu(e2, t, { enumerable: true, configurable: true, writable: true, value: r3 }) : e2[t] = r3;
var Nu = (e2, t) => {
  for (var r3 in t || (t = {})) Eu.call(t, r3) && to(e2, r3, t[r3]);
  if ($f) for (var r3 of $f(t)) Su.call(t, r3) && to(e2, r3, t[r3]);
  return e2;
};
var Iu = (e2, t) => xu(e2, Mu(t));
var Gi = "base10";
var zt = "base16";
var Jr = "base64pad";
var Gr = "utf8";
var Yi = 0;
var lr = 1;
var _u = 0;
var eo = 1;
var Vi = 12;
var Wi = 32;
function Bu() {
  const e2 = ln.generateKeyPair();
  return { privateKey: toString3(e2.secretKey, zt), publicKey: toString3(e2.publicKey, zt) };
}
function Cu() {
  const e2 = (0, import_random2.randomBytes)(Wi);
  return toString3(e2, zt);
}
function Ru(e2, t) {
  const r3 = ln.sharedKey(fromString3(e2, zt), fromString3(t, zt), true), i4 = new import_hkdf.HKDF(import_sha256.SHA256, r3).expand(Wi);
  return toString3(i4, zt);
}
function Ou(e2) {
  const t = (0, import_sha256.hash)(fromString3(e2, zt));
  return toString3(t, zt);
}
function Pu(e2) {
  const t = (0, import_sha256.hash)(fromString3(e2, Gr));
  return toString3(t, zt);
}
function ro(e2) {
  return fromString3(`${e2}`, Gi);
}
function Mr(e2) {
  return Number(toString3(e2, Gi));
}
function Du(e2) {
  const t = ro(typeof e2.type < "u" ? e2.type : Yi);
  if (Mr(t) === lr && typeof e2.senderPublicKey > "u") throw new Error("Missing sender public key for type 1 envelope");
  const r3 = typeof e2.senderPublicKey < "u" ? fromString3(e2.senderPublicKey, zt) : void 0, i4 = typeof e2.iv < "u" ? fromString3(e2.iv, zt) : (0, import_random2.randomBytes)(Vi), n5 = new import_chacha20poly1305.ChaCha20Poly1305(fromString3(e2.symKey, zt)).seal(i4, fromString3(e2.message, Gr));
  return io({ type: t, sealed: n5, iv: i4, senderPublicKey: r3 });
}
function Fu(e2) {
  const t = new import_chacha20poly1305.ChaCha20Poly1305(fromString3(e2.symKey, zt)), { sealed: r3, iv: i4 } = Xi(e2.encoded), n5 = t.open(i4, r3);
  if (n5 === null) throw new Error("Failed to decrypt");
  return toString3(n5, Gr);
}
function io(e2) {
  if (Mr(e2.type) === lr) {
    if (typeof e2.senderPublicKey > "u") throw new Error("Missing sender public key for type 1 envelope");
    return toString3(concat2([e2.type, e2.senderPublicKey, e2.iv, e2.sealed]), Jr);
  }
  return toString3(concat2([e2.type, e2.iv, e2.sealed]), Jr);
}
function Xi(e2) {
  const t = fromString3(e2, Jr), r3 = t.slice(_u, eo), i4 = eo;
  if (Mr(r3) === lr) {
    const p3 = i4 + Wi, A3 = p3 + Vi, m2 = t.slice(i4, p3), w4 = t.slice(p3, A3), y6 = t.slice(A3);
    return { type: r3, sealed: y6, iv: w4, senderPublicKey: m2 };
  }
  const n5 = i4 + Vi, o4 = t.slice(i4, n5), h5 = t.slice(n5);
  return { type: r3, sealed: h5, iv: o4 };
}
function Tu(e2, t) {
  const r3 = Xi(e2);
  return no({ type: Mr(r3.type), senderPublicKey: typeof r3.senderPublicKey < "u" ? toString3(r3.senderPublicKey, zt) : void 0, receiverPublicKey: t == null ? void 0 : t.receiverPublicKey });
}
function no(e2) {
  const t = (e2 == null ? void 0 : e2.type) || Yi;
  if (t === lr) {
    if (typeof (e2 == null ? void 0 : e2.senderPublicKey) > "u") throw new Error("missing sender public key");
    if (typeof (e2 == null ? void 0 : e2.receiverPublicKey) > "u") throw new Error("missing receiver public key");
  }
  return { type: t, senderPublicKey: e2 == null ? void 0 : e2.senderPublicKey, receiverPublicKey: e2 == null ? void 0 : e2.receiverPublicKey };
}
function Uu(e2) {
  return e2.type === lr && typeof e2.senderPublicKey == "string" && typeof e2.receiverPublicKey == "string";
}
function fo(e2) {
  return new import_elliptic.ec("p256").keyFromPublic({ x: Buffer.from(e2.x, "base64").toString("hex"), y: Buffer.from(e2.y, "base64").toString("hex") }, "hex");
}
function ku(e2) {
  let t = e2.replace(/-/g, "+").replace(/_/g, "/");
  const r3 = t.length % 4;
  return r3 > 0 && (t += "=".repeat(4 - r3)), t;
}
function qu(e2) {
  return Buffer.from(ku(e2), "base64");
}
function Ku(e2, t) {
  const [r3, i4, n5] = e2.split("."), o4 = qu(n5);
  if (o4.length !== 64) throw new Error("Invalid signature length");
  const h5 = o4.slice(0, 32).toString("hex"), p3 = o4.slice(32, 64).toString("hex"), A3 = `${r3}.${i4}`, m2 = new import_sha256.SHA256().update(Buffer.from(A3)).digest(), w4 = fo(t), y6 = Buffer.from(m2).toString("hex"), S6 = w4.verify(y6, { r: h5, s: p3 });
  if (!S6) throw new Error("Invalid signature");
  const I3 = decodeJWT(e2);
  return Iu(Nu({}, I3.payload), { isVerified: S6 });
}
var oo = "irn";
function Hu(e2) {
  return (e2 == null ? void 0 : e2.relay) || { protocol: oo };
}
function zu(e2) {
  const t = C3[e2];
  if (typeof t > "u") throw new Error(`Relay Protocol not supported: ${e2}`);
  return t;
}
var Lu = Object.defineProperty;
var ju = Object.defineProperties;
var Qu = Object.getOwnPropertyDescriptors;
var so = Object.getOwnPropertySymbols;
var Ju = Object.prototype.hasOwnProperty;
var Gu = Object.prototype.propertyIsEnumerable;
var ao = (e2, t, r3) => t in e2 ? Lu(e2, t, { enumerable: true, configurable: true, writable: true, value: r3 }) : e2[t] = r3;
var uo = (e2, t) => {
  for (var r3 in t || (t = {})) Ju.call(t, r3) && ao(e2, r3, t[r3]);
  if (so) for (var r3 of so(t)) Gu.call(t, r3) && ao(e2, r3, t[r3]);
  return e2;
};
var Yu = (e2, t) => ju(e2, Qu(t));
function ho(e2, t = "-") {
  const r3 = {}, i4 = "relay" + t;
  return Object.keys(e2).forEach((n5) => {
    if (n5.startsWith(i4)) {
      const o4 = n5.replace(i4, ""), h5 = e2[n5];
      r3[o4] = h5;
    }
  }), r3;
}
function Vu(e2) {
  e2 = e2.includes("wc://") ? e2.replace("wc://", "") : e2, e2 = e2.includes("wc:") ? e2.replace("wc:", "") : e2;
  const t = e2.indexOf(":"), r3 = e2.indexOf("?") !== -1 ? e2.indexOf("?") : void 0, i4 = e2.substring(0, t), n5 = e2.substring(t + 1, r3).split("@"), o4 = typeof r3 < "u" ? e2.substring(r3) : "", h5 = Nr.parse(o4), p3 = typeof h5.methods == "string" ? h5.methods.split(",") : void 0;
  return { protocol: i4, topic: co(n5[0]), version: parseInt(n5[1], 10), symKey: h5.symKey, relay: ho(h5), methods: p3, expiryTimestamp: h5.expiryTimestamp ? parseInt(h5.expiryTimestamp, 10) : void 0 };
}
function co(e2) {
  return e2.startsWith("//") ? e2.substring(2) : e2;
}
function lo(e2, t = "-") {
  const r3 = "relay", i4 = {};
  return Object.keys(e2).forEach((n5) => {
    const o4 = r3 + t + n5;
    e2[n5] && (i4[o4] = e2[n5]);
  }), i4;
}
function Wu(e2) {
  return `${e2.protocol}:${e2.topic}@${e2.version}?` + Nr.stringify(uo(Yu(uo({ symKey: e2.symKey }, lo(e2.relay)), { expiryTimestamp: e2.expiryTimestamp }), e2.methods ? { methods: e2.methods.join(",") } : {}));
}
function $e(e2) {
  const t = [];
  return e2.forEach((r3) => {
    const [i4, n5] = r3.split(":");
    t.push(`${i4}:${n5}`);
  }), t;
}
function mo(e2) {
  const t = [];
  return Object.values(e2).forEach((r3) => {
    t.push(...$e(r3.accounts));
  }), t;
}
function go(e2, t) {
  const r3 = [];
  return Object.values(e2).forEach((i4) => {
    $e(i4.accounts).includes(t) && r3.push(...i4.methods);
  }), r3;
}
function Ao(e2, t) {
  const r3 = [];
  return Object.values(e2).forEach((i4) => {
    $e(i4.accounts).includes(t) && r3.push(...i4.events);
  }), r3;
}
function yo(e2) {
  const t = {};
  return e2 == null ? void 0 : e2.forEach((r3) => {
    const [i4, n5] = r3.split(":");
    t[i4] || (t[i4] = { accounts: [], chains: [], events: [] }), t[i4].accounts.push(r3), t[i4].chains.push(`${i4}:${n5}`);
  }), t;
}
function oh(e2, t) {
  t = t.map((i4) => i4.replace("did:pkh:", ""));
  const r3 = yo(t);
  for (const [i4, n5] of Object.entries(r3)) n5.methods ? n5.methods = ge(n5.methods, e2) : n5.methods = e2, n5.events = ["chainChanged", "accountsChanged"];
  return r3;
}
var wo = { INVALID_METHOD: { message: "Invalid method.", code: 1001 }, INVALID_EVENT: { message: "Invalid event.", code: 1002 }, INVALID_UPDATE_REQUEST: { message: "Invalid update request.", code: 1003 }, INVALID_EXTEND_REQUEST: { message: "Invalid extend request.", code: 1004 }, INVALID_SESSION_SETTLE_REQUEST: { message: "Invalid session settle request.", code: 1005 }, UNAUTHORIZED_METHOD: { message: "Unauthorized method.", code: 3001 }, UNAUTHORIZED_EVENT: { message: "Unauthorized event.", code: 3002 }, UNAUTHORIZED_UPDATE_REQUEST: { message: "Unauthorized update request.", code: 3003 }, UNAUTHORIZED_EXTEND_REQUEST: { message: "Unauthorized extend request.", code: 3004 }, USER_REJECTED: { message: "User rejected.", code: 5e3 }, USER_REJECTED_CHAINS: { message: "User rejected chains.", code: 5001 }, USER_REJECTED_METHODS: { message: "User rejected methods.", code: 5002 }, USER_REJECTED_EVENTS: { message: "User rejected events.", code: 5003 }, UNSUPPORTED_CHAINS: { message: "Unsupported chains.", code: 5100 }, UNSUPPORTED_METHODS: { message: "Unsupported methods.", code: 5101 }, UNSUPPORTED_EVENTS: { message: "Unsupported events.", code: 5102 }, UNSUPPORTED_ACCOUNTS: { message: "Unsupported accounts.", code: 5103 }, UNSUPPORTED_NAMESPACE_KEY: { message: "Unsupported namespace key.", code: 5104 }, USER_DISCONNECTED: { message: "User disconnected.", code: 6e3 }, SESSION_SETTLEMENT_FAILED: { message: "Session settlement failed.", code: 7e3 }, WC_METHOD_UNSUPPORTED: { message: "Unsupported wc_ method.", code: 10001 } };
var xo = { NOT_INITIALIZED: { message: "Not initialized.", code: 1 }, NO_MATCHING_KEY: { message: "No matching key.", code: 2 }, RESTORE_WILL_OVERRIDE: { message: "Restore will override.", code: 3 }, RESUBSCRIBED: { message: "Resubscribed.", code: 4 }, MISSING_OR_INVALID: { message: "Missing or invalid.", code: 5 }, EXPIRED: { message: "Expired.", code: 6 }, UNKNOWN_TYPE: { message: "Unknown type.", code: 7 }, MISMATCHED_TOPIC: { message: "Mismatched topic.", code: 8 }, NON_CONFORMING_NAMESPACES: { message: "Non conforming namespaces.", code: 9 } };
function xe(e2, t) {
  const { message: r3, code: i4 } = xo[e2];
  return { message: t ? `${r3} ${t}` : r3, code: i4 };
}
function tr(e2, t) {
  const { message: r3, code: i4 } = wo[e2];
  return { message: t ? `${r3} ${t}` : r3, code: i4 };
}
function Er(e2, t) {
  return Array.isArray(e2) ? typeof t < "u" && e2.length ? e2.every(t) : true : false;
}
function Yr(e2) {
  return Object.getPrototypeOf(e2) === Object.prototype && Object.keys(e2).length;
}
function Pe(e2) {
  return typeof e2 > "u";
}
function Gt(e2, t) {
  return t && Pe(e2) ? true : typeof e2 == "string" && !!e2.trim().length;
}
function Vr(e2, t) {
  return t && Pe(e2) ? true : typeof e2 == "number" && !isNaN(e2);
}
function sh(e2, t) {
  const { requiredNamespaces: r3 } = t, i4 = Object.keys(e2.namespaces), n5 = Object.keys(r3);
  let o4 = true;
  return _e(n5, i4) ? (i4.forEach((h5) => {
    const { accounts: p3, methods: A3, events: m2 } = e2.namespaces[h5], w4 = $e(p3), y6 = r3[h5];
    (!_e(_r(h5, y6), w4) || !_e(y6.methods, A3) || !_e(y6.events, m2)) && (o4 = false);
  }), o4) : false;
}
function Sr(e2) {
  return Gt(e2, false) && e2.includes(":") ? e2.split(":").length === 2 : false;
}
function Mo(e2) {
  if (Gt(e2, false) && e2.includes(":")) {
    const t = e2.split(":");
    if (t.length === 3) {
      const r3 = t[0] + ":" + t[1];
      return !!t[2] && Sr(r3);
    }
  }
  return false;
}
function ah(e2) {
  if (Gt(e2, false)) try {
    return typeof new URL(e2) < "u";
  } catch {
    return false;
  }
  return false;
}
function uh(e2) {
  var t;
  return (t = e2 == null ? void 0 : e2.proposer) == null ? void 0 : t.publicKey;
}
function hh(e2) {
  return e2 == null ? void 0 : e2.topic;
}
function ch(e2, t) {
  let r3 = null;
  return Gt(e2 == null ? void 0 : e2.publicKey, false) || (r3 = xe("MISSING_OR_INVALID", `${t} controller public key should be a string`)), r3;
}
function tn(e2) {
  let t = true;
  return Er(e2) ? e2.length && (t = e2.every((r3) => Gt(r3, false))) : t = false, t;
}
function Eo(e2, t, r3) {
  let i4 = null;
  return Er(t) && t.length ? t.forEach((n5) => {
    i4 || Sr(n5) || (i4 = tr("UNSUPPORTED_CHAINS", `${r3}, chain ${n5} should be a string and conform to "namespace:chainId" format`));
  }) : Sr(e2) || (i4 = tr("UNSUPPORTED_CHAINS", `${r3}, chains must be defined as "namespace:chainId" e.g. "eip155:1": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: ["eip155:1", "eip155:5"] }`)), i4;
}
function So(e2, t, r3) {
  let i4 = null;
  return Object.entries(e2).forEach(([n5, o4]) => {
    if (i4) return;
    const h5 = Eo(n5, _r(n5, o4), `${t} ${r3}`);
    h5 && (i4 = h5);
  }), i4;
}
function No(e2, t) {
  let r3 = null;
  return Er(e2) ? e2.forEach((i4) => {
    r3 || Mo(i4) || (r3 = tr("UNSUPPORTED_ACCOUNTS", `${t}, account ${i4} should be a string and conform to "namespace:chainId:address" format`));
  }) : r3 = tr("UNSUPPORTED_ACCOUNTS", `${t}, accounts should be an array of strings conforming to "namespace:chainId:address" format`), r3;
}
function Io(e2, t) {
  let r3 = null;
  return Object.values(e2).forEach((i4) => {
    if (r3) return;
    const n5 = No(i4 == null ? void 0 : i4.accounts, `${t} namespace`);
    n5 && (r3 = n5);
  }), r3;
}
function _o(e2, t) {
  let r3 = null;
  return tn(e2 == null ? void 0 : e2.methods) ? tn(e2 == null ? void 0 : e2.events) || (r3 = tr("UNSUPPORTED_EVENTS", `${t}, events should be an array of strings or empty array for no events`)) : r3 = tr("UNSUPPORTED_METHODS", `${t}, methods should be an array of strings or empty array for no methods`), r3;
}
function en(e2, t) {
  let r3 = null;
  return Object.values(e2).forEach((i4) => {
    if (r3) return;
    const n5 = _o(i4, `${t}, namespace`);
    n5 && (r3 = n5);
  }), r3;
}
function lh(e2, t, r3) {
  let i4 = null;
  if (e2 && Yr(e2)) {
    const n5 = en(e2, t);
    n5 && (i4 = n5);
    const o4 = So(e2, t, r3);
    o4 && (i4 = o4);
  } else i4 = xe("MISSING_OR_INVALID", `${t}, ${r3} should be an object with data`);
  return i4;
}
function Bo(e2, t) {
  let r3 = null;
  if (e2 && Yr(e2)) {
    const i4 = en(e2, t);
    i4 && (r3 = i4);
    const n5 = Io(e2, t);
    n5 && (r3 = n5);
  } else r3 = xe("MISSING_OR_INVALID", `${t}, namespaces should be an object with data`);
  return r3;
}
function Co(e2) {
  return Gt(e2.protocol, true);
}
function dh(e2, t) {
  let r3 = false;
  return t && !e2 ? r3 = true : e2 && Er(e2) && e2.length && e2.forEach((i4) => {
    r3 = Co(i4);
  }), r3;
}
function ph(e2) {
  return typeof e2 == "number";
}
function vh(e2) {
  return typeof e2 < "u" && typeof e2 !== null;
}
function mh(e2) {
  return !(!e2 || typeof e2 != "object" || !e2.code || !Vr(e2.code, false) || !e2.message || !Gt(e2.message, false));
}
function gh(e2) {
  return !(Pe(e2) || !Gt(e2.method, false));
}
function Ah(e2) {
  return !(Pe(e2) || Pe(e2.result) && Pe(e2.error) || !Vr(e2.id, false) || !Gt(e2.jsonrpc, false));
}
function bh(e2) {
  return !(Pe(e2) || !Gt(e2.name, false));
}
function yh(e2, t) {
  return !(!Sr(t) || !mo(e2).includes(t));
}
function wh(e2, t, r3) {
  return Gt(r3, false) ? go(e2, t).includes(r3) : false;
}
function xh(e2, t, r3) {
  return Gt(r3, false) ? Ao(e2, t).includes(r3) : false;
}
function Ro(e2, t, r3) {
  let i4 = null;
  const n5 = Mh(e2), o4 = Eh(t), h5 = Object.keys(n5), p3 = Object.keys(o4), A3 = Oo(Object.keys(e2)), m2 = Oo(Object.keys(t)), w4 = A3.filter((y6) => !m2.includes(y6));
  return w4.length && (i4 = xe("NON_CONFORMING_NAMESPACES", `${r3} namespaces keys don't satisfy requiredNamespaces.
      Required: ${w4.toString()}
      Received: ${Object.keys(t).toString()}`)), _e(h5, p3) || (i4 = xe("NON_CONFORMING_NAMESPACES", `${r3} namespaces chains don't satisfy required namespaces.
      Required: ${h5.toString()}
      Approved: ${p3.toString()}`)), Object.keys(t).forEach((y6) => {
    if (!y6.includes(":") || i4) return;
    const S6 = $e(t[y6].accounts);
    S6.includes(y6) || (i4 = xe("NON_CONFORMING_NAMESPACES", `${r3} namespaces accounts don't satisfy namespace accounts for ${y6}
        Required: ${y6}
        Approved: ${S6.toString()}`));
  }), h5.forEach((y6) => {
    i4 || (_e(n5[y6].methods, o4[y6].methods) ? _e(n5[y6].events, o4[y6].events) || (i4 = xe("NON_CONFORMING_NAMESPACES", `${r3} namespaces events don't satisfy namespace events for ${y6}`)) : i4 = xe("NON_CONFORMING_NAMESPACES", `${r3} namespaces methods don't satisfy namespace methods for ${y6}`));
  }), i4;
}
function Mh(e2) {
  const t = {};
  return Object.keys(e2).forEach((r3) => {
    var i4;
    r3.includes(":") ? t[r3] = e2[r3] : (i4 = e2[r3].chains) == null || i4.forEach((n5) => {
      t[n5] = { methods: e2[r3].methods, events: e2[r3].events };
    });
  }), t;
}
function Oo(e2) {
  return [...new Set(e2.map((t) => t.includes(":") ? t.split(":")[0] : t))];
}
function Eh(e2) {
  const t = {};
  return Object.keys(e2).forEach((r3) => {
    if (r3.includes(":")) t[r3] = e2[r3];
    else {
      const i4 = $e(e2[r3].accounts);
      i4 == null ? void 0 : i4.forEach((n5) => {
        t[n5] = { accounts: e2[r3].accounts.filter((o4) => o4.includes(`${n5}:`)), methods: e2[r3].methods, events: e2[r3].events };
      });
    }
  }), t;
}
function Sh(e2, t) {
  return Vr(e2, false) && e2 <= t.max && e2 >= t.min;
}
function Nh() {
  const e2 = We();
  return new Promise((t) => {
    switch (e2) {
      case qt.browser:
        t(Po());
        break;
      case qt.reactNative:
        t(Do());
        break;
      case qt.node:
        t(Fo());
        break;
      default:
        t(true);
    }
  });
}
function Po() {
  return pr() && (navigator == null ? void 0 : navigator.onLine);
}
async function Do() {
  if (er() && typeof global < "u" && global != null && global.NetInfo) {
    const e2 = await (global == null ? void 0 : global.NetInfo.fetch());
    return e2 == null ? void 0 : e2.isConnected;
  }
  return true;
}
function Fo() {
  return true;
}
function Ih(e2) {
  switch (We()) {
    case qt.browser:
      To(e2);
      break;
    case qt.reactNative:
      Uo(e2);
      break;
    case qt.node:
      break;
  }
}
function To(e2) {
  !er() && pr() && (window.addEventListener("online", () => e2(true)), window.addEventListener("offline", () => e2(false)));
}
function Uo(e2) {
  er() && typeof global < "u" && global != null && global.NetInfo && (global == null ? void 0 : global.NetInfo.addEventListener((t) => e2(t == null ? void 0 : t.isConnected)));
}
var rn = {};
var _h = class {
  static get(t) {
    return rn[t];
  }
  static set(t, r3) {
    rn[t] = r3;
  }
  static delete(t) {
    delete rn[t];
  }
};

// node_modules/@walletconnect/core/dist/index.es.js
var import_time4 = __toESM(require_cjs());

// node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js
var import_events5 = __toESM(require_events());

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js
var esm_exports = {};
__export(esm_exports, {
  DEFAULT_ERROR: () => DEFAULT_ERROR,
  IBaseJsonRpcProvider: () => n4,
  IEvents: () => e,
  IJsonRpcConnection: () => o2,
  IJsonRpcProvider: () => r2,
  INTERNAL_ERROR: () => INTERNAL_ERROR,
  INVALID_PARAMS: () => INVALID_PARAMS,
  INVALID_REQUEST: () => INVALID_REQUEST,
  METHOD_NOT_FOUND: () => METHOD_NOT_FOUND,
  PARSE_ERROR: () => PARSE_ERROR,
  RESERVED_ERROR_CODES: () => RESERVED_ERROR_CODES,
  SERVER_ERROR: () => SERVER_ERROR,
  SERVER_ERROR_CODE_RANGE: () => SERVER_ERROR_CODE_RANGE,
  STANDARD_ERROR_MAP: () => STANDARD_ERROR_MAP,
  formatErrorMessage: () => formatErrorMessage,
  formatJsonRpcError: () => formatJsonRpcError,
  formatJsonRpcRequest: () => formatJsonRpcRequest,
  formatJsonRpcResult: () => formatJsonRpcResult,
  getBigIntRpcId: () => getBigIntRpcId,
  getError: () => getError,
  getErrorByCode: () => getErrorByCode,
  isHttpUrl: () => isHttpUrl,
  isJsonRpcError: () => isJsonRpcError,
  isJsonRpcPayload: () => isJsonRpcPayload,
  isJsonRpcRequest: () => isJsonRpcRequest,
  isJsonRpcResponse: () => isJsonRpcResponse,
  isJsonRpcResult: () => isJsonRpcResult,
  isJsonRpcValidationInvalid: () => isJsonRpcValidationInvalid,
  isLocalhostUrl: () => isLocalhostUrl,
  isNodeJs: () => isNodeJs,
  isReservedErrorCode: () => isReservedErrorCode,
  isServerErrorCode: () => isServerErrorCode,
  isValidDefaultRoute: () => isValidDefaultRoute,
  isValidErrorCode: () => isValidErrorCode,
  isValidLeadingWildcardRoute: () => isValidLeadingWildcardRoute,
  isValidRoute: () => isValidRoute,
  isValidTrailingWildcardRoute: () => isValidTrailingWildcardRoute,
  isValidWildcardRoute: () => isValidWildcardRoute,
  isWsUrl: () => isWsUrl,
  parseConnectionError: () => parseConnectionError,
  payloadId: () => payloadId,
  validateJsonRpcError: () => validateJsonRpcError
});

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js
var PARSE_ERROR = "PARSE_ERROR";
var INVALID_REQUEST = "INVALID_REQUEST";
var METHOD_NOT_FOUND = "METHOD_NOT_FOUND";
var INVALID_PARAMS = "INVALID_PARAMS";
var INTERNAL_ERROR = "INTERNAL_ERROR";
var SERVER_ERROR = "SERVER_ERROR";
var RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];
var SERVER_ERROR_CODE_RANGE = [-32e3, -32099];
var STANDARD_ERROR_MAP = {
  [PARSE_ERROR]: { code: -32700, message: "Parse error" },
  [INVALID_REQUEST]: { code: -32600, message: "Invalid Request" },
  [METHOD_NOT_FOUND]: { code: -32601, message: "Method not found" },
  [INVALID_PARAMS]: { code: -32602, message: "Invalid params" },
  [INTERNAL_ERROR]: { code: -32603, message: "Internal error" },
  [SERVER_ERROR]: { code: -32e3, message: "Server error" }
};
var DEFAULT_ERROR = SERVER_ERROR;

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js
function isServerErrorCode(code2) {
  return code2 <= SERVER_ERROR_CODE_RANGE[0] && code2 >= SERVER_ERROR_CODE_RANGE[1];
}
function isReservedErrorCode(code2) {
  return RESERVED_ERROR_CODES.includes(code2);
}
function isValidErrorCode(code2) {
  return typeof code2 === "number";
}
function getError(type) {
  if (!Object.keys(STANDARD_ERROR_MAP).includes(type)) {
    return STANDARD_ERROR_MAP[DEFAULT_ERROR];
  }
  return STANDARD_ERROR_MAP[type];
}
function getErrorByCode(code2) {
  const match = Object.values(STANDARD_ERROR_MAP).find((e2) => e2.code === code2);
  if (!match) {
    return STANDARD_ERROR_MAP[DEFAULT_ERROR];
  }
  return match;
}
function validateJsonRpcError(response) {
  if (typeof response.error.code === "undefined") {
    return { valid: false, error: "Missing code for JSON-RPC error" };
  }
  if (typeof response.error.message === "undefined") {
    return { valid: false, error: "Missing message for JSON-RPC error" };
  }
  if (!isValidErrorCode(response.error.code)) {
    return {
      valid: false,
      error: `Invalid error code type for JSON-RPC: ${response.error.code}`
    };
  }
  if (isReservedErrorCode(response.error.code)) {
    const error = getErrorByCode(response.error.code);
    if (error.message !== STANDARD_ERROR_MAP[DEFAULT_ERROR].message && response.error.message === error.message) {
      return {
        valid: false,
        error: `Invalid error code message for JSON-RPC: ${response.error.code}`
      };
    }
  }
  return { valid: true };
}
function parseConnectionError(e2, url, type) {
  return e2.message.includes("getaddrinfo ENOTFOUND") || e2.message.includes("connect ECONNREFUSED") ? new Error(`Unavailable ${type} RPC url at ${url}`) : e2;
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js
var env_exports = {};
__export(env_exports, {
  isNodeJs: () => isNodeJs
});
var import_environment = __toESM(require_cjs4());
__reExport(env_exports, __toESM(require_cjs4()));
var isNodeJs = import_environment.isNode;

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js
__reExport(esm_exports, env_exports);

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js
function payloadId(entropy = 3) {
  const date = Date.now() * Math.pow(10, entropy);
  const extra = Math.floor(Math.random() * Math.pow(10, entropy));
  return date + extra;
}
function getBigIntRpcId(entropy = 6) {
  return BigInt(payloadId(entropy));
}
function formatJsonRpcRequest(method, params, id) {
  return {
    id: id || payloadId(),
    jsonrpc: "2.0",
    method,
    params
  };
}
function formatJsonRpcResult(id, result) {
  return {
    id,
    jsonrpc: "2.0",
    result
  };
}
function formatJsonRpcError(id, error, data) {
  return {
    id,
    jsonrpc: "2.0",
    error: formatErrorMessage(error, data)
  };
}
function formatErrorMessage(error, data) {
  if (typeof error === "undefined") {
    return getError(INTERNAL_ERROR);
  }
  if (typeof error === "string") {
    error = Object.assign(Object.assign({}, getError(SERVER_ERROR)), { message: error });
  }
  if (typeof data !== "undefined") {
    error.data = data;
  }
  if (isReservedErrorCode(error.code)) {
    error = getErrorByCode(error.code);
  }
  return error;
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js
function isValidRoute(route) {
  if (route.includes("*")) {
    return isValidWildcardRoute(route);
  }
  if (/\W/g.test(route)) {
    return false;
  }
  return true;
}
function isValidDefaultRoute(route) {
  return route === "*";
}
function isValidWildcardRoute(route) {
  if (isValidDefaultRoute(route)) {
    return true;
  }
  if (!route.includes("*")) {
    return false;
  }
  if (route.split("*").length !== 2) {
    return false;
  }
  if (route.split("*").filter((x5) => x5.trim() === "").length !== 1) {
    return false;
  }
  return true;
}
function isValidLeadingWildcardRoute(route) {
  return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split("*")[0].trim();
}
function isValidTrailingWildcardRoute(route) {
  return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split("*")[1].trim();
}

// node_modules/@walletconnect/jsonrpc-types/dist/index.es.js
var e = class {
};
var o2 = class extends e {
  constructor(c5) {
    super();
  }
};
var n4 = class extends e {
  constructor() {
    super();
  }
};
var r2 = class extends n4 {
  constructor(c5) {
    super();
  }
};

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js
var HTTP_REGEX = "^https?:";
var WS_REGEX = "^wss?:";
function getUrlProtocol(url) {
  const matches = url.match(new RegExp(/^\w+:/, "gi"));
  if (!matches || !matches.length)
    return;
  return matches[0];
}
function matchRegexProtocol(url, regex) {
  const protocol = getUrlProtocol(url);
  if (typeof protocol === "undefined")
    return false;
  return new RegExp(regex).test(protocol);
}
function isHttpUrl(url) {
  return matchRegexProtocol(url, HTTP_REGEX);
}
function isWsUrl(url) {
  return matchRegexProtocol(url, WS_REGEX);
}
function isLocalhostUrl(url) {
  return new RegExp("wss?://localhost(:d{2,5})?").test(url);
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js
function isJsonRpcPayload(payload) {
  return typeof payload === "object" && "id" in payload && "jsonrpc" in payload && payload.jsonrpc === "2.0";
}
function isJsonRpcRequest(payload) {
  return isJsonRpcPayload(payload) && "method" in payload;
}
function isJsonRpcResponse(payload) {
  return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));
}
function isJsonRpcResult(payload) {
  return "result" in payload;
}
function isJsonRpcError(payload) {
  return "error" in payload;
}
function isJsonRpcValidationInvalid(validation) {
  return "error" in validation && validation.valid === false;
}

// node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js
var o3 = class extends r2 {
  constructor(t) {
    super(t), this.events = new import_events5.EventEmitter(), this.hasRegisteredEventListeners = false, this.connection = this.setConnection(t), this.connection.connected && this.registerEventListeners();
  }
  async connect(t = this.connection) {
    await this.open(t);
  }
  async disconnect() {
    await this.close();
  }
  on(t, e2) {
    this.events.on(t, e2);
  }
  once(t, e2) {
    this.events.once(t, e2);
  }
  off(t, e2) {
    this.events.off(t, e2);
  }
  removeListener(t, e2) {
    this.events.removeListener(t, e2);
  }
  async request(t, e2) {
    return this.requestStrict(formatJsonRpcRequest(t.method, t.params || [], t.id || getBigIntRpcId().toString()), e2);
  }
  async requestStrict(t, e2) {
    return new Promise(async (i4, s3) => {
      if (!this.connection.connected) try {
        await this.open();
      } catch (n5) {
        s3(n5);
      }
      this.events.on(`${t.id}`, (n5) => {
        isJsonRpcError(n5) ? s3(n5.error) : i4(n5.result);
      });
      try {
        await this.connection.send(t, e2);
      } catch (n5) {
        s3(n5);
      }
    });
  }
  setConnection(t = this.connection) {
    return t;
  }
  onPayload(t) {
    this.events.emit("payload", t), isJsonRpcResponse(t) ? this.events.emit(`${t.id}`, t) : this.events.emit("message", { type: t.method, data: t.params });
  }
  onClose(t) {
    t && t.code === 3e3 && this.events.emit("error", new Error(`WebSocket connection closed abnormally with code: ${t.code} ${t.reason ? `(${t.reason})` : ""}`)), this.events.emit("disconnect");
  }
  async open(t = this.connection) {
    this.connection === t && this.connection.connected || (this.connection.connected && this.close(), typeof t == "string" && (await this.connection.open(t), t = this.connection), this.connection = this.setConnection(t), await this.connection.open(), this.registerEventListeners(), this.events.emit("connect"));
  }
  async close() {
    await this.connection.close();
  }
  registerEventListeners() {
    this.hasRegisteredEventListeners || (this.connection.on("payload", (t) => this.onPayload(t)), this.connection.on("close", (t) => this.onClose(t)), this.connection.on("error", (t) => this.events.emit("error", t)), this.connection.on("register_error", (t) => this.onClose()), this.hasRegisteredEventListeners = true);
  }
};

// node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js
var import_events6 = __toESM(require_events());
var w2 = () => typeof WebSocket < "u" ? WebSocket : typeof global < "u" && typeof global.WebSocket < "u" ? global.WebSocket : typeof window < "u" && typeof window.WebSocket < "u" ? window.WebSocket : typeof self < "u" && typeof self.WebSocket < "u" ? self.WebSocket : require_browser3();
var b2 = () => typeof WebSocket < "u" || typeof global < "u" && typeof global.WebSocket < "u" || typeof window < "u" && typeof window.WebSocket < "u" || typeof self < "u" && typeof self.WebSocket < "u";
var a3 = (c5) => c5.split("?")[0];
var h4 = 10;
var S3 = w2();
var f2 = class {
  constructor(e2) {
    if (this.url = e2, this.events = new import_events6.EventEmitter(), this.registering = false, !isWsUrl(e2)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e2}`);
    this.url = e2;
  }
  get connected() {
    return typeof this.socket < "u";
  }
  get connecting() {
    return this.registering;
  }
  on(e2, t) {
    this.events.on(e2, t);
  }
  once(e2, t) {
    this.events.once(e2, t);
  }
  off(e2, t) {
    this.events.off(e2, t);
  }
  removeListener(e2, t) {
    this.events.removeListener(e2, t);
  }
  async open(e2 = this.url) {
    await this.register(e2);
  }
  async close() {
    return new Promise((e2, t) => {
      if (typeof this.socket > "u") {
        t(new Error("Connection already closed"));
        return;
      }
      this.socket.onclose = (n5) => {
        this.onClose(n5), e2();
      }, this.socket.close();
    });
  }
  async send(e2) {
    typeof this.socket > "u" && (this.socket = await this.register());
    try {
      this.socket.send(safeJsonStringify(e2));
    } catch (t) {
      this.onError(e2.id, t);
    }
  }
  register(e2 = this.url) {
    if (!isWsUrl(e2)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e2}`);
    if (this.registering) {
      const t = this.events.getMaxListeners();
      return (this.events.listenerCount("register_error") >= t || this.events.listenerCount("open") >= t) && this.events.setMaxListeners(t + 1), new Promise((n5, o4) => {
        this.events.once("register_error", (s3) => {
          this.resetMaxListeners(), o4(s3);
        }), this.events.once("open", () => {
          if (this.resetMaxListeners(), typeof this.socket > "u") return o4(new Error("WebSocket connection is missing or invalid"));
          n5(this.socket);
        });
      });
    }
    return this.url = e2, this.registering = true, new Promise((t, n5) => {
      const o4 = new URLSearchParams(e2).get("origin"), s3 = (0, esm_exports.isReactNative)() ? { headers: { origin: o4 } } : { rejectUnauthorized: !isLocalhostUrl(e2) }, i4 = new S3(e2, [], s3);
      b2() ? i4.onerror = (r3) => {
        const l4 = r3;
        n5(this.emitError(l4.error));
      } : i4.on("error", (r3) => {
        n5(this.emitError(r3));
      }), i4.onopen = () => {
        this.onOpen(i4), t(i4);
      };
    });
  }
  onOpen(e2) {
    e2.onmessage = (t) => this.onPayload(t), e2.onclose = (t) => this.onClose(t), this.socket = e2, this.registering = false, this.events.emit("open");
  }
  onClose(e2) {
    this.socket = void 0, this.registering = false, this.events.emit("close", e2);
  }
  onPayload(e2) {
    if (typeof e2.data > "u") return;
    const t = typeof e2.data == "string" ? safeJsonParse(e2.data) : e2.data;
    this.events.emit("payload", t);
  }
  onError(e2, t) {
    const n5 = this.parseError(t), o4 = n5.message || n5.toString(), s3 = formatJsonRpcError(e2, o4);
    this.events.emit("payload", s3);
  }
  parseError(e2, t = this.url) {
    return parseConnectionError(e2, a3(t), "WS");
  }
  resetMaxListeners() {
    this.events.getMaxListeners() > h4 && this.events.setMaxListeners(h4);
  }
  emitError(e2) {
    const t = this.parseError(new Error((e2 == null ? void 0 : e2.message) || `WebSocket connection failed for host: ${a3(this.url)}`));
    return this.events.emit("register_error", t), t;
  }
};

// node_modules/@walletconnect/core/dist/index.es.js
var import_lodash = __toESM(require_lodash2());
function us2(o4, e2) {
  if (o4.length >= 255) throw new TypeError("Alphabet too long");
  for (var t = new Uint8Array(256), s3 = 0; s3 < t.length; s3++) t[s3] = 255;
  for (var i4 = 0; i4 < o4.length; i4++) {
    var r3 = o4.charAt(i4), n5 = r3.charCodeAt(0);
    if (t[n5] !== 255) throw new TypeError(r3 + " is ambiguous");
    t[n5] = i4;
  }
  var a4 = o4.length, h5 = o4.charAt(0), c5 = Math.log(a4) / Math.log(256), d3 = Math.log(256) / Math.log(a4);
  function g3(l4) {
    if (l4 instanceof Uint8Array || (ArrayBuffer.isView(l4) ? l4 = new Uint8Array(l4.buffer, l4.byteOffset, l4.byteLength) : Array.isArray(l4) && (l4 = Uint8Array.from(l4))), !(l4 instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
    if (l4.length === 0) return "";
    for (var p3 = 0, _3 = 0, D2 = 0, E4 = l4.length; D2 !== E4 && l4[D2] === 0; ) D2++, p3++;
    for (var N10 = (E4 - D2) * d3 + 1 >>> 0, T2 = new Uint8Array(N10); D2 !== E4; ) {
      for (var z3 = l4[D2], U2 = 0, x5 = N10 - 1; (z3 !== 0 || U2 < _3) && x5 !== -1; x5--, U2++) z3 += 256 * T2[x5] >>> 0, T2[x5] = z3 % a4 >>> 0, z3 = z3 / a4 >>> 0;
      if (z3 !== 0) throw new Error("Non-zero carry");
      _3 = U2, D2++;
    }
    for (var $ = N10 - _3; $ !== N10 && T2[$] === 0; ) $++;
    for (var Q2 = h5.repeat(p3); $ < N10; ++$) Q2 += o4.charAt(T2[$]);
    return Q2;
  }
  function b3(l4) {
    if (typeof l4 != "string") throw new TypeError("Expected String");
    if (l4.length === 0) return new Uint8Array();
    var p3 = 0;
    if (l4[p3] !== " ") {
      for (var _3 = 0, D2 = 0; l4[p3] === h5; ) _3++, p3++;
      for (var E4 = (l4.length - p3) * c5 + 1 >>> 0, N10 = new Uint8Array(E4); l4[p3]; ) {
        var T2 = t[l4.charCodeAt(p3)];
        if (T2 === 255) return;
        for (var z3 = 0, U2 = E4 - 1; (T2 !== 0 || z3 < D2) && U2 !== -1; U2--, z3++) T2 += a4 * N10[U2] >>> 0, N10[U2] = T2 % 256 >>> 0, T2 = T2 / 256 >>> 0;
        if (T2 !== 0) throw new Error("Non-zero carry");
        D2 = z3, p3++;
      }
      if (l4[p3] !== " ") {
        for (var x5 = E4 - D2; x5 !== E4 && N10[x5] === 0; ) x5++;
        for (var $ = new Uint8Array(_3 + (E4 - x5)), Q2 = _3; x5 !== E4; ) $[Q2++] = N10[x5++];
        return $;
      }
    }
  }
  function m2(l4) {
    var p3 = b3(l4);
    if (p3) return p3;
    throw new Error(`Non-${e2} character`);
  }
  return { encode: g3, decodeUnsafe: b3, decode: m2 };
}
var ds2 = us2;
var gs2 = ds2;
var Ve = (o4) => {
  if (o4 instanceof Uint8Array && o4.constructor.name === "Uint8Array") return o4;
  if (o4 instanceof ArrayBuffer) return new Uint8Array(o4);
  if (ArrayBuffer.isView(o4)) return new Uint8Array(o4.buffer, o4.byteOffset, o4.byteLength);
  throw new Error("Unknown type, must be binary type");
};
var ps2 = (o4) => new TextEncoder().encode(o4);
var ys2 = (o4) => new TextDecoder().decode(o4);
var Ds2 = class {
  constructor(e2, t, s3) {
    this.name = e2, this.prefix = t, this.baseEncode = s3;
  }
  encode(e2) {
    if (e2 instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e2)}`;
    throw Error("Unknown type, must be binary type");
  }
};
var bs2 = class {
  constructor(e2, t, s3) {
    if (this.name = e2, this.prefix = t, t.codePointAt(0) === void 0) throw new Error("Invalid prefix character");
    this.prefixCodePoint = t.codePointAt(0), this.baseDecode = s3;
  }
  decode(e2) {
    if (typeof e2 == "string") {
      if (e2.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e2)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      return this.baseDecode(e2.slice(this.prefix.length));
    } else throw Error("Can only multibase decode strings");
  }
  or(e2) {
    return je(this, e2);
  }
};
var ms2 = class {
  constructor(e2) {
    this.decoders = e2;
  }
  or(e2) {
    return je(this, e2);
  }
  decode(e2) {
    const t = e2[0], s3 = this.decoders[t];
    if (s3) return s3.decode(e2);
    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e2)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
  }
};
var je = (o4, e2) => new ms2({ ...o4.decoders || { [o4.prefix]: o4 }, ...e2.decoders || { [e2.prefix]: e2 } });
var fs = class {
  constructor(e2, t, s3, i4) {
    this.name = e2, this.prefix = t, this.baseEncode = s3, this.baseDecode = i4, this.encoder = new Ds2(e2, t, s3), this.decoder = new bs2(e2, t, i4);
  }
  encode(e2) {
    return this.encoder.encode(e2);
  }
  decode(e2) {
    return this.decoder.decode(e2);
  }
};
var re2 = ({ name: o4, prefix: e2, encode: t, decode: s3 }) => new fs(o4, e2, t, s3);
var Y = ({ prefix: o4, name: e2, alphabet: t }) => {
  const { encode: s3, decode: i4 } = gs2(t, e2);
  return re2({ prefix: o4, name: e2, encode: s3, decode: (r3) => Ve(i4(r3)) });
};
var _s2 = (o4, e2, t, s3) => {
  const i4 = {};
  for (let d3 = 0; d3 < e2.length; ++d3) i4[e2[d3]] = d3;
  let r3 = o4.length;
  for (; o4[r3 - 1] === "="; ) --r3;
  const n5 = new Uint8Array(r3 * t / 8 | 0);
  let a4 = 0, h5 = 0, c5 = 0;
  for (let d3 = 0; d3 < r3; ++d3) {
    const g3 = i4[o4[d3]];
    if (g3 === void 0) throw new SyntaxError(`Non-${s3} character`);
    h5 = h5 << t | g3, a4 += t, a4 >= 8 && (a4 -= 8, n5[c5++] = 255 & h5 >> a4);
  }
  if (a4 >= t || 255 & h5 << 8 - a4) throw new SyntaxError("Unexpected end of data");
  return n5;
};
var Es2 = (o4, e2, t) => {
  const s3 = e2[e2.length - 1] === "=", i4 = (1 << t) - 1;
  let r3 = "", n5 = 0, a4 = 0;
  for (let h5 = 0; h5 < o4.length; ++h5) for (a4 = a4 << 8 | o4[h5], n5 += 8; n5 > t; ) n5 -= t, r3 += e2[i4 & a4 >> n5];
  if (n5 && (r3 += e2[i4 & a4 << t - n5]), s3) for (; r3.length * t & 7; ) r3 += "=";
  return r3;
};
var f3 = ({ name: o4, prefix: e2, bitsPerChar: t, alphabet: s3 }) => re2({ prefix: e2, name: o4, encode(i4) {
  return Es2(i4, s3, t);
}, decode(i4) {
  return _s2(i4, s3, t, o4);
} });
var vs2 = re2({ prefix: "\0", name: "identity", encode: (o4) => ys2(o4), decode: (o4) => ps2(o4) });
var ws2 = Object.freeze({ __proto__: null, identity: vs2 });
var Is2 = f3({ prefix: "0", name: "base2", alphabet: "01", bitsPerChar: 1 });
var Ts2 = Object.freeze({ __proto__: null, base2: Is2 });
var Cs2 = f3({ prefix: "7", name: "base8", alphabet: "01234567", bitsPerChar: 3 });
var Ss2 = Object.freeze({ __proto__: null, base8: Cs2 });
var Ps2 = Y({ prefix: "9", name: "base10", alphabet: "0123456789" });
var Rs2 = Object.freeze({ __proto__: null, base10: Ps2 });
var xs2 = f3({ prefix: "f", name: "base16", alphabet: "0123456789abcdef", bitsPerChar: 4 });
var Os2 = f3({ prefix: "F", name: "base16upper", alphabet: "0123456789ABCDEF", bitsPerChar: 4 });
var As2 = Object.freeze({ __proto__: null, base16: xs2, base16upper: Os2 });
var Ns2 = f3({ prefix: "b", name: "base32", alphabet: "abcdefghijklmnopqrstuvwxyz234567", bitsPerChar: 5 });
var zs2 = f3({ prefix: "B", name: "base32upper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", bitsPerChar: 5 });
var Ls2 = f3({ prefix: "c", name: "base32pad", alphabet: "abcdefghijklmnopqrstuvwxyz234567=", bitsPerChar: 5 });
var $s2 = f3({ prefix: "C", name: "base32padupper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=", bitsPerChar: 5 });
var Fs2 = f3({ prefix: "v", name: "base32hex", alphabet: "0123456789abcdefghijklmnopqrstuv", bitsPerChar: 5 });
var Us2 = f3({ prefix: "V", name: "base32hexupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", bitsPerChar: 5 });
var Ks2 = f3({ prefix: "t", name: "base32hexpad", alphabet: "0123456789abcdefghijklmnopqrstuv=", bitsPerChar: 5 });
var Ms2 = f3({ prefix: "T", name: "base32hexpadupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=", bitsPerChar: 5 });
var ks2 = f3({ prefix: "h", name: "base32z", alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769", bitsPerChar: 5 });
var Bs2 = Object.freeze({ __proto__: null, base32: Ns2, base32upper: zs2, base32pad: Ls2, base32padupper: $s2, base32hex: Fs2, base32hexupper: Us2, base32hexpad: Ks2, base32hexpadupper: Ms2, base32z: ks2 });
var Vs2 = Y({ prefix: "k", name: "base36", alphabet: "0123456789abcdefghijklmnopqrstuvwxyz" });
var js2 = Y({ prefix: "K", name: "base36upper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" });
var qs2 = Object.freeze({ __proto__: null, base36: Vs2, base36upper: js2 });
var Gs2 = Y({ name: "base58btc", prefix: "z", alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz" });
var Hs2 = Y({ name: "base58flickr", prefix: "Z", alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ" });
var Ys2 = Object.freeze({ __proto__: null, base58btc: Gs2, base58flickr: Hs2 });
var Js2 = f3({ prefix: "m", name: "base64", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", bitsPerChar: 6 });
var Ws2 = f3({ prefix: "M", name: "base64pad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", bitsPerChar: 6 });
var Xs2 = f3({ prefix: "u", name: "base64url", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", bitsPerChar: 6 });
var Zs2 = f3({ prefix: "U", name: "base64urlpad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=", bitsPerChar: 6 });
var Qs2 = Object.freeze({ __proto__: null, base64: Js2, base64pad: Ws2, base64url: Xs2, base64urlpad: Zs2 });
var qe = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var er2 = qe.reduce((o4, e2, t) => (o4[t] = e2, o4), []);
var tr2 = qe.reduce((o4, e2, t) => (o4[e2.codePointAt(0)] = t, o4), []);
function ir2(o4) {
  return o4.reduce((e2, t) => (e2 += er2[t], e2), "");
}
function sr2(o4) {
  const e2 = [];
  for (const t of o4) {
    const s3 = tr2[t.codePointAt(0)];
    if (s3 === void 0) throw new Error(`Non-base256emoji character: ${t}`);
    e2.push(s3);
  }
  return new Uint8Array(e2);
}
var rr2 = re2({ prefix: "🚀", name: "base256emoji", encode: ir2, decode: sr2 });
var nr2 = Object.freeze({ __proto__: null, base256emoji: rr2 });
var or3 = He;
var Ge = 128;
var ar2 = 127;
var hr2 = ~ar2;
var cr2 = Math.pow(2, 31);
function He(o4, e2, t) {
  e2 = e2 || [], t = t || 0;
  for (var s3 = t; o4 >= cr2; ) e2[t++] = o4 & 255 | Ge, o4 /= 128;
  for (; o4 & hr2; ) e2[t++] = o4 & 255 | Ge, o4 >>>= 7;
  return e2[t] = o4 | 0, He.bytes = t - s3 + 1, e2;
}
var lr2 = De;
var ur2 = 128;
var Ye = 127;
function De(o4, s3) {
  var t = 0, s3 = s3 || 0, i4 = 0, r3 = s3, n5, a4 = o4.length;
  do {
    if (r3 >= a4) throw De.bytes = 0, new RangeError("Could not decode varint");
    n5 = o4[r3++], t += i4 < 28 ? (n5 & Ye) << i4 : (n5 & Ye) * Math.pow(2, i4), i4 += 7;
  } while (n5 >= ur2);
  return De.bytes = r3 - s3, t;
}
var dr2 = Math.pow(2, 7);
var gr2 = Math.pow(2, 14);
var pr2 = Math.pow(2, 21);
var yr2 = Math.pow(2, 28);
var Dr2 = Math.pow(2, 35);
var br2 = Math.pow(2, 42);
var mr2 = Math.pow(2, 49);
var fr2 = Math.pow(2, 56);
var _r2 = Math.pow(2, 63);
var Er2 = function(o4) {
  return o4 < dr2 ? 1 : o4 < gr2 ? 2 : o4 < pr2 ? 3 : o4 < yr2 ? 4 : o4 < Dr2 ? 5 : o4 < br2 ? 6 : o4 < mr2 ? 7 : o4 < fr2 ? 8 : o4 < _r2 ? 9 : 10;
};
var vr2 = { encode: or3, decode: lr2, encodingLength: Er2 };
var Je = vr2;
var We2 = (o4, e2, t = 0) => (Je.encode(o4, e2, t), e2);
var Xe2 = (o4) => Je.encodingLength(o4);
var be2 = (o4, e2) => {
  const t = e2.byteLength, s3 = Xe2(o4), i4 = s3 + Xe2(t), r3 = new Uint8Array(i4 + t);
  return We2(o4, r3, 0), We2(t, r3, s3), r3.set(e2, i4), new wr2(o4, t, e2, r3);
};
var wr2 = class {
  constructor(e2, t, s3, i4) {
    this.code = e2, this.size = t, this.digest = s3, this.bytes = i4;
  }
};
var Ze2 = ({ name: o4, code: e2, encode: t }) => new Ir2(o4, e2, t);
var Ir2 = class {
  constructor(e2, t, s3) {
    this.name = e2, this.code = t, this.encode = s3;
  }
  digest(e2) {
    if (e2 instanceof Uint8Array) {
      const t = this.encode(e2);
      return t instanceof Uint8Array ? be2(this.code, t) : t.then((s3) => be2(this.code, s3));
    } else throw Error("Unknown type, must be binary type");
  }
};
var Qe = (o4) => async (e2) => new Uint8Array(await crypto.subtle.digest(o4, e2));
var Tr2 = Ze2({ name: "sha2-256", code: 18, encode: Qe("SHA-256") });
var Cr2 = Ze2({ name: "sha2-512", code: 19, encode: Qe("SHA-512") });
var Sr2 = Object.freeze({ __proto__: null, sha256: Tr2, sha512: Cr2 });
var et = 0;
var Pr2 = "identity";
var tt = Ve;
var Rr2 = (o4) => be2(et, tt(o4));
var xr2 = { code: et, name: Pr2, encode: tt, digest: Rr2 };
var Or2 = Object.freeze({ __proto__: null, identity: xr2 });
new TextEncoder(), new TextDecoder();
var it = { ...ws2, ...Ts2, ...Ss2, ...Rs2, ...As2, ...Bs2, ...qs2, ...Ys2, ...Qs2, ...nr2 };
({ ...Sr2, ...Or2 });
function Ar2(o4 = 0) {
  return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? globalThis.Buffer.allocUnsafe(o4) : new Uint8Array(o4);
}
function st(o4, e2, t, s3) {
  return { name: o4, prefix: e2, encoder: { name: o4, prefix: e2, encode: t }, decoder: { decode: s3 } };
}
var rt = st("utf8", "u", (o4) => "u" + new TextDecoder("utf8").decode(o4), (o4) => new TextEncoder().encode(o4.substring(1)));
var me2 = st("ascii", "a", (o4) => {
  let e2 = "a";
  for (let t = 0; t < o4.length; t++) e2 += String.fromCharCode(o4[t]);
  return e2;
}, (o4) => {
  o4 = o4.substring(1);
  const e2 = Ar2(o4.length);
  for (let t = 0; t < o4.length; t++) e2[t] = o4.charCodeAt(t);
  return e2;
});
var Nr2 = { utf8: rt, "utf-8": rt, hex: it.base16, latin1: me2, ascii: me2, binary: me2, ...it };
function zr2(o4, e2 = "utf8") {
  const t = Nr2[e2];
  if (!t) throw new Error(`Unsupported encoding "${e2}"`);
  return (e2 === "utf8" || e2 === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(o4, "utf8") : t.decoder.decode(`${t.prefix}${o4}`);
}
var fe2 = "wc";
var _e2 = 2;
var ne2 = "core";
var O3 = `${fe2}@2:${ne2}:`;
var nt = { name: ne2, logger: "error" };
var ot = { database: ":memory:" };
var at = "crypto";
var Ee = "client_ed25519_seed";
var ht = import_time4.ONE_DAY;
var ct = "keychain";
var lt = "0.3";
var ut = "messages";
var dt = "0.3";
var gt = import_time4.SIX_HOURS;
var pt = "publisher";
var yt = "irn";
var Dt2 = "error";
var ve2 = "wss://relay.walletconnect.org";
var bt = "relayer";
var w3 = { message: "relayer_message", message_ack: "relayer_message_ack", connect: "relayer_connect", disconnect: "relayer_disconnect", error: "relayer_error", connection_stalled: "relayer_connection_stalled", transport_closed: "relayer_transport_closed", publish: "relayer_publish" };
var mt = "_subscription";
var I2 = { payload: "payload", connect: "connect", disconnect: "disconnect", error: "error" };
var ft = 0.1;
var we2 = "2.15.2";
var _t = 1e4;
var Et = "0.3";
var vt = "WALLETCONNECT_CLIENT_ID";
var A2 = { created: "subscription_created", deleted: "subscription_deleted", expired: "subscription_expired", disabled: "subscription_disabled", sync: "subscription_sync", resubscribed: "subscription_resubscribed" };
var wt = "subscription";
var It = "0.3";
var Tt2 = import_time4.FIVE_SECONDS * 1e3;
var Ct = "pairing";
var St = "0.3";
var V2 = { wc_pairingDelete: { req: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1e3 }, res: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1001 } }, wc_pairingPing: { req: { ttl: import_time4.THIRTY_SECONDS, prompt: false, tag: 1002 }, res: { ttl: import_time4.THIRTY_SECONDS, prompt: false, tag: 1003 } }, unregistered_method: { req: { ttl: import_time4.ONE_DAY, prompt: false, tag: 0 }, res: { ttl: import_time4.ONE_DAY, prompt: false, tag: 0 } } };
var J = { create: "pairing_create", expire: "pairing_expire", delete: "pairing_delete", ping: "pairing_ping" };
var P = { created: "history_created", updated: "history_updated", deleted: "history_deleted", sync: "history_sync" };
var Pt = "history";
var Rt = "0.3";
var xt = "expirer";
var R = { created: "expirer_created", deleted: "expirer_deleted", expired: "expirer_expired", sync: "expirer_sync" };
var Ot2 = "0.3";
var At = "verify-api";
var Kr2 = "https://verify.walletconnect.com";
var Nt = "https://verify.walletconnect.org";
var W = Nt;
var zt2 = `${W}/v3`;
var Lt2 = [Kr2, Nt];
var $t2 = "echo";
var Ft2 = "https://echo.walletconnect.com";
var L3 = { pairing_started: "pairing_started", pairing_uri_validation_success: "pairing_uri_validation_success", pairing_uri_not_expired: "pairing_uri_not_expired", store_new_pairing: "store_new_pairing", subscribing_pairing_topic: "subscribing_pairing_topic", subscribe_pairing_topic_success: "subscribe_pairing_topic_success", existing_pairing: "existing_pairing", pairing_not_expired: "pairing_not_expired", emit_inactive_pairing: "emit_inactive_pairing", emit_session_proposal: "emit_session_proposal", subscribing_to_pairing_topic: "subscribing_to_pairing_topic" };
var F = { no_wss_connection: "no_wss_connection", no_internet_connection: "no_internet_connection", malformed_pairing_uri: "malformed_pairing_uri", active_pairing_already_exists: "active_pairing_already_exists", subscribe_pairing_topic_failure: "subscribe_pairing_topic_failure", pairing_expired: "pairing_expired", proposal_expired: "proposal_expired", proposal_listener_not_found: "proposal_listener_not_found" };
var kr2 = { session_approve_started: "session_approve_started", proposal_not_expired: "proposal_not_expired", session_namespaces_validation_success: "session_namespaces_validation_success", create_session_topic: "create_session_topic", subscribing_session_topic: "subscribing_session_topic", subscribe_session_topic_success: "subscribe_session_topic_success", publishing_session_approve: "publishing_session_approve", session_approve_publish_success: "session_approve_publish_success", store_session: "store_session", publishing_session_settle: "publishing_session_settle", session_settle_publish_success: "session_settle_publish_success" };
var Br = { no_internet_connection: "no_internet_connection", no_wss_connection: "no_wss_connection", proposal_expired: "proposal_expired", subscribe_session_topic_failure: "subscribe_session_topic_failure", session_approve_publish_failure: "session_approve_publish_failure", session_settle_publish_failure: "session_settle_publish_failure", session_approve_namespace_validation_failure: "session_approve_namespace_validation_failure", proposal_not_found: "proposal_not_found" };
var Vr2 = { authenticated_session_approve_started: "authenticated_session_approve_started", authenticated_session_not_expired: "authenticated_session_not_expired", chains_caip2_compliant: "chains_caip2_compliant", chains_evm_compliant: "chains_evm_compliant", create_authenticated_session_topic: "create_authenticated_session_topic", cacaos_verified: "cacaos_verified", store_authenticated_session: "store_authenticated_session", subscribing_authenticated_session_topic: "subscribing_authenticated_session_topic", subscribe_authenticated_session_topic_success: "subscribe_authenticated_session_topic_success", publishing_authenticated_session_approve: "publishing_authenticated_session_approve", authenticated_session_approve_publish_success: "authenticated_session_approve_publish_success" };
var jr2 = { no_internet_connection: "no_internet_connection", no_wss_connection: "no_wss_connection", missing_session_authenticate_request: "missing_session_authenticate_request", session_authenticate_request_expired: "session_authenticate_request_expired", chains_caip2_compliant_failure: "chains_caip2_compliant_failure", chains_evm_compliant_failure: "chains_evm_compliant_failure", invalid_cacao: "invalid_cacao", subscribe_authenticated_session_topic_failure: "subscribe_authenticated_session_topic_failure", authenticated_session_approve_publish_failure: "authenticated_session_approve_publish_failure", authenticated_session_pending_request_not_found: "authenticated_session_pending_request_not_found" };
var Ut2 = 0.1;
var Kt2 = "event-client";
var Mt = 86400;
var kt2 = "https://pulse.walletconnect.com/batch";
var Bt = class {
  constructor(e2, t) {
    this.core = e2, this.logger = t, this.keychain = /* @__PURE__ */ new Map(), this.name = ct, this.version = lt, this.initialized = false, this.storagePrefix = O3, this.init = async () => {
      if (!this.initialized) {
        const s3 = await this.getKeyChain();
        typeof s3 < "u" && (this.keychain = s3), this.initialized = true;
      }
    }, this.has = (s3) => (this.isInitialized(), this.keychain.has(s3)), this.set = async (s3, i4) => {
      this.isInitialized(), this.keychain.set(s3, i4), await this.persist();
    }, this.get = (s3) => {
      this.isInitialized();
      const i4 = this.keychain.get(s3);
      if (typeof i4 > "u") {
        const { message: r3 } = xe("NO_MATCHING_KEY", `${this.name}: ${s3}`);
        throw new Error(r3);
      }
      return i4;
    }, this.del = async (s3) => {
      this.isInitialized(), this.keychain.delete(s3), await this.persist();
    }, this.core = e2, this.logger = E2(t, this.name);
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  async setKeyChain(e2) {
    await this.core.storage.setItem(this.storageKey, as(e2));
  }
  async getKeyChain() {
    const e2 = await this.core.storage.getItem(this.storageKey);
    return typeof e2 < "u" ? us(e2) : void 0;
  }
  async persist() {
    await this.setKeyChain(this.keychain);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var Vt = class {
  constructor(e2, t, s3) {
    this.core = e2, this.logger = t, this.name = at, this.randomSessionIdentifier = Cu(), this.initialized = false, this.init = async () => {
      this.initialized || (await this.keychain.init(), this.initialized = true);
    }, this.hasKeys = (i4) => (this.isInitialized(), this.keychain.has(i4)), this.getClientId = async () => {
      this.isInitialized();
      const i4 = await this.getClientSeed(), r3 = generateKeyPair(i4);
      return encodeIss(r3.publicKey);
    }, this.generateKeyPair = () => {
      this.isInitialized();
      const i4 = Bu();
      return this.setPrivateKey(i4.publicKey, i4.privateKey);
    }, this.signJWT = async (i4) => {
      this.isInitialized();
      const r3 = await this.getClientSeed(), n5 = generateKeyPair(r3), a4 = this.randomSessionIdentifier, h5 = ht;
      return await signJWT(a4, i4, h5, n5);
    }, this.generateSharedKey = (i4, r3, n5) => {
      this.isInitialized();
      const a4 = this.getPrivateKey(i4), h5 = Ru(a4, r3);
      return this.setSymKey(h5, n5);
    }, this.setSymKey = async (i4, r3) => {
      this.isInitialized();
      const n5 = r3 || Ou(i4);
      return await this.keychain.set(n5, i4), n5;
    }, this.deleteKeyPair = async (i4) => {
      this.isInitialized(), await this.keychain.del(i4);
    }, this.deleteSymKey = async (i4) => {
      this.isInitialized(), await this.keychain.del(i4);
    }, this.encode = async (i4, r3, n5) => {
      this.isInitialized();
      const a4 = no(n5), h5 = safeJsonStringify(r3);
      if (Uu(a4)) {
        const b3 = a4.senderPublicKey, m2 = a4.receiverPublicKey;
        i4 = await this.generateSharedKey(b3, m2);
      }
      const c5 = this.getSymKey(i4), { type: d3, senderPublicKey: g3 } = a4;
      return Du({ type: d3, symKey: c5, message: h5, senderPublicKey: g3 });
    }, this.decode = async (i4, r3, n5) => {
      this.isInitialized();
      const a4 = Tu(r3, n5);
      if (Uu(a4)) {
        const h5 = a4.receiverPublicKey, c5 = a4.senderPublicKey;
        i4 = await this.generateSharedKey(h5, c5);
      }
      try {
        const h5 = this.getSymKey(i4), c5 = Fu({ symKey: h5, encoded: r3 });
        return safeJsonParse(c5);
      } catch (h5) {
        this.logger.error(`Failed to decode message from topic: '${i4}', clientId: '${await this.getClientId()}'`), this.logger.error(h5);
      }
    }, this.getPayloadType = (i4) => {
      const r3 = Xi(i4);
      return Mr(r3.type);
    }, this.getPayloadSenderPublicKey = (i4) => {
      const r3 = Xi(i4);
      return r3.senderPublicKey ? toString3(r3.senderPublicKey, zt) : void 0;
    }, this.core = e2, this.logger = E2(t, this.name), this.keychain = s3 || new Bt(this.core, this.logger);
  }
  get context() {
    return y2(this.logger);
  }
  async setPrivateKey(e2, t) {
    return await this.keychain.set(e2, t), e2;
  }
  getPrivateKey(e2) {
    return this.keychain.get(e2);
  }
  async getClientSeed() {
    let e2 = "";
    try {
      e2 = this.keychain.get(Ee);
    } catch {
      e2 = Cu(), await this.keychain.set(Ee, e2);
    }
    return zr2(e2, "base16");
  }
  getSymKey(e2) {
    return this.keychain.get(e2);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var jt2 = class extends a2 {
  constructor(e2, t) {
    super(e2, t), this.logger = e2, this.core = t, this.messages = /* @__PURE__ */ new Map(), this.name = ut, this.version = dt, this.initialized = false, this.storagePrefix = O3, this.init = async () => {
      if (!this.initialized) {
        this.logger.trace("Initialized");
        try {
          const s3 = await this.getRelayerMessages();
          typeof s3 < "u" && (this.messages = s3), this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", size: this.messages.size });
        } catch (s3) {
          this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(s3);
        } finally {
          this.initialized = true;
        }
      }
    }, this.set = async (s3, i4) => {
      this.isInitialized();
      const r3 = Pu(i4);
      let n5 = this.messages.get(s3);
      return typeof n5 > "u" && (n5 = {}), typeof n5[r3] < "u" || (n5[r3] = i4, this.messages.set(s3, n5), await this.persist()), r3;
    }, this.get = (s3) => {
      this.isInitialized();
      let i4 = this.messages.get(s3);
      return typeof i4 > "u" && (i4 = {}), i4;
    }, this.has = (s3, i4) => {
      this.isInitialized();
      const r3 = this.get(s3), n5 = Pu(i4);
      return typeof r3[n5] < "u";
    }, this.del = async (s3) => {
      this.isInitialized(), this.messages.delete(s3), await this.persist();
    }, this.logger = E2(e2, this.name), this.core = t;
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  async setRelayerMessages(e2) {
    await this.core.storage.setItem(this.storageKey, as(e2));
  }
  async getRelayerMessages() {
    const e2 = await this.core.storage.getItem(this.storageKey);
    return typeof e2 < "u" ? us(e2) : void 0;
  }
  async persist() {
    await this.setRelayerMessages(this.messages);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var qr2 = class extends g2 {
  constructor(e2, t) {
    super(e2, t), this.relayer = e2, this.logger = t, this.events = new import_events7.EventEmitter(), this.name = pt, this.queue = /* @__PURE__ */ new Map(), this.publishTimeout = (0, import_time4.toMiliseconds)(import_time4.ONE_MINUTE), this.failedPublishTimeout = (0, import_time4.toMiliseconds)(import_time4.ONE_SECOND), this.needsTransportRestart = false, this.publish = async (s3, i4, r3) => {
      var n5;
      this.logger.debug("Publishing Payload"), this.logger.trace({ type: "method", method: "publish", params: { topic: s3, message: i4, opts: r3 } });
      const a4 = (r3 == null ? void 0 : r3.ttl) || gt, h5 = Hu(r3), c5 = (r3 == null ? void 0 : r3.prompt) || false, d3 = (r3 == null ? void 0 : r3.tag) || 0, g3 = (r3 == null ? void 0 : r3.id) || getBigIntRpcId().toString(), b3 = { topic: s3, message: i4, opts: { ttl: a4, relay: h5, prompt: c5, tag: d3, id: g3, attestation: r3 == null ? void 0 : r3.attestation } }, m2 = `Failed to publish payload, please try again. id:${g3} tag:${d3}`, l4 = Date.now();
      let p3, _3 = 1;
      try {
        for (; p3 === void 0; ) {
          if (Date.now() - l4 > this.publishTimeout) throw new Error(m2);
          this.logger.trace({ id: g3, attempts: _3 }, `publisher.publish - attempt ${_3}`), p3 = await await ps(this.rpcPublish(s3, i4, a4, h5, c5, d3, g3, r3 == null ? void 0 : r3.attestation).catch((D2) => this.logger.warn(D2)), this.publishTimeout, m2), _3++, p3 || await new Promise((D2) => setTimeout(D2, this.failedPublishTimeout));
        }
        this.relayer.events.emit(w3.publish, b3), this.logger.debug("Successfully Published Payload"), this.logger.trace({ type: "method", method: "publish", params: { id: g3, topic: s3, message: i4, opts: r3 } });
      } catch (D2) {
        if (this.logger.debug("Failed to Publish Payload"), this.logger.error(D2), (n5 = r3 == null ? void 0 : r3.internal) != null && n5.throwOnFailedPublish) throw D2;
        this.queue.set(g3, b3);
      }
    }, this.on = (s3, i4) => {
      this.events.on(s3, i4);
    }, this.once = (s3, i4) => {
      this.events.once(s3, i4);
    }, this.off = (s3, i4) => {
      this.events.off(s3, i4);
    }, this.removeListener = (s3, i4) => {
      this.events.removeListener(s3, i4);
    }, this.relayer = e2, this.logger = E2(t, this.name), this.registerEventListeners();
  }
  get context() {
    return y2(this.logger);
  }
  rpcPublish(e2, t, s3, i4, r3, n5, a4, h5) {
    var c5, d3, g3, b3;
    const m2 = { method: zu(i4.protocol).publish, params: { topic: e2, message: t, ttl: s3, prompt: r3, tag: n5, attestation: h5 }, id: a4 };
    return Pe((c5 = m2.params) == null ? void 0 : c5.prompt) && ((d3 = m2.params) == null || delete d3.prompt), Pe((g3 = m2.params) == null ? void 0 : g3.tag) && ((b3 = m2.params) == null || delete b3.tag), this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "message", direction: "outgoing", request: m2 }), this.relayer.request(m2);
  }
  removeRequestFromQueue(e2) {
    this.queue.delete(e2);
  }
  checkQueue() {
    this.queue.forEach(async (e2) => {
      const { topic: t, message: s3, opts: i4 } = e2;
      await this.publish(t, s3, i4);
    });
  }
  registerEventListeners() {
    this.relayer.core.heartbeat.on(r.pulse, () => {
      if (this.needsTransportRestart) {
        this.needsTransportRestart = false, this.relayer.events.emit(w3.connection_stalled);
        return;
      }
      this.checkQueue();
    }), this.relayer.on(w3.message_ack, (e2) => {
      this.removeRequestFromQueue(e2.id.toString());
    });
  }
};
var Gr2 = class {
  constructor() {
    this.map = /* @__PURE__ */ new Map(), this.set = (e2, t) => {
      const s3 = this.get(e2);
      this.exists(e2, t) || this.map.set(e2, [...s3, t]);
    }, this.get = (e2) => this.map.get(e2) || [], this.exists = (e2, t) => this.get(e2).includes(t), this.delete = (e2, t) => {
      if (typeof t > "u") {
        this.map.delete(e2);
        return;
      }
      if (!this.map.has(e2)) return;
      const s3 = this.get(e2);
      if (!this.exists(e2, t)) return;
      const i4 = s3.filter((r3) => r3 !== t);
      if (!i4.length) {
        this.map.delete(e2);
        return;
      }
      this.map.set(e2, i4);
    }, this.clear = () => {
      this.map.clear();
    };
  }
  get topics() {
    return Array.from(this.map.keys());
  }
};
var Hr2 = Object.defineProperty;
var Yr2 = Object.defineProperties;
var Jr2 = Object.getOwnPropertyDescriptors;
var qt2 = Object.getOwnPropertySymbols;
var Wr = Object.prototype.hasOwnProperty;
var Xr = Object.prototype.propertyIsEnumerable;
var Gt2 = (o4, e2, t) => e2 in o4 ? Hr2(o4, e2, { enumerable: true, configurable: true, writable: true, value: t }) : o4[e2] = t;
var X = (o4, e2) => {
  for (var t in e2 || (e2 = {})) Wr.call(e2, t) && Gt2(o4, t, e2[t]);
  if (qt2) for (var t of qt2(e2)) Xr.call(e2, t) && Gt2(o4, t, e2[t]);
  return o4;
};
var Ie = (o4, e2) => Yr2(o4, Jr2(e2));
var Ht2 = class extends d2 {
  constructor(e2, t) {
    super(e2, t), this.relayer = e2, this.logger = t, this.subscriptions = /* @__PURE__ */ new Map(), this.topicMap = new Gr2(), this.events = new import_events7.EventEmitter(), this.name = wt, this.version = It, this.pending = /* @__PURE__ */ new Map(), this.cached = [], this.initialized = false, this.pendingSubscriptionWatchLabel = "pending_sub_watch_label", this.pollingInterval = 20, this.storagePrefix = O3, this.subscribeTimeout = (0, import_time4.toMiliseconds)(import_time4.ONE_MINUTE), this.restartInProgress = false, this.batchSubscribeTopicsLimit = 500, this.pendingBatchMessages = [], this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), this.registerEventListeners(), this.clientId = await this.relayer.core.crypto.getClientId());
    }, this.subscribe = async (s3, i4) => {
      await this.restartToComplete(), this.isInitialized(), this.logger.debug("Subscribing Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: s3, opts: i4 } });
      try {
        const r3 = Hu(i4), n5 = { topic: s3, relay: r3 };
        this.pending.set(s3, n5);
        const a4 = await this.rpcSubscribe(s3, r3);
        return typeof a4 == "string" && (this.onSubscribe(a4, n5), this.logger.debug("Successfully Subscribed Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: s3, opts: i4 } })), a4;
      } catch (r3) {
        throw this.logger.debug("Failed to Subscribe Topic"), this.logger.error(r3), r3;
      }
    }, this.unsubscribe = async (s3, i4) => {
      await this.restartToComplete(), this.isInitialized(), typeof (i4 == null ? void 0 : i4.id) < "u" ? await this.unsubscribeById(s3, i4.id, i4) : await this.unsubscribeByTopic(s3, i4);
    }, this.isSubscribed = async (s3) => {
      if (this.topics.includes(s3)) return true;
      const i4 = `${this.pendingSubscriptionWatchLabel}_${s3}`;
      return await new Promise((r3, n5) => {
        const a4 = new import_time4.Watch();
        a4.start(i4);
        const h5 = setInterval(() => {
          !this.pending.has(s3) && this.topics.includes(s3) && (clearInterval(h5), a4.stop(i4), r3(true)), a4.elapsed(i4) >= Tt2 && (clearInterval(h5), a4.stop(i4), n5(new Error("Subscription resolution timeout")));
        }, this.pollingInterval);
      }).catch(() => false);
    }, this.on = (s3, i4) => {
      this.events.on(s3, i4);
    }, this.once = (s3, i4) => {
      this.events.once(s3, i4);
    }, this.off = (s3, i4) => {
      this.events.off(s3, i4);
    }, this.removeListener = (s3, i4) => {
      this.events.removeListener(s3, i4);
    }, this.start = async () => {
      await this.onConnect();
    }, this.stop = async () => {
      await this.onDisconnect();
    }, this.restart = async () => {
      this.restartInProgress = true, await this.restore(), await this.reset(), this.restartInProgress = false;
    }, this.relayer = e2, this.logger = E2(t, this.name), this.clientId = "";
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + "//" + this.name;
  }
  get length() {
    return this.subscriptions.size;
  }
  get ids() {
    return Array.from(this.subscriptions.keys());
  }
  get values() {
    return Array.from(this.subscriptions.values());
  }
  get topics() {
    return this.topicMap.topics;
  }
  hasSubscription(e2, t) {
    let s3 = false;
    try {
      s3 = this.getSubscription(e2).topic === t;
    } catch {
    }
    return s3;
  }
  onEnable() {
    this.cached = [], this.initialized = true;
  }
  onDisable() {
    this.cached = this.values, this.subscriptions.clear(), this.topicMap.clear();
  }
  async unsubscribeByTopic(e2, t) {
    const s3 = this.topicMap.get(e2);
    await Promise.all(s3.map(async (i4) => await this.unsubscribeById(e2, i4, t)));
  }
  async unsubscribeById(e2, t, s3) {
    this.logger.debug("Unsubscribing Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e2, id: t, opts: s3 } });
    try {
      const i4 = Hu(s3);
      await this.rpcUnsubscribe(e2, t, i4);
      const r3 = tr("USER_DISCONNECTED", `${this.name}, ${e2}`);
      await this.onUnsubscribe(e2, t, r3), this.logger.debug("Successfully Unsubscribed Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e2, id: t, opts: s3 } });
    } catch (i4) {
      throw this.logger.debug("Failed to Unsubscribe Topic"), this.logger.error(i4), i4;
    }
  }
  async rpcSubscribe(e2, t) {
    const s3 = { method: zu(t.protocol).subscribe, params: { topic: e2 } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: s3 });
    try {
      return await await ps(this.relayer.request(s3).catch((i4) => this.logger.warn(i4)), this.subscribeTimeout) ? Pu(e2 + this.clientId) : null;
    } catch {
      this.logger.debug("Outgoing Relay Subscribe Payload stalled"), this.relayer.events.emit(w3.connection_stalled);
    }
    return null;
  }
  async rpcBatchSubscribe(e2) {
    if (!e2.length) return;
    const t = e2[0].relay, s3 = { method: zu(t.protocol).batchSubscribe, params: { topics: e2.map((i4) => i4.topic) } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: s3 });
    try {
      return await await ps(this.relayer.request(s3).catch((i4) => this.logger.warn(i4)), this.subscribeTimeout);
    } catch {
      this.relayer.events.emit(w3.connection_stalled);
    }
  }
  async rpcBatchFetchMessages(e2) {
    if (!e2.length) return;
    const t = e2[0].relay, s3 = { method: zu(t.protocol).batchFetchMessages, params: { topics: e2.map((r3) => r3.topic) } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: s3 });
    let i4;
    try {
      i4 = await await ps(this.relayer.request(s3).catch((r3) => this.logger.warn(r3)), this.subscribeTimeout);
    } catch {
      this.relayer.events.emit(w3.connection_stalled);
    }
    return i4;
  }
  rpcUnsubscribe(e2, t, s3) {
    const i4 = { method: zu(s3.protocol).unsubscribe, params: { topic: e2, id: t } };
    return this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i4 }), this.relayer.request(i4);
  }
  onSubscribe(e2, t) {
    this.setSubscription(e2, Ie(X({}, t), { id: e2 })), this.pending.delete(t.topic);
  }
  onBatchSubscribe(e2) {
    e2.length && e2.forEach((t) => {
      this.setSubscription(t.id, X({}, t)), this.pending.delete(t.topic);
    });
  }
  async onUnsubscribe(e2, t, s3) {
    this.events.removeAllListeners(t), this.hasSubscription(t, e2) && this.deleteSubscription(t, s3), await this.relayer.messages.del(e2);
  }
  async setRelayerSubscriptions(e2) {
    await this.relayer.core.storage.setItem(this.storageKey, e2);
  }
  async getRelayerSubscriptions() {
    return await this.relayer.core.storage.getItem(this.storageKey);
  }
  setSubscription(e2, t) {
    this.logger.debug("Setting subscription"), this.logger.trace({ type: "method", method: "setSubscription", id: e2, subscription: t }), this.addSubscription(e2, t);
  }
  addSubscription(e2, t) {
    this.subscriptions.set(e2, X({}, t)), this.topicMap.set(t.topic, e2), this.events.emit(A2.created, t);
  }
  getSubscription(e2) {
    this.logger.debug("Getting subscription"), this.logger.trace({ type: "method", method: "getSubscription", id: e2 });
    const t = this.subscriptions.get(e2);
    if (!t) {
      const { message: s3 } = xe("NO_MATCHING_KEY", `${this.name}: ${e2}`);
      throw new Error(s3);
    }
    return t;
  }
  deleteSubscription(e2, t) {
    this.logger.debug("Deleting subscription"), this.logger.trace({ type: "method", method: "deleteSubscription", id: e2, reason: t });
    const s3 = this.getSubscription(e2);
    this.subscriptions.delete(e2), this.topicMap.delete(s3.topic, e2), this.events.emit(A2.deleted, Ie(X({}, s3), { reason: t }));
  }
  async persist() {
    await this.setRelayerSubscriptions(this.values), this.events.emit(A2.sync);
  }
  async reset() {
    if (this.cached.length) {
      const e2 = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);
      for (let t = 0; t < e2; t++) {
        const s3 = this.cached.splice(0, this.batchSubscribeTopicsLimit);
        await this.batchFetchMessages(s3), await this.batchSubscribe(s3);
      }
    }
    this.events.emit(A2.resubscribed);
  }
  async restore() {
    try {
      const e2 = await this.getRelayerSubscriptions();
      if (typeof e2 > "u" || !e2.length) return;
      if (this.subscriptions.size) {
        const { message: t } = xe("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`), new Error(t);
      }
      this.cached = e2, this.logger.debug(`Successfully Restored subscriptions for ${this.name}`), this.logger.trace({ type: "method", method: "restore", subscriptions: this.values });
    } catch (e2) {
      this.logger.debug(`Failed to Restore subscriptions for ${this.name}`), this.logger.error(e2);
    }
  }
  async batchSubscribe(e2) {
    if (!e2.length) return;
    const t = await this.rpcBatchSubscribe(e2);
    Er(t) && this.onBatchSubscribe(t.map((s3, i4) => Ie(X({}, e2[i4]), { id: s3 })));
  }
  async batchFetchMessages(e2) {
    if (!e2.length) return;
    this.logger.trace(`Fetching batch messages for ${e2.length} subscriptions`);
    const t = await this.rpcBatchFetchMessages(e2);
    t && t.messages && (this.pendingBatchMessages = this.pendingBatchMessages.concat(t.messages));
  }
  async onConnect() {
    await this.restart(), this.onEnable();
  }
  onDisconnect() {
    this.onDisable();
  }
  async checkPending() {
    if (!this.initialized || !this.relayer.connected) return;
    const e2 = [];
    this.pending.forEach((t) => {
      e2.push(t);
    }), await this.batchSubscribe(e2), this.pendingBatchMessages.length && (await this.relayer.handleBatchMessageEvents(this.pendingBatchMessages), this.pendingBatchMessages = []);
  }
  registerEventListeners() {
    this.relayer.core.heartbeat.on(r.pulse, async () => {
      await this.checkPending();
    }), this.events.on(A2.created, async (e2) => {
      const t = A2.created;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e2 }), await this.persist();
    }), this.events.on(A2.deleted, async (e2) => {
      const t = A2.deleted;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e2 }), await this.persist();
    });
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
  async restartToComplete() {
    this.restartInProgress && await new Promise((e2) => {
      const t = setInterval(() => {
        this.restartInProgress || (clearInterval(t), e2());
      }, this.pollingInterval);
    });
  }
};
var Zr = Object.defineProperty;
var Yt = Object.getOwnPropertySymbols;
var Qr2 = Object.prototype.hasOwnProperty;
var en2 = Object.prototype.propertyIsEnumerable;
var Jt2 = (o4, e2, t) => e2 in o4 ? Zr(o4, e2, { enumerable: true, configurable: true, writable: true, value: t }) : o4[e2] = t;
var tn2 = (o4, e2) => {
  for (var t in e2 || (e2 = {})) Qr2.call(e2, t) && Jt2(o4, t, e2[t]);
  if (Yt) for (var t of Yt(e2)) en2.call(e2, t) && Jt2(o4, t, e2[t]);
  return o4;
};
var Wt2 = class extends u {
  constructor(e2) {
    super(e2), this.protocol = "wc", this.version = 2, this.events = new import_events7.EventEmitter(), this.name = bt, this.transportExplicitlyClosed = false, this.initialized = false, this.connectionAttemptInProgress = false, this.connectionStatusPollingInterval = 20, this.staleConnectionErrors = ["socket hang up", "stalled", "interrupted"], this.hasExperiencedNetworkDisruption = false, this.requestsInFlight = /* @__PURE__ */ new Map(), this.heartBeatTimeout = (0, import_time4.toMiliseconds)(import_time4.THIRTY_SECONDS + import_time4.ONE_SECOND), this.request = async (t) => {
      var s3, i4;
      this.logger.debug("Publishing Request Payload");
      const r3 = t.id || getBigIntRpcId().toString();
      await this.toEstablishConnection();
      try {
        const n5 = this.provider.request(t);
        this.requestsInFlight.set(r3, { promise: n5, request: t }), this.logger.trace({ id: r3, method: t.method, topic: (s3 = t.params) == null ? void 0 : s3.topic }, "relayer.request - attempt to publish...");
        const a4 = await new Promise(async (h5, c5) => {
          const d3 = () => {
            c5(new Error(`relayer.request - publish interrupted, id: ${r3}`));
          };
          this.provider.on(I2.disconnect, d3);
          const g3 = await n5;
          this.provider.off(I2.disconnect, d3), h5(g3);
        });
        return this.logger.trace({ id: r3, method: t.method, topic: (i4 = t.params) == null ? void 0 : i4.topic }, "relayer.request - published"), a4;
      } catch (n5) {
        throw this.logger.debug(`Failed to Publish Request: ${r3}`), n5;
      } finally {
        this.requestsInFlight.delete(r3);
      }
    }, this.resetPingTimeout = () => {
      if (pi()) try {
        clearTimeout(this.pingTimeout), this.pingTimeout = setTimeout(() => {
          var t, s3, i4;
          (i4 = (s3 = (t = this.provider) == null ? void 0 : t.connection) == null ? void 0 : s3.socket) == null || i4.terminate();
        }, this.heartBeatTimeout);
      } catch (t) {
        this.logger.warn(t);
      }
    }, this.onPayloadHandler = (t) => {
      this.onProviderPayload(t), this.resetPingTimeout();
    }, this.onConnectHandler = () => {
      this.logger.trace("relayer connected"), this.startPingTimeout(), this.events.emit(w3.connect);
    }, this.onDisconnectHandler = () => {
      this.logger.trace("relayer disconnected"), this.onProviderDisconnect();
    }, this.onProviderErrorHandler = (t) => {
      this.logger.error(t), this.events.emit(w3.error, t), this.logger.info("Fatal socket error received, closing transport"), this.transportClose();
    }, this.registerProviderListeners = () => {
      this.provider.on(I2.payload, this.onPayloadHandler), this.provider.on(I2.connect, this.onConnectHandler), this.provider.on(I2.disconnect, this.onDisconnectHandler), this.provider.on(I2.error, this.onProviderErrorHandler);
    }, this.core = e2.core, this.logger = typeof e2.logger < "u" && typeof e2.logger != "string" ? E2(e2.logger, this.name) : (0, import_pino2.default)(k2({ level: e2.logger || Dt2 })), this.messages = new jt2(this.logger, e2.core), this.subscriber = new Ht2(this, this.logger), this.publisher = new qr2(this, this.logger), this.relayUrl = (e2 == null ? void 0 : e2.relayUrl) || ve2, this.projectId = e2.projectId, this.bundleId = es(), this.provider = {};
  }
  async init() {
    this.logger.trace("Initialized"), this.registerEventListeners(), await Promise.all([this.messages.init(), this.subscriber.init()]), await this.transportOpen(), this.initialized = true, setTimeout(async () => {
      this.subscriber.topics.length === 0 && this.subscriber.pending.size === 0 && (this.logger.info("No topics subscribed to after init, closing transport"), await this.transportClose(), this.transportExplicitlyClosed = false);
    }, _t);
  }
  get context() {
    return y2(this.logger);
  }
  get connected() {
    var e2, t, s3;
    return ((s3 = (t = (e2 = this.provider) == null ? void 0 : e2.connection) == null ? void 0 : t.socket) == null ? void 0 : s3.readyState) === 1;
  }
  get connecting() {
    var e2, t, s3;
    return ((s3 = (t = (e2 = this.provider) == null ? void 0 : e2.connection) == null ? void 0 : t.socket) == null ? void 0 : s3.readyState) === 0;
  }
  async publish(e2, t, s3) {
    this.isInitialized(), await this.publisher.publish(e2, t, s3), await this.recordMessageEvent({ topic: e2, message: t, publishedAt: Date.now() });
  }
  async subscribe(e2, t) {
    var s3;
    this.isInitialized();
    let i4 = ((s3 = this.subscriber.topicMap.get(e2)) == null ? void 0 : s3[0]) || "", r3;
    const n5 = (a4) => {
      a4.topic === e2 && (this.subscriber.off(A2.created, n5), r3());
    };
    return await Promise.all([new Promise((a4) => {
      r3 = a4, this.subscriber.on(A2.created, n5);
    }), new Promise(async (a4) => {
      i4 = await this.subscriber.subscribe(e2, t) || i4, a4();
    })]), i4;
  }
  async unsubscribe(e2, t) {
    this.isInitialized(), await this.subscriber.unsubscribe(e2, t);
  }
  on(e2, t) {
    this.events.on(e2, t);
  }
  once(e2, t) {
    this.events.once(e2, t);
  }
  off(e2, t) {
    this.events.off(e2, t);
  }
  removeListener(e2, t) {
    this.events.removeListener(e2, t);
  }
  async transportDisconnect() {
    if (!this.hasExperiencedNetworkDisruption && this.connected && this.requestsInFlight.size > 0) try {
      await Promise.all(Array.from(this.requestsInFlight.values()).map((e2) => e2.promise));
    } catch (e2) {
      this.logger.warn(e2);
    }
    this.hasExperiencedNetworkDisruption || this.connected ? await ps(this.provider.disconnect(), 2e3, "provider.disconnect()").catch(() => this.onProviderDisconnect()) : this.onProviderDisconnect();
  }
  async transportClose() {
    this.transportExplicitlyClosed = true, await this.transportDisconnect();
  }
  async transportOpen(e2) {
    await this.confirmOnlineStateOrThrow(), e2 && e2 !== this.relayUrl && (this.relayUrl = e2, await this.transportDisconnect()), await this.createProvider(), this.connectionAttemptInProgress = true, this.transportExplicitlyClosed = false;
    try {
      await new Promise(async (t, s3) => {
        const i4 = () => {
          this.provider.off(I2.disconnect, i4), s3(new Error("Connection interrupted while trying to subscribe"));
        };
        this.provider.on(I2.disconnect, i4), await ps(this.provider.connect(), (0, import_time4.toMiliseconds)(import_time4.ONE_MINUTE), `Socket stalled when trying to connect to ${this.relayUrl}`).catch((r3) => {
          s3(r3);
        }).finally(() => {
          clearTimeout(this.reconnectTimeout), this.reconnectTimeout = void 0;
        }), this.subscriber.start().catch((r3) => {
          this.logger.error(r3), this.onDisconnectHandler();
        }), this.hasExperiencedNetworkDisruption = false, t();
      });
    } catch (t) {
      this.logger.error(t);
      const s3 = t;
      if (this.hasExperiencedNetworkDisruption = true, !this.isConnectionStalled(s3.message)) throw t;
    } finally {
      this.connectionAttemptInProgress = false;
    }
  }
  async restartTransport(e2) {
    this.connectionAttemptInProgress || (this.relayUrl = e2 || this.relayUrl, await this.confirmOnlineStateOrThrow(), await this.transportClose(), await this.transportOpen());
  }
  async confirmOnlineStateOrThrow() {
    if (!await Nh()) throw new Error("No internet connection detected. Please restart your network and try again.");
  }
  async handleBatchMessageEvents(e2) {
    if ((e2 == null ? void 0 : e2.length) === 0) {
      this.logger.trace("Batch message events is empty. Ignoring...");
      return;
    }
    const t = e2.sort((s3, i4) => s3.publishedAt - i4.publishedAt);
    this.logger.trace(`Batch of ${t.length} message events sorted`);
    for (const s3 of t) try {
      await this.onMessageEvent(s3);
    } catch (i4) {
      this.logger.warn(i4);
    }
    this.logger.trace(`Batch of ${t.length} message events processed`);
  }
  startPingTimeout() {
    var e2, t, s3, i4, r3;
    if (pi()) try {
      (t = (e2 = this.provider) == null ? void 0 : e2.connection) != null && t.socket && ((r3 = (i4 = (s3 = this.provider) == null ? void 0 : s3.connection) == null ? void 0 : i4.socket) == null || r3.once("ping", () => {
        this.resetPingTimeout();
      })), this.resetPingTimeout();
    } catch (n5) {
      this.logger.warn(n5);
    }
  }
  isConnectionStalled(e2) {
    return this.staleConnectionErrors.some((t) => e2.includes(t));
  }
  async createProvider() {
    this.provider.connection && this.unregisterProviderListeners();
    const e2 = await this.core.crypto.signJWT(this.relayUrl);
    this.provider = new o3(new f2(ns({ sdkVersion: we2, protocol: this.protocol, version: this.version, relayUrl: this.relayUrl, projectId: this.projectId, auth: e2, useOnCloseEvent: true, bundleId: this.bundleId }))), this.registerProviderListeners();
  }
  async recordMessageEvent(e2) {
    const { topic: t, message: s3 } = e2;
    await this.messages.set(t, s3);
  }
  async shouldIgnoreMessageEvent(e2) {
    const { topic: t, message: s3 } = e2;
    if (!s3 || s3.length === 0) return this.logger.debug(`Ignoring invalid/empty message: ${s3}`), true;
    if (!await this.subscriber.isSubscribed(t)) return this.logger.debug(`Ignoring message for non-subscribed topic ${t}`), true;
    const i4 = this.messages.has(t, s3);
    return i4 && this.logger.debug(`Ignoring duplicate message: ${s3}`), i4;
  }
  async onProviderPayload(e2) {
    if (this.logger.debug("Incoming Relay Payload"), this.logger.trace({ type: "payload", direction: "incoming", payload: e2 }), isJsonRpcRequest(e2)) {
      if (!e2.method.endsWith(mt)) return;
      const t = e2.params, { topic: s3, message: i4, publishedAt: r3, attestation: n5 } = t.data, a4 = { topic: s3, message: i4, publishedAt: r3, attestation: n5 };
      this.logger.debug("Emitting Relayer Payload"), this.logger.trace(tn2({ type: "event", event: t.id }, a4)), this.events.emit(t.id, a4), await this.acknowledgePayload(e2), await this.onMessageEvent(a4);
    } else isJsonRpcResponse(e2) && this.events.emit(w3.message_ack, e2);
  }
  async onMessageEvent(e2) {
    await this.shouldIgnoreMessageEvent(e2) || (this.events.emit(w3.message, e2), await this.recordMessageEvent(e2));
  }
  async acknowledgePayload(e2) {
    const t = formatJsonRpcResult(e2.id, true);
    await this.provider.connection.send(t);
  }
  unregisterProviderListeners() {
    this.provider.off(I2.payload, this.onPayloadHandler), this.provider.off(I2.connect, this.onConnectHandler), this.provider.off(I2.disconnect, this.onDisconnectHandler), this.provider.off(I2.error, this.onProviderErrorHandler), clearTimeout(this.pingTimeout);
  }
  async registerEventListeners() {
    let e2 = await Nh();
    Ih(async (t) => {
      e2 !== t && (e2 = t, t ? await this.restartTransport().catch((s3) => this.logger.error(s3)) : (this.hasExperiencedNetworkDisruption = true, await this.transportDisconnect(), this.transportExplicitlyClosed = false));
    });
  }
  async onProviderDisconnect() {
    await this.subscriber.stop(), this.requestsInFlight.clear(), clearTimeout(this.pingTimeout), this.events.emit(w3.disconnect), this.connectionAttemptInProgress = false, !this.transportExplicitlyClosed && (this.reconnectTimeout || (this.reconnectTimeout = setTimeout(async () => {
      await this.transportOpen().catch((e2) => this.logger.error(e2));
    }, (0, import_time4.toMiliseconds)(ft))));
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
  async toEstablishConnection() {
    await this.confirmOnlineStateOrThrow(), !this.connected && (this.connectionAttemptInProgress && await new Promise((e2) => {
      const t = setInterval(() => {
        this.connected && (clearInterval(t), e2());
      }, this.connectionStatusPollingInterval);
    }), await this.transportOpen());
  }
};
var sn2 = Object.defineProperty;
var Xt2 = Object.getOwnPropertySymbols;
var rn2 = Object.prototype.hasOwnProperty;
var nn2 = Object.prototype.propertyIsEnumerable;
var Zt2 = (o4, e2, t) => e2 in o4 ? sn2(o4, e2, { enumerable: true, configurable: true, writable: true, value: t }) : o4[e2] = t;
var Qt2 = (o4, e2) => {
  for (var t in e2 || (e2 = {})) rn2.call(e2, t) && Zt2(o4, t, e2[t]);
  if (Xt2) for (var t of Xt2(e2)) nn2.call(e2, t) && Zt2(o4, t, e2[t]);
  return o4;
};
var ei = class extends p2 {
  constructor(e2, t, s3, i4 = O3, r3 = void 0) {
    super(e2, t, s3, i4), this.core = e2, this.logger = t, this.name = s3, this.map = /* @__PURE__ */ new Map(), this.version = Et, this.cached = [], this.initialized = false, this.storagePrefix = O3, this.recentlyDeleted = [], this.recentlyDeletedLimit = 200, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((n5) => {
        this.getKey && n5 !== null && !Pe(n5) ? this.map.set(this.getKey(n5), n5) : uh(n5) ? this.map.set(n5.id, n5) : hh(n5) && this.map.set(n5.topic, n5);
      }), this.cached = [], this.initialized = true);
    }, this.set = async (n5, a4) => {
      this.isInitialized(), this.map.has(n5) ? await this.update(n5, a4) : (this.logger.debug("Setting value"), this.logger.trace({ type: "method", method: "set", key: n5, value: a4 }), this.map.set(n5, a4), await this.persist());
    }, this.get = (n5) => (this.isInitialized(), this.logger.debug("Getting value"), this.logger.trace({ type: "method", method: "get", key: n5 }), this.getData(n5)), this.getAll = (n5) => (this.isInitialized(), n5 ? this.values.filter((a4) => Object.keys(n5).every((h5) => (0, import_lodash.default)(a4[h5], n5[h5]))) : this.values), this.update = async (n5, a4) => {
      this.isInitialized(), this.logger.debug("Updating value"), this.logger.trace({ type: "method", method: "update", key: n5, update: a4 });
      const h5 = Qt2(Qt2({}, this.getData(n5)), a4);
      this.map.set(n5, h5), await this.persist();
    }, this.delete = async (n5, a4) => {
      this.isInitialized(), this.map.has(n5) && (this.logger.debug("Deleting value"), this.logger.trace({ type: "method", method: "delete", key: n5, reason: a4 }), this.map.delete(n5), this.addToRecentlyDeleted(n5), await this.persist());
    }, this.logger = E2(t, this.name), this.storagePrefix = i4, this.getKey = r3;
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  get length() {
    return this.map.size;
  }
  get keys() {
    return Array.from(this.map.keys());
  }
  get values() {
    return Array.from(this.map.values());
  }
  addToRecentlyDeleted(e2) {
    this.recentlyDeleted.push(e2), this.recentlyDeleted.length >= this.recentlyDeletedLimit && this.recentlyDeleted.splice(0, this.recentlyDeletedLimit / 2);
  }
  async setDataStore(e2) {
    await this.core.storage.setItem(this.storageKey, e2);
  }
  async getDataStore() {
    return await this.core.storage.getItem(this.storageKey);
  }
  getData(e2) {
    const t = this.map.get(e2);
    if (!t) {
      if (this.recentlyDeleted.includes(e2)) {
        const { message: i4 } = xe("MISSING_OR_INVALID", `Record was recently deleted - ${this.name}: ${e2}`);
        throw this.logger.error(i4), new Error(i4);
      }
      const { message: s3 } = xe("NO_MATCHING_KEY", `${this.name}: ${e2}`);
      throw this.logger.error(s3), new Error(s3);
    }
    return t;
  }
  async persist() {
    await this.setDataStore(this.values);
  }
  async restore() {
    try {
      const e2 = await this.getDataStore();
      if (typeof e2 > "u" || !e2.length) return;
      if (this.map.size) {
        const { message: t } = xe("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), new Error(t);
      }
      this.cached = e2, this.logger.debug(`Successfully Restored value for ${this.name}`), this.logger.trace({ type: "method", method: "restore", value: this.values });
    } catch (e2) {
      this.logger.debug(`Failed to Restore value for ${this.name}`), this.logger.error(e2);
    }
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var ti = class {
  constructor(e2, t) {
    this.core = e2, this.logger = t, this.name = Ct, this.version = St, this.events = new import_events7.default(), this.initialized = false, this.storagePrefix = O3, this.ignoredPayloadTypes = [lr], this.registeredMethods = [], this.init = async () => {
      this.initialized || (await this.pairings.init(), await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.initialized = true, this.logger.trace("Initialized"));
    }, this.register = ({ methods: s3 }) => {
      this.isInitialized(), this.registeredMethods = [.../* @__PURE__ */ new Set([...this.registeredMethods, ...s3])];
    }, this.create = async (s3) => {
      this.isInitialized();
      const i4 = Cu(), r3 = await this.core.crypto.setSymKey(i4), n5 = As(import_time4.FIVE_MINUTES), a4 = { protocol: yt }, h5 = { topic: r3, expiry: n5, relay: a4, active: false }, c5 = Wu({ protocol: this.core.protocol, version: this.core.version, topic: r3, symKey: i4, relay: a4, expiryTimestamp: n5, methods: s3 == null ? void 0 : s3.methods });
      return this.core.expirer.set(r3, n5), await this.pairings.set(r3, h5), await this.core.relayer.subscribe(r3), { topic: r3, uri: c5 };
    }, this.pair = async (s3) => {
      this.isInitialized();
      const i4 = this.core.eventClient.createEvent({ properties: { topic: s3 == null ? void 0 : s3.uri, trace: [L3.pairing_started] } });
      this.isValidPair(s3, i4);
      const { topic: r3, symKey: n5, relay: a4, expiryTimestamp: h5, methods: c5 } = Vu(s3.uri);
      i4.props.properties.topic = r3, i4.addTrace(L3.pairing_uri_validation_success), i4.addTrace(L3.pairing_uri_not_expired);
      let d3;
      if (this.pairings.keys.includes(r3)) {
        if (d3 = this.pairings.get(r3), i4.addTrace(L3.existing_pairing), d3.active) throw i4.setError(F.active_pairing_already_exists), new Error(`Pairing already exists: ${r3}. Please try again with a new connection URI.`);
        i4.addTrace(L3.pairing_not_expired);
      }
      const g3 = h5 || As(import_time4.FIVE_MINUTES), b3 = { topic: r3, relay: a4, expiry: g3, active: false, methods: c5 };
      this.core.expirer.set(r3, g3), await this.pairings.set(r3, b3), i4.addTrace(L3.store_new_pairing), s3.activatePairing && await this.activate({ topic: r3 }), this.events.emit(J.create, b3), i4.addTrace(L3.emit_inactive_pairing), this.core.crypto.keychain.has(r3) || await this.core.crypto.setSymKey(n5, r3), i4.addTrace(L3.subscribing_pairing_topic);
      try {
        await this.core.relayer.confirmOnlineStateOrThrow();
      } catch {
        i4.setError(F.no_internet_connection);
      }
      try {
        await this.core.relayer.subscribe(r3, { relay: a4 });
      } catch (m2) {
        throw i4.setError(F.subscribe_pairing_topic_failure), m2;
      }
      return i4.addTrace(L3.subscribe_pairing_topic_success), b3;
    }, this.activate = async ({ topic: s3 }) => {
      this.isInitialized();
      const i4 = As(import_time4.THIRTY_DAYS);
      this.core.expirer.set(s3, i4), await this.pairings.update(s3, { active: true, expiry: i4 });
    }, this.ping = async (s3) => {
      this.isInitialized(), await this.isValidPing(s3);
      const { topic: i4 } = s3;
      if (this.pairings.keys.includes(i4)) {
        const r3 = await this.sendRequest(i4, "wc_pairingPing", {}), { done: n5, resolve: a4, reject: h5 } = ds();
        this.events.once(ys("pairing_ping", r3), ({ error: c5 }) => {
          c5 ? h5(c5) : a4();
        }), await n5();
      }
    }, this.updateExpiry = async ({ topic: s3, expiry: i4 }) => {
      this.isInitialized(), await this.pairings.update(s3, { expiry: i4 });
    }, this.updateMetadata = async ({ topic: s3, metadata: i4 }) => {
      this.isInitialized(), await this.pairings.update(s3, { peerMetadata: i4 });
    }, this.getPairings = () => (this.isInitialized(), this.pairings.values), this.disconnect = async (s3) => {
      this.isInitialized(), await this.isValidDisconnect(s3);
      const { topic: i4 } = s3;
      this.pairings.keys.includes(i4) && (await this.sendRequest(i4, "wc_pairingDelete", tr("USER_DISCONNECTED")), await this.deletePairing(i4));
    }, this.sendRequest = async (s3, i4, r3) => {
      const n5 = formatJsonRpcRequest(i4, r3), a4 = await this.core.crypto.encode(s3, n5), h5 = V2[i4].req;
      return this.core.history.set(s3, n5), this.core.relayer.publish(s3, a4, h5), n5.id;
    }, this.sendResult = async (s3, i4, r3) => {
      const n5 = formatJsonRpcResult(s3, r3), a4 = await this.core.crypto.encode(i4, n5), h5 = await this.core.history.get(i4, s3), c5 = V2[h5.request.method].res;
      await this.core.relayer.publish(i4, a4, c5), await this.core.history.resolve(n5);
    }, this.sendError = async (s3, i4, r3) => {
      const n5 = formatJsonRpcError(s3, r3), a4 = await this.core.crypto.encode(i4, n5), h5 = await this.core.history.get(i4, s3), c5 = V2[h5.request.method] ? V2[h5.request.method].res : V2.unregistered_method.res;
      await this.core.relayer.publish(i4, a4, c5), await this.core.history.resolve(n5);
    }, this.deletePairing = async (s3, i4) => {
      await this.core.relayer.unsubscribe(s3), await Promise.all([this.pairings.delete(s3, tr("USER_DISCONNECTED")), this.core.crypto.deleteSymKey(s3), i4 ? Promise.resolve() : this.core.expirer.del(s3)]);
    }, this.cleanup = async () => {
      const s3 = this.pairings.getAll().filter((i4) => bs(i4.expiry));
      await Promise.all(s3.map((i4) => this.deletePairing(i4.topic)));
    }, this.onRelayEventRequest = (s3) => {
      const { topic: i4, payload: r3 } = s3;
      switch (r3.method) {
        case "wc_pairingPing":
          return this.onPairingPingRequest(i4, r3);
        case "wc_pairingDelete":
          return this.onPairingDeleteRequest(i4, r3);
        default:
          return this.onUnknownRpcMethodRequest(i4, r3);
      }
    }, this.onRelayEventResponse = async (s3) => {
      const { topic: i4, payload: r3 } = s3, n5 = (await this.core.history.get(i4, r3.id)).request.method;
      switch (n5) {
        case "wc_pairingPing":
          return this.onPairingPingResponse(i4, r3);
        default:
          return this.onUnknownRpcMethodResponse(n5);
      }
    }, this.onPairingPingRequest = async (s3, i4) => {
      const { id: r3 } = i4;
      try {
        this.isValidPing({ topic: s3 }), await this.sendResult(r3, s3, true), this.events.emit(J.ping, { id: r3, topic: s3 });
      } catch (n5) {
        await this.sendError(r3, s3, n5), this.logger.error(n5);
      }
    }, this.onPairingPingResponse = (s3, i4) => {
      const { id: r3 } = i4;
      setTimeout(() => {
        isJsonRpcResult(i4) ? this.events.emit(ys("pairing_ping", r3), {}) : isJsonRpcError(i4) && this.events.emit(ys("pairing_ping", r3), { error: i4.error });
      }, 500);
    }, this.onPairingDeleteRequest = async (s3, i4) => {
      const { id: r3 } = i4;
      try {
        this.isValidDisconnect({ topic: s3 }), await this.deletePairing(s3), this.events.emit(J.delete, { id: r3, topic: s3 });
      } catch (n5) {
        await this.sendError(r3, s3, n5), this.logger.error(n5);
      }
    }, this.onUnknownRpcMethodRequest = async (s3, i4) => {
      const { id: r3, method: n5 } = i4;
      try {
        if (this.registeredMethods.includes(n5)) return;
        const a4 = tr("WC_METHOD_UNSUPPORTED", n5);
        await this.sendError(r3, s3, a4), this.logger.error(a4);
      } catch (a4) {
        await this.sendError(r3, s3, a4), this.logger.error(a4);
      }
    }, this.onUnknownRpcMethodResponse = (s3) => {
      this.registeredMethods.includes(s3) || this.logger.error(tr("WC_METHOD_UNSUPPORTED", s3));
    }, this.isValidPair = (s3, i4) => {
      var r3;
      if (!vh(s3)) {
        const { message: a4 } = xe("MISSING_OR_INVALID", `pair() params: ${s3}`);
        throw i4.setError(F.malformed_pairing_uri), new Error(a4);
      }
      if (!ah(s3.uri)) {
        const { message: a4 } = xe("MISSING_OR_INVALID", `pair() uri: ${s3.uri}`);
        throw i4.setError(F.malformed_pairing_uri), new Error(a4);
      }
      const n5 = Vu(s3 == null ? void 0 : s3.uri);
      if (!((r3 = n5 == null ? void 0 : n5.relay) != null && r3.protocol)) {
        const { message: a4 } = xe("MISSING_OR_INVALID", "pair() uri#relay-protocol");
        throw i4.setError(F.malformed_pairing_uri), new Error(a4);
      }
      if (!(n5 != null && n5.symKey)) {
        const { message: a4 } = xe("MISSING_OR_INVALID", "pair() uri#symKey");
        throw i4.setError(F.malformed_pairing_uri), new Error(a4);
      }
      if (n5 != null && n5.expiryTimestamp && (0, import_time4.toMiliseconds)(n5 == null ? void 0 : n5.expiryTimestamp) < Date.now()) {
        i4.setError(F.pairing_expired);
        const { message: a4 } = xe("EXPIRED", "pair() URI has expired. Please try again with a new connection URI.");
        throw new Error(a4);
      }
    }, this.isValidPing = async (s3) => {
      if (!vh(s3)) {
        const { message: r3 } = xe("MISSING_OR_INVALID", `ping() params: ${s3}`);
        throw new Error(r3);
      }
      const { topic: i4 } = s3;
      await this.isValidPairingTopic(i4);
    }, this.isValidDisconnect = async (s3) => {
      if (!vh(s3)) {
        const { message: r3 } = xe("MISSING_OR_INVALID", `disconnect() params: ${s3}`);
        throw new Error(r3);
      }
      const { topic: i4 } = s3;
      await this.isValidPairingTopic(i4);
    }, this.isValidPairingTopic = async (s3) => {
      if (!Gt(s3, false)) {
        const { message: i4 } = xe("MISSING_OR_INVALID", `pairing topic should be a string: ${s3}`);
        throw new Error(i4);
      }
      if (!this.pairings.keys.includes(s3)) {
        const { message: i4 } = xe("NO_MATCHING_KEY", `pairing topic doesn't exist: ${s3}`);
        throw new Error(i4);
      }
      if (bs(this.pairings.get(s3).expiry)) {
        await this.deletePairing(s3);
        const { message: i4 } = xe("EXPIRED", `pairing topic: ${s3}`);
        throw new Error(i4);
      }
    }, this.core = e2, this.logger = E2(t, this.name), this.pairings = new ei(this.core, this.logger, this.name, this.storagePrefix);
  }
  get context() {
    return y2(this.logger);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
  registerRelayerEvents() {
    this.core.relayer.on(w3.message, async (e2) => {
      const { topic: t, message: s3 } = e2;
      if (!this.pairings.keys.includes(t) || this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(s3))) return;
      const i4 = await this.core.crypto.decode(t, s3);
      try {
        isJsonRpcRequest(i4) ? (this.core.history.set(t, i4), this.onRelayEventRequest({ topic: t, payload: i4 })) : isJsonRpcResponse(i4) && (await this.core.history.resolve(i4), await this.onRelayEventResponse({ topic: t, payload: i4 }), this.core.history.delete(t, i4.id));
      } catch (r3) {
        this.logger.error(r3);
      }
    });
  }
  registerExpirerEvents() {
    this.core.expirer.on(R.expired, async (e2) => {
      const { topic: t } = gs(e2.target);
      t && this.pairings.keys.includes(t) && (await this.deletePairing(t, true), this.events.emit(J.expire, { topic: t }));
    });
  }
};
var ii = class extends h3 {
  constructor(e2, t) {
    super(e2, t), this.core = e2, this.logger = t, this.records = /* @__PURE__ */ new Map(), this.events = new import_events7.EventEmitter(), this.name = Pt, this.version = Rt, this.cached = [], this.initialized = false, this.storagePrefix = O3, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((s3) => this.records.set(s3.id, s3)), this.cached = [], this.registerEventListeners(), this.initialized = true);
    }, this.set = (s3, i4, r3) => {
      if (this.isInitialized(), this.logger.debug("Setting JSON-RPC request history record"), this.logger.trace({ type: "method", method: "set", topic: s3, request: i4, chainId: r3 }), this.records.has(i4.id)) return;
      const n5 = { id: i4.id, topic: s3, request: { method: i4.method, params: i4.params || null }, chainId: r3, expiry: As(import_time4.THIRTY_DAYS) };
      this.records.set(n5.id, n5), this.persist(), this.events.emit(P.created, n5);
    }, this.resolve = async (s3) => {
      if (this.isInitialized(), this.logger.debug("Updating JSON-RPC response history record"), this.logger.trace({ type: "method", method: "update", response: s3 }), !this.records.has(s3.id)) return;
      const i4 = await this.getRecord(s3.id);
      typeof i4.response > "u" && (i4.response = isJsonRpcError(s3) ? { error: s3.error } : { result: s3.result }, this.records.set(i4.id, i4), this.persist(), this.events.emit(P.updated, i4));
    }, this.get = async (s3, i4) => (this.isInitialized(), this.logger.debug("Getting record"), this.logger.trace({ type: "method", method: "get", topic: s3, id: i4 }), await this.getRecord(i4)), this.delete = (s3, i4) => {
      this.isInitialized(), this.logger.debug("Deleting record"), this.logger.trace({ type: "method", method: "delete", id: i4 }), this.values.forEach((r3) => {
        if (r3.topic === s3) {
          if (typeof i4 < "u" && r3.id !== i4) return;
          this.records.delete(r3.id), this.events.emit(P.deleted, r3);
        }
      }), this.persist();
    }, this.exists = async (s3, i4) => (this.isInitialized(), this.records.has(i4) ? (await this.getRecord(i4)).topic === s3 : false), this.on = (s3, i4) => {
      this.events.on(s3, i4);
    }, this.once = (s3, i4) => {
      this.events.once(s3, i4);
    }, this.off = (s3, i4) => {
      this.events.off(s3, i4);
    }, this.removeListener = (s3, i4) => {
      this.events.removeListener(s3, i4);
    }, this.logger = E2(t, this.name);
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  get size() {
    return this.records.size;
  }
  get keys() {
    return Array.from(this.records.keys());
  }
  get values() {
    return Array.from(this.records.values());
  }
  get pending() {
    const e2 = [];
    return this.values.forEach((t) => {
      if (typeof t.response < "u") return;
      const s3 = { topic: t.topic, request: formatJsonRpcRequest(t.request.method, t.request.params, t.id), chainId: t.chainId };
      return e2.push(s3);
    }), e2;
  }
  async setJsonRpcRecords(e2) {
    await this.core.storage.setItem(this.storageKey, e2);
  }
  async getJsonRpcRecords() {
    return await this.core.storage.getItem(this.storageKey);
  }
  getRecord(e2) {
    this.isInitialized();
    const t = this.records.get(e2);
    if (!t) {
      const { message: s3 } = xe("NO_MATCHING_KEY", `${this.name}: ${e2}`);
      throw new Error(s3);
    }
    return t;
  }
  async persist() {
    await this.setJsonRpcRecords(this.values), this.events.emit(P.sync);
  }
  async restore() {
    try {
      const e2 = await this.getJsonRpcRecords();
      if (typeof e2 > "u" || !e2.length) return;
      if (this.records.size) {
        const { message: t } = xe("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), new Error(t);
      }
      this.cached = e2, this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", records: this.values });
    } catch (e2) {
      this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e2);
    }
  }
  registerEventListeners() {
    this.events.on(P.created, (e2) => {
      const t = P.created;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, record: e2 });
    }), this.events.on(P.updated, (e2) => {
      const t = P.updated;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, record: e2 });
    }), this.events.on(P.deleted, (e2) => {
      const t = P.deleted;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, record: e2 });
    }), this.core.heartbeat.on(r.pulse, () => {
      this.cleanup();
    });
  }
  cleanup() {
    try {
      this.isInitialized();
      let e2 = false;
      this.records.forEach((t) => {
        (0, import_time4.toMiliseconds)(t.expiry || 0) - Date.now() <= 0 && (this.logger.info(`Deleting expired history log: ${t.id}`), this.records.delete(t.id), this.events.emit(P.deleted, t, false), e2 = true);
      }), e2 && this.persist();
    } catch (e2) {
      this.logger.warn(e2);
    }
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var si = class extends x3 {
  constructor(e2, t) {
    super(e2, t), this.core = e2, this.logger = t, this.expirations = /* @__PURE__ */ new Map(), this.events = new import_events7.EventEmitter(), this.name = xt, this.version = Ot2, this.cached = [], this.initialized = false, this.storagePrefix = O3, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((s3) => this.expirations.set(s3.target, s3)), this.cached = [], this.registerEventListeners(), this.initialized = true);
    }, this.has = (s3) => {
      try {
        const i4 = this.formatTarget(s3);
        return typeof this.getExpiration(i4) < "u";
      } catch {
        return false;
      }
    }, this.set = (s3, i4) => {
      this.isInitialized();
      const r3 = this.formatTarget(s3), n5 = { target: r3, expiry: i4 };
      this.expirations.set(r3, n5), this.checkExpiry(r3, n5), this.events.emit(R.created, { target: r3, expiration: n5 });
    }, this.get = (s3) => {
      this.isInitialized();
      const i4 = this.formatTarget(s3);
      return this.getExpiration(i4);
    }, this.del = (s3) => {
      if (this.isInitialized(), this.has(s3)) {
        const i4 = this.formatTarget(s3), r3 = this.getExpiration(i4);
        this.expirations.delete(i4), this.events.emit(R.deleted, { target: i4, expiration: r3 });
      }
    }, this.on = (s3, i4) => {
      this.events.on(s3, i4);
    }, this.once = (s3, i4) => {
      this.events.once(s3, i4);
    }, this.off = (s3, i4) => {
      this.events.off(s3, i4);
    }, this.removeListener = (s3, i4) => {
      this.events.removeListener(s3, i4);
    }, this.logger = E2(t, this.name);
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  get length() {
    return this.expirations.size;
  }
  get keys() {
    return Array.from(this.expirations.keys());
  }
  get values() {
    return Array.from(this.expirations.values());
  }
  formatTarget(e2) {
    if (typeof e2 == "string") return vs(e2);
    if (typeof e2 == "number") return ms(e2);
    const { message: t } = xe("UNKNOWN_TYPE", `Target type: ${typeof e2}`);
    throw new Error(t);
  }
  async setExpirations(e2) {
    await this.core.storage.setItem(this.storageKey, e2);
  }
  async getExpirations() {
    return await this.core.storage.getItem(this.storageKey);
  }
  async persist() {
    await this.setExpirations(this.values), this.events.emit(R.sync);
  }
  async restore() {
    try {
      const e2 = await this.getExpirations();
      if (typeof e2 > "u" || !e2.length) return;
      if (this.expirations.size) {
        const { message: t } = xe("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), new Error(t);
      }
      this.cached = e2, this.logger.debug(`Successfully Restored expirations for ${this.name}`), this.logger.trace({ type: "method", method: "restore", expirations: this.values });
    } catch (e2) {
      this.logger.debug(`Failed to Restore expirations for ${this.name}`), this.logger.error(e2);
    }
  }
  getExpiration(e2) {
    const t = this.expirations.get(e2);
    if (!t) {
      const { message: s3 } = xe("NO_MATCHING_KEY", `${this.name}: ${e2}`);
      throw this.logger.warn(s3), new Error(s3);
    }
    return t;
  }
  checkExpiry(e2, t) {
    const { expiry: s3 } = t;
    (0, import_time4.toMiliseconds)(s3) - Date.now() <= 0 && this.expire(e2, t);
  }
  expire(e2, t) {
    this.expirations.delete(e2), this.events.emit(R.expired, { target: e2, expiration: t });
  }
  checkExpirations() {
    this.core.relayer.connected && this.expirations.forEach((e2, t) => this.checkExpiry(t, e2));
  }
  registerEventListeners() {
    this.core.heartbeat.on(r.pulse, () => this.checkExpirations()), this.events.on(R.created, (e2) => {
      const t = R.created;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e2 }), this.persist();
    }), this.events.on(R.expired, (e2) => {
      const t = R.expired;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e2 }), this.persist();
    }), this.events.on(R.deleted, (e2) => {
      const t = R.deleted;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e2 }), this.persist();
    });
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var y5 = {};
Object.defineProperty(y5, "__esModule", { value: true }), y5.getLocalStorage = y5.getLocalStorageOrThrow = y5.getCrypto = y5.getCryptoOrThrow = y5.getLocation = y5.getLocationOrThrow = y5.getNavigator = y5.getNavigatorOrThrow = ri = y5.getDocument = y5.getDocumentOrThrow = y5.getFromWindowOrThrow = y5.getFromWindow = void 0;
function K3(o4) {
  let e2;
  return typeof window < "u" && typeof window[o4] < "u" && (e2 = window[o4]), e2;
}
y5.getFromWindow = K3;
function j3(o4) {
  const e2 = K3(o4);
  if (!e2) throw new Error(`${o4} is not defined in Window`);
  return e2;
}
y5.getFromWindowOrThrow = j3;
function on2() {
  return j3("document");
}
y5.getDocumentOrThrow = on2;
function an2() {
  return K3("document");
}
var ri = y5.getDocument = an2;
function hn2() {
  return j3("navigator");
}
y5.getNavigatorOrThrow = hn2;
function cn2() {
  return K3("navigator");
}
y5.getNavigator = cn2;
function ln2() {
  return j3("location");
}
y5.getLocationOrThrow = ln2;
function un2() {
  return K3("location");
}
y5.getLocation = un2;
function dn() {
  return j3("crypto");
}
y5.getCryptoOrThrow = dn;
function gn() {
  return K3("crypto");
}
y5.getCrypto = gn;
function pn2() {
  return j3("localStorage");
}
y5.getLocalStorageOrThrow = pn2;
function yn2() {
  return K3("localStorage");
}
y5.getLocalStorage = yn2;
var ni = class extends y3 {
  constructor(e2, t, s3) {
    super(e2, t, s3), this.core = e2, this.logger = t, this.store = s3, this.name = At, this.verifyUrlV3 = zt2, this.storagePrefix = O3, this.version = _e2, this.init = async () => {
      var i4;
      this.isDevEnv || (this.publicKey = await this.store.getItem(this.storeKey), this.publicKey && (0, import_time4.toMiliseconds)((i4 = this.publicKey) == null ? void 0 : i4.expiresAt) < Date.now() && (this.logger.debug("verify v2 public key expired"), await this.removePublicKey()), this.publicKey || await this.fetchAndPersistPublicKey());
    }, this.register = async (i4) => {
      if (!pr() || this.isDevEnv) return;
      const r3 = window.location.origin, { id: n5, decryptedId: a4 } = i4, h5 = `${this.verifyUrlV3}/attestation?projectId=${this.core.projectId}&origin=${r3}&id=${n5}&decryptedId=${a4}`;
      try {
        const c5 = ri(), d3 = this.startAbortTimer(import_time4.ONE_SECOND * 5), g3 = await new Promise((b3, m2) => {
          const l4 = () => {
            window.removeEventListener("message", _3), c5.body.removeChild(p3), m2("attestation aborted");
          };
          this.abortController.signal.addEventListener("abort", l4);
          const p3 = c5.createElement("iframe");
          p3.src = h5, p3.style.display = "none", p3.addEventListener("error", l4, { signal: this.abortController.signal });
          const _3 = (D2) => {
            if (!D2.data) return;
            const E4 = JSON.parse(D2.data);
            if (E4.type === "verify_attestation") {
              if (decodeJWT(E4.attestation).payload.id !== n5) return;
              clearInterval(d3), c5.body.removeChild(p3), this.abortController.signal.removeEventListener("abort", l4), window.removeEventListener("message", _3), b3(E4.attestation === null ? "" : E4.attestation);
            }
          };
          c5.body.appendChild(p3), window.addEventListener("message", _3, { signal: this.abortController.signal });
        });
        return this.logger.debug("jwt attestation", g3), g3;
      } catch (c5) {
        this.logger.warn(c5);
      }
      return "";
    }, this.resolve = async (i4) => {
      if (this.isDevEnv) return "";
      const { attestationId: r3, hash: n5, encryptedId: a4 } = i4;
      if (r3 === "") {
        this.logger.debug("resolve: attestationId is empty, skipping");
        return;
      }
      if (r3) {
        if (decodeJWT(r3).payload.id !== a4) return;
        const c5 = await this.isValidJwtAttestation(r3);
        if (c5) return c5;
      }
      if (!n5) return;
      const h5 = this.getVerifyUrl(i4 == null ? void 0 : i4.verifyUrl);
      return this.fetchAttestation(n5, h5);
    }, this.fetchAttestation = async (i4, r3) => {
      this.logger.debug(`resolving attestation: ${i4} from url: ${r3}`);
      const n5 = this.startAbortTimer(import_time4.ONE_SECOND * 5), a4 = await fetch(`${r3}/attestation/${i4}?v2Supported=true`, { signal: this.abortController.signal });
      return clearTimeout(n5), a4.status === 200 ? await a4.json() : void 0;
    }, this.getVerifyUrl = (i4) => {
      let r3 = i4 || W;
      return Lt2.includes(r3) || (this.logger.info(`verify url: ${r3}, not included in trusted list, assigning default: ${W}`), r3 = W), r3;
    }, this.fetchPublicKey = async () => {
      try {
        this.logger.debug(`fetching public key from: ${this.verifyUrlV3}`);
        const i4 = this.startAbortTimer(import_time4.FIVE_SECONDS), r3 = await fetch(`${this.verifyUrlV3}/public-key`, { signal: this.abortController.signal });
        return clearTimeout(i4), await r3.json();
      } catch (i4) {
        this.logger.warn(i4);
      }
    }, this.persistPublicKey = async (i4) => {
      this.logger.debug("persisting public key to local storage", i4), await this.store.setItem(this.storeKey, i4), this.publicKey = i4;
    }, this.removePublicKey = async () => {
      this.logger.debug("removing verify v2 public key from storage"), await this.store.removeItem(this.storeKey), this.publicKey = void 0;
    }, this.isValidJwtAttestation = async (i4) => {
      const r3 = await this.getPublicKey();
      try {
        if (r3) return this.validateAttestation(i4, r3);
      } catch (a4) {
        this.logger.error(a4), this.logger.warn("error validating attestation");
      }
      const n5 = await this.fetchAndPersistPublicKey();
      try {
        if (n5) return this.validateAttestation(i4, n5);
      } catch (a4) {
        this.logger.error(a4), this.logger.warn("error validating attestation");
      }
    }, this.getPublicKey = async () => this.publicKey ? this.publicKey : await this.fetchAndPersistPublicKey(), this.fetchAndPersistPublicKey = async () => {
      if (this.fetchPromise) return await this.fetchPromise, this.publicKey;
      this.fetchPromise = new Promise(async (r3) => {
        const n5 = await this.fetchPublicKey();
        n5 && (await this.persistPublicKey(n5), r3(n5));
      });
      const i4 = await this.fetchPromise;
      return this.fetchPromise = void 0, i4;
    }, this.validateAttestation = (i4, r3) => {
      const n5 = Ku(i4, r3.publicKey), a4 = { hasExpired: (0, import_time4.toMiliseconds)(n5.exp) < Date.now(), payload: n5 };
      if (a4.hasExpired) throw this.logger.warn("resolve: jwt attestation expired"), new Error("JWT attestation expired");
      return { origin: a4.payload.origin, isScam: a4.payload.isScam };
    }, this.logger = E2(t, this.name), this.abortController = new AbortController(), this.isDevEnv = pi() && process.env.IS_VITEST, this.init();
  }
  get storeKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//verify:public:key";
  }
  get context() {
    return y2(this.logger);
  }
  startAbortTimer(e2) {
    return this.abortController = new AbortController(), setTimeout(() => this.abortController.abort(), (0, import_time4.toMiliseconds)(e2));
  }
};
var oi = class extends v2 {
  constructor(e2, t) {
    super(e2, t), this.projectId = e2, this.logger = t, this.context = $t2, this.registerDeviceToken = async (s3) => {
      const { clientId: i4, token: r3, notificationType: n5, enableEncrypted: a4 = false } = s3, h5 = `${Ft2}/${this.projectId}/clients`;
      await fetch(h5, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ client_id: i4, type: n5, token: r3, always_raw: a4 }) });
    }, this.logger = E2(t, this.context);
  }
};
var Dn2 = Object.defineProperty;
var ai = Object.getOwnPropertySymbols;
var bn = Object.prototype.hasOwnProperty;
var mn = Object.prototype.propertyIsEnumerable;
var hi2 = (o4, e2, t) => e2 in o4 ? Dn2(o4, e2, { enumerable: true, configurable: true, writable: true, value: t }) : o4[e2] = t;
var Z = (o4, e2) => {
  for (var t in e2 || (e2 = {})) bn.call(e2, t) && hi2(o4, t, e2[t]);
  if (ai) for (var t of ai(e2)) mn.call(e2, t) && hi2(o4, t, e2[t]);
  return o4;
};
var ci2 = class extends C2 {
  constructor(e2, t, s3 = true) {
    super(e2, t, s3), this.core = e2, this.logger = t, this.context = Kt2, this.storagePrefix = O3, this.storageVersion = Ut2, this.events = /* @__PURE__ */ new Map(), this.shouldPersist = false, this.createEvent = (i4) => {
      const { event: r3 = "ERROR", type: n5 = "", properties: { topic: a4, trace: h5 } } = i4, c5 = Ms(), d3 = this.core.projectId || "", g3 = Date.now(), b3 = Z({ eventId: c5, bundleId: d3, timestamp: g3, props: { event: r3, type: n5, properties: { topic: a4, trace: h5 } } }, this.setMethods(c5));
      return this.telemetryEnabled && (this.events.set(c5, b3), this.shouldPersist = true), b3;
    }, this.getEvent = (i4) => {
      const { eventId: r3, topic: n5 } = i4;
      if (r3) return this.events.get(r3);
      const a4 = Array.from(this.events.values()).find((h5) => h5.props.properties.topic === n5);
      if (a4) return Z(Z({}, a4), this.setMethods(a4.eventId));
    }, this.deleteEvent = (i4) => {
      const { eventId: r3 } = i4;
      this.events.delete(r3), this.shouldPersist = true;
    }, this.setEventListeners = () => {
      this.core.heartbeat.on(r.pulse, async () => {
        this.shouldPersist && await this.persist(), this.events.forEach((i4) => {
          (0, import_time4.fromMiliseconds)(Date.now()) - (0, import_time4.fromMiliseconds)(i4.timestamp) > Mt && (this.events.delete(i4.eventId), this.shouldPersist = true);
        });
      });
    }, this.setMethods = (i4) => ({ addTrace: (r3) => this.addTrace(i4, r3), setError: (r3) => this.setError(i4, r3) }), this.addTrace = (i4, r3) => {
      const n5 = this.events.get(i4);
      n5 && (n5.props.properties.trace.push(r3), this.events.set(i4, n5), this.shouldPersist = true);
    }, this.setError = (i4, r3) => {
      const n5 = this.events.get(i4);
      n5 && (n5.props.type = r3, n5.timestamp = Date.now(), this.events.set(i4, n5), this.shouldPersist = true);
    }, this.persist = async () => {
      await this.core.storage.setItem(this.storageKey, Array.from(this.events.values())), this.shouldPersist = false;
    }, this.restore = async () => {
      try {
        const i4 = await this.core.storage.getItem(this.storageKey) || [];
        if (!i4.length) return;
        i4.forEach((r3) => {
          this.events.set(r3.eventId, Z(Z({}, r3), this.setMethods(r3.eventId)));
        });
      } catch (i4) {
        this.logger.warn(i4);
      }
    }, this.submit = async () => {
      if (!this.telemetryEnabled || this.events.size === 0) return;
      const i4 = [];
      for (const [r3, n5] of this.events) n5.props.type && i4.push(n5);
      if (i4.length !== 0) try {
        if ((await fetch(`${kt2}?projectId=${this.core.projectId}&st=events_sdk&sv=js-${we2}`, { method: "POST", body: JSON.stringify(i4) })).ok) for (const r3 of i4) this.events.delete(r3.eventId), this.shouldPersist = true;
      } catch (r3) {
        this.logger.warn(r3);
      }
    }, this.logger = E2(t, this.context), s3 ? this.restore().then(async () => {
      await this.submit(), this.setEventListeners();
    }) : this.persist();
  }
  get storageKey() {
    return this.storagePrefix + this.storageVersion + this.core.customStoragePrefix + "//" + this.context;
  }
};
var fn2 = Object.defineProperty;
var li = Object.getOwnPropertySymbols;
var _n2 = Object.prototype.hasOwnProperty;
var En = Object.prototype.propertyIsEnumerable;
var ui = (o4, e2, t) => e2 in o4 ? fn2(o4, e2, { enumerable: true, configurable: true, writable: true, value: t }) : o4[e2] = t;
var di = (o4, e2) => {
  for (var t in e2 || (e2 = {})) _n2.call(e2, t) && ui(o4, t, e2[t]);
  if (li) for (var t of li(e2)) En.call(e2, t) && ui(o4, t, e2[t]);
  return o4;
};
var oe2 = class _oe extends n3 {
  constructor(e2) {
    var t;
    super(e2), this.protocol = fe2, this.version = _e2, this.name = ne2, this.events = new import_events7.EventEmitter(), this.initialized = false, this.on = (n5, a4) => this.events.on(n5, a4), this.once = (n5, a4) => this.events.once(n5, a4), this.off = (n5, a4) => this.events.off(n5, a4), this.removeListener = (n5, a4) => this.events.removeListener(n5, a4), this.projectId = e2 == null ? void 0 : e2.projectId, this.relayUrl = (e2 == null ? void 0 : e2.relayUrl) || ve2, this.customStoragePrefix = e2 != null && e2.customStoragePrefix ? `:${e2.customStoragePrefix}` : "";
    const s3 = k2({ level: typeof (e2 == null ? void 0 : e2.logger) == "string" && e2.logger ? e2.logger : nt.logger }), { logger: i4, chunkLoggerController: r3 } = A({ opts: s3, maxSizeInBytes: e2 == null ? void 0 : e2.maxLogBlobSizeInBytes, loggerOverride: e2 == null ? void 0 : e2.logger });
    this.logChunkController = r3, (t = this.logChunkController) != null && t.downloadLogsBlobInBrowser && (window.downloadLogsBlobInBrowser = async () => {
      var n5, a4;
      (n5 = this.logChunkController) != null && n5.downloadLogsBlobInBrowser && ((a4 = this.logChunkController) == null || a4.downloadLogsBlobInBrowser({ clientId: await this.crypto.getClientId() }));
    }), this.logger = E2(i4, this.name), this.heartbeat = new i(), this.crypto = new Vt(this, this.logger, e2 == null ? void 0 : e2.keychain), this.history = new ii(this, this.logger), this.expirer = new si(this, this.logger), this.storage = e2 != null && e2.storage ? e2.storage : new h(di(di({}, ot), e2 == null ? void 0 : e2.storageOptions)), this.relayer = new Wt2({ core: this, logger: this.logger, relayUrl: this.relayUrl, projectId: this.projectId }), this.pairing = new ti(this, this.logger), this.verify = new ni(this, this.logger, this.storage), this.echoClient = new oi(this.projectId || "", this.logger), this.eventClient = new ci2(this, this.logger, e2 == null ? void 0 : e2.telemetryEnabled);
  }
  static async init(e2) {
    const t = new _oe(e2);
    await t.initialize();
    const s3 = await t.crypto.getClientId();
    return await t.storage.setItem(vt, s3), t;
  }
  get context() {
    return y2(this.logger);
  }
  async start() {
    this.initialized || await this.initialize();
  }
  async getLogsBlob() {
    var e2;
    return (e2 = this.logChunkController) == null ? void 0 : e2.logsToBlob({ clientId: await this.crypto.getClientId() });
  }
  async initialize() {
    this.logger.trace("Initialized");
    try {
      await this.crypto.init(), await this.history.init(), await this.expirer.init(), await this.relayer.init(), await this.heartbeat.init(), await this.pairing.init(), this.initialized = true, this.logger.info("Core Initialization Success");
    } catch (e2) {
      throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, e2), this.logger.error(e2.message), e2;
    }
  }
};
var vn = oe2;

// node_modules/@walletconnect/sign-client/dist/index.es.js
var import_events8 = __toESM(require_events());
var import_time5 = __toESM(require_cjs());
var qe2 = "wc";
var ve3 = 2;
var Ne = "client";
var ce2 = `${qe2}@${ve3}:${Ne}:`;
var le2 = { name: Ne, logger: "error", controller: false, relayUrl: "wss://relay.walletconnect.com" };
var Pe2 = "WALLETCONNECT_DEEPLINK_CHOICE";
var Fe = "proposal";
var Qe2 = "Proposal expired";
var He2 = "session";
var k3 = import_time5.SEVEN_DAYS;
var ze2 = "engine";
var S5 = { wc_sessionPropose: { req: { ttl: import_time5.FIVE_MINUTES, prompt: true, tag: 1100 }, res: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1101 }, reject: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1120 }, autoReject: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1121 } }, wc_sessionSettle: { req: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1102 }, res: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1103 } }, wc_sessionUpdate: { req: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1104 }, res: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1105 } }, wc_sessionExtend: { req: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1106 }, res: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1107 } }, wc_sessionRequest: { req: { ttl: import_time5.FIVE_MINUTES, prompt: true, tag: 1108 }, res: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1109 } }, wc_sessionEvent: { req: { ttl: import_time5.FIVE_MINUTES, prompt: true, tag: 1110 }, res: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1111 } }, wc_sessionDelete: { req: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1112 }, res: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1113 } }, wc_sessionPing: { req: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1114 }, res: { ttl: import_time5.ONE_DAY, prompt: false, tag: 1115 } }, wc_sessionAuthenticate: { req: { ttl: import_time5.ONE_HOUR, prompt: true, tag: 1116 }, res: { ttl: import_time5.ONE_HOUR, prompt: false, tag: 1117 }, reject: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1118 }, autoReject: { ttl: import_time5.FIVE_MINUTES, prompt: false, tag: 1119 } } };
var he2 = { min: import_time5.FIVE_MINUTES, max: import_time5.SEVEN_DAYS };
var x4 = { idle: "IDLE", active: "ACTIVE" };
var Ye2 = "request";
var Xe3 = ["wc_sessionPropose", "wc_sessionRequest", "wc_authRequest", "wc_sessionAuthenticate"];
var Je2 = "wc";
var Be2 = "auth";
var We3 = "authKeys";
var Ze3 = "pairingTopics";
var et2 = "requests";
var se3 = `${Je2}@${1.5}:${Be2}:`;
var ie3 = `${se3}:PUB_KEY`;
var Zt3 = Object.defineProperty;
var es2 = Object.defineProperties;
var ts = Object.getOwnPropertyDescriptors;
var tt2 = Object.getOwnPropertySymbols;
var ss = Object.prototype.hasOwnProperty;
var is = Object.prototype.propertyIsEnumerable;
var st2 = (I3, n5, t) => n5 in I3 ? Zt3(I3, n5, { enumerable: true, configurable: true, writable: true, value: t }) : I3[n5] = t;
var E3 = (I3, n5) => {
  for (var t in n5 || (n5 = {})) ss.call(n5, t) && st2(I3, t, n5[t]);
  if (tt2) for (var t of tt2(n5)) is.call(n5, t) && st2(I3, t, n5[t]);
  return I3;
};
var j4 = (I3, n5) => es2(I3, ts(n5));
var rs3 = class extends M {
  constructor(n5) {
    super(n5), this.name = ze2, this.events = new import_events8.default(), this.initialized = false, this.requestQueue = { state: x4.idle, queue: [] }, this.sessionRequestQueue = { state: x4.idle, queue: [] }, this.requestQueueDelay = import_time5.ONE_SECOND, this.expectedPairingMethodMap = /* @__PURE__ */ new Map(), this.recentlyDeletedMap = /* @__PURE__ */ new Map(), this.recentlyDeletedLimit = 200, this.relayMessageCache = [], this.init = async () => {
      this.initialized || (await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.registerPairingEvents(), this.client.core.pairing.register({ methods: Object.keys(S5) }), this.initialized = true, setTimeout(() => {
        this.sessionRequestQueue.queue = this.getPendingSessionRequests(), this.processSessionRequestQueue();
      }, (0, import_time5.toMiliseconds)(this.requestQueueDelay)));
    }, this.connect = async (t) => {
      await this.isInitialized();
      const e2 = j4(E3({}, t), { requiredNamespaces: t.requiredNamespaces || {}, optionalNamespaces: t.optionalNamespaces || {} });
      await this.isValidConnect(e2);
      const { pairingTopic: s3, requiredNamespaces: i4, optionalNamespaces: r3, sessionProperties: o4, relays: a4 } = e2;
      let c5 = s3, h5, l4 = false;
      try {
        c5 && (l4 = this.client.core.pairing.pairings.get(c5).active);
      } catch (y6) {
        throw this.client.logger.error(`connect() -> pairing.get(${c5}) failed`), y6;
      }
      if (!c5 || !l4) {
        const { topic: y6, uri: R2 } = await this.client.core.pairing.create();
        c5 = y6, h5 = R2;
      }
      if (!c5) {
        const { message: y6 } = xe("NO_MATCHING_KEY", `connect() pairing topic: ${c5}`);
        throw new Error(y6);
      }
      const g3 = await this.client.core.crypto.generateKeyPair(), d3 = S5.wc_sessionPropose.req.ttl || import_time5.FIVE_MINUTES, u3 = As(d3), _3 = E3({ requiredNamespaces: i4, optionalNamespaces: r3, relays: a4 ?? [{ protocol: yt }], proposer: { publicKey: g3, metadata: this.client.metadata }, expiryTimestamp: u3, pairingTopic: c5 }, o4 && { sessionProperties: o4 }), { reject: q, resolve: m2, done: O4 } = ds(d3, Qe2);
      this.events.once(ys("session_connect"), async ({ error: y6, session: R2 }) => {
        if (y6) q(y6);
        else if (R2) {
          R2.self.publicKey = g3;
          const K4 = j4(E3({}, R2), { pairingTopic: _3.pairingTopic, requiredNamespaces: _3.requiredNamespaces, optionalNamespaces: _3.optionalNamespaces });
          await this.client.session.set(R2.topic, K4), await this.setExpiry(R2.topic, R2.expiry), c5 && await this.client.core.pairing.updateMetadata({ topic: c5, metadata: R2.peer.metadata }), this.cleanupDuplicatePairings(K4), m2(K4);
        }
      });
      const D2 = await this.sendRequest({ topic: c5, method: "wc_sessionPropose", params: _3, throwOnFailedPublish: true });
      return await this.setProposal(D2, E3({ id: D2 }, _3)), { uri: h5, approval: O4 };
    }, this.pair = async (t) => {
      await this.isInitialized();
      try {
        return await this.client.core.pairing.pair(t);
      } catch (e2) {
        throw this.client.logger.error("pair() failed"), e2;
      }
    }, this.approve = async (t) => {
      var e2, s3, i4;
      const r3 = this.client.core.eventClient.createEvent({ properties: { topic: (e2 = t == null ? void 0 : t.id) == null ? void 0 : e2.toString(), trace: [kr2.session_approve_started] } });
      try {
        await this.isInitialized();
      } catch (f4) {
        throw r3.setError(Br.no_internet_connection), f4;
      }
      try {
        await this.isValidProposalId(t == null ? void 0 : t.id);
      } catch (f4) {
        throw this.client.logger.error(`approve() -> proposal.get(${t == null ? void 0 : t.id}) failed`), r3.setError(Br.proposal_not_found), f4;
      }
      try {
        await this.isValidApprove(t);
      } catch (f4) {
        throw this.client.logger.error("approve() -> isValidApprove() failed"), r3.setError(Br.session_approve_namespace_validation_failure), f4;
      }
      const { id: o4, relayProtocol: a4, namespaces: c5, sessionProperties: h5, sessionConfig: l4 } = t, g3 = this.client.proposal.get(o4);
      this.client.core.eventClient.deleteEvent({ eventId: r3.eventId });
      const { pairingTopic: d3, proposer: u3, requiredNamespaces: _3, optionalNamespaces: q } = g3;
      let m2 = (s3 = this.client.core.eventClient) == null ? void 0 : s3.getEvent({ topic: d3 });
      m2 || (m2 = (i4 = this.client.core.eventClient) == null ? void 0 : i4.createEvent({ type: kr2.session_approve_started, properties: { topic: d3, trace: [kr2.session_approve_started, kr2.session_namespaces_validation_success] } }));
      const O4 = await this.client.core.crypto.generateKeyPair(), D2 = u3.publicKey, y6 = await this.client.core.crypto.generateSharedKey(O4, D2), R2 = E3(E3({ relay: { protocol: a4 ?? "irn" }, namespaces: c5, controller: { publicKey: O4, metadata: this.client.metadata }, expiry: As(k3) }, h5 && { sessionProperties: h5 }), l4 && { sessionConfig: l4 });
      m2.addTrace(kr2.subscribing_session_topic);
      try {
        await this.client.core.relayer.subscribe(y6);
      } catch (f4) {
        throw m2.setError(Br.subscribe_session_topic_failure), f4;
      }
      m2.addTrace(kr2.subscribe_session_topic_success);
      const K4 = j4(E3({}, R2), { topic: y6, requiredNamespaces: _3, optionalNamespaces: q, pairingTopic: d3, acknowledged: false, self: R2.controller, peer: { publicKey: u3.publicKey, metadata: u3.metadata }, controller: O4 });
      await this.client.session.set(y6, K4), m2.addTrace(kr2.store_session);
      try {
        m2.addTrace(kr2.publishing_session_settle), await this.sendRequest({ topic: y6, method: "wc_sessionSettle", params: R2, throwOnFailedPublish: true }).catch((f4) => {
          throw m2 == null ? void 0 : m2.setError(Br.session_settle_publish_failure), f4;
        }), m2.addTrace(kr2.session_settle_publish_success), m2.addTrace(kr2.publishing_session_approve), await this.sendResult({ id: o4, topic: d3, result: { relay: { protocol: a4 ?? "irn" }, responderPublicKey: O4 }, throwOnFailedPublish: true }).catch((f4) => {
          throw m2 == null ? void 0 : m2.setError(Br.session_approve_publish_failure), f4;
        }), m2.addTrace(kr2.session_approve_publish_success);
      } catch (f4) {
        throw this.client.logger.error(f4), this.client.session.delete(y6, tr("USER_DISCONNECTED")), await this.client.core.relayer.unsubscribe(y6), f4;
      }
      return this.client.core.eventClient.deleteEvent({ eventId: m2.eventId }), await this.client.core.pairing.updateMetadata({ topic: d3, metadata: u3.metadata }), await this.client.proposal.delete(o4, tr("USER_DISCONNECTED")), await this.client.core.pairing.activate({ topic: d3 }), await this.setExpiry(y6, As(k3)), { topic: y6, acknowledged: () => Promise.resolve(this.client.session.get(y6)) };
    }, this.reject = async (t) => {
      await this.isInitialized();
      try {
        await this.isValidReject(t);
      } catch (r3) {
        throw this.client.logger.error("reject() -> isValidReject() failed"), r3;
      }
      const { id: e2, reason: s3 } = t;
      let i4;
      try {
        i4 = this.client.proposal.get(e2).pairingTopic;
      } catch (r3) {
        throw this.client.logger.error(`reject() -> proposal.get(${e2}) failed`), r3;
      }
      i4 && (await this.sendError({ id: e2, topic: i4, error: s3, rpcOpts: S5.wc_sessionPropose.reject }), await this.client.proposal.delete(e2, tr("USER_DISCONNECTED")));
    }, this.update = async (t) => {
      await this.isInitialized();
      try {
        await this.isValidUpdate(t);
      } catch (l4) {
        throw this.client.logger.error("update() -> isValidUpdate() failed"), l4;
      }
      const { topic: e2, namespaces: s3 } = t, { done: i4, resolve: r3, reject: o4 } = ds(), a4 = payloadId(), c5 = getBigIntRpcId().toString(), h5 = this.client.session.get(e2).namespaces;
      return this.events.once(ys("session_update", a4), ({ error: l4 }) => {
        l4 ? o4(l4) : r3();
      }), await this.client.session.update(e2, { namespaces: s3 }), await this.sendRequest({ topic: e2, method: "wc_sessionUpdate", params: { namespaces: s3 }, throwOnFailedPublish: true, clientRpcId: a4, relayRpcId: c5 }).catch((l4) => {
        this.client.logger.error(l4), this.client.session.update(e2, { namespaces: h5 }), o4(l4);
      }), { acknowledged: i4 };
    }, this.extend = async (t) => {
      await this.isInitialized();
      try {
        await this.isValidExtend(t);
      } catch (a4) {
        throw this.client.logger.error("extend() -> isValidExtend() failed"), a4;
      }
      const { topic: e2 } = t, s3 = payloadId(), { done: i4, resolve: r3, reject: o4 } = ds();
      return this.events.once(ys("session_extend", s3), ({ error: a4 }) => {
        a4 ? o4(a4) : r3();
      }), await this.setExpiry(e2, As(k3)), this.sendRequest({ topic: e2, method: "wc_sessionExtend", params: {}, clientRpcId: s3, throwOnFailedPublish: true }).catch((a4) => {
        o4(a4);
      }), { acknowledged: i4 };
    }, this.request = async (t) => {
      await this.isInitialized();
      try {
        await this.isValidRequest(t);
      } catch (d3) {
        throw this.client.logger.error("request() -> isValidRequest() failed"), d3;
      }
      const { chainId: e2, request: s3, topic: i4, expiry: r3 = S5.wc_sessionRequest.req.ttl } = t, o4 = this.client.session.get(i4), a4 = payloadId(), c5 = getBigIntRpcId().toString(), { done: h5, resolve: l4, reject: g3 } = ds(r3, "Request expired. Please try again.");
      return this.events.once(ys("session_request", a4), ({ error: d3, result: u3 }) => {
        d3 ? g3(d3) : l4(u3);
      }), await Promise.all([new Promise(async (d3) => {
        await this.sendRequest({ clientRpcId: a4, relayRpcId: c5, topic: i4, method: "wc_sessionRequest", params: { request: j4(E3({}, s3), { expiryTimestamp: As(r3) }), chainId: e2 }, expiry: r3, throwOnFailedPublish: true }).catch((u3) => g3(u3)), this.client.events.emit("session_request_sent", { topic: i4, request: s3, chainId: e2, id: a4 }), d3();
      }), new Promise(async (d3) => {
        var u3;
        if (!((u3 = o4.sessionConfig) != null && u3.disableDeepLink)) {
          const _3 = await xs(this.client.core.storage, Pe2);
          ws({ id: a4, topic: i4, wcDeepLink: _3 });
        }
        d3();
      }), h5()]).then((d3) => d3[2]);
    }, this.respond = async (t) => {
      await this.isInitialized(), await this.isValidRespond(t);
      const { topic: e2, response: s3 } = t, { id: i4 } = s3;
      isJsonRpcResult(s3) ? await this.sendResult({ id: i4, topic: e2, result: s3.result, throwOnFailedPublish: true }) : isJsonRpcError(s3) && await this.sendError({ id: i4, topic: e2, error: s3.error }), this.cleanupAfterResponse(t);
    }, this.ping = async (t) => {
      await this.isInitialized();
      try {
        await this.isValidPing(t);
      } catch (s3) {
        throw this.client.logger.error("ping() -> isValidPing() failed"), s3;
      }
      const { topic: e2 } = t;
      if (this.client.session.keys.includes(e2)) {
        const s3 = payloadId(), i4 = getBigIntRpcId().toString(), { done: r3, resolve: o4, reject: a4 } = ds();
        this.events.once(ys("session_ping", s3), ({ error: c5 }) => {
          c5 ? a4(c5) : o4();
        }), await Promise.all([this.sendRequest({ topic: e2, method: "wc_sessionPing", params: {}, throwOnFailedPublish: true, clientRpcId: s3, relayRpcId: i4 }), r3()]);
      } else this.client.core.pairing.pairings.keys.includes(e2) && await this.client.core.pairing.ping({ topic: e2 });
    }, this.emit = async (t) => {
      await this.isInitialized(), await this.isValidEmit(t);
      const { topic: e2, event: s3, chainId: i4 } = t, r3 = getBigIntRpcId().toString();
      await this.sendRequest({ topic: e2, method: "wc_sessionEvent", params: { event: s3, chainId: i4 }, throwOnFailedPublish: true, relayRpcId: r3 });
    }, this.disconnect = async (t) => {
      await this.isInitialized(), await this.isValidDisconnect(t);
      const { topic: e2 } = t;
      if (this.client.session.keys.includes(e2)) await this.sendRequest({ topic: e2, method: "wc_sessionDelete", params: tr("USER_DISCONNECTED"), throwOnFailedPublish: true }), await this.deleteSession({ topic: e2, emitEvent: false });
      else if (this.client.core.pairing.pairings.keys.includes(e2)) await this.client.core.pairing.disconnect({ topic: e2 });
      else {
        const { message: s3 } = xe("MISMATCHED_TOPIC", `Session or pairing topic not found: ${e2}`);
        throw new Error(s3);
      }
    }, this.find = (t) => (this.isInitialized(), this.client.session.getAll().filter((e2) => sh(e2, t))), this.getPendingSessionRequests = () => this.client.pendingRequest.getAll(), this.authenticate = async (t) => {
      this.isInitialized(), this.isValidAuthenticate(t);
      const { chains: e2, statement: s3 = "", uri: i4, domain: r3, nonce: o4, type: a4, exp: c5, nbf: h5, methods: l4 = [], expiry: g3 } = t, d3 = [...t.resources || []], { topic: u3, uri: _3 } = await this.client.core.pairing.create({ methods: ["wc_sessionAuthenticate"] });
      this.client.logger.info({ message: "Generated new pairing", pairing: { topic: u3, uri: _3 } });
      const q = await this.client.core.crypto.generateKeyPair(), m2 = Ou(q);
      if (await Promise.all([this.client.auth.authKeys.set(ie3, { responseTopic: m2, publicKey: q }), this.client.auth.pairingTopics.set(m2, { topic: m2, pairingTopic: u3 })]), await this.client.core.relayer.subscribe(m2), this.client.logger.info(`sending request to new pairing topic: ${u3}`), l4.length > 0) {
        const { namespace: A3 } = pn(e2[0]);
        let v3 = gu(A3, "request", l4);
        Qr(d3) && (v3 = Au(v3, d3.pop())), d3.push(v3);
      }
      const O4 = g3 && g3 > S5.wc_sessionAuthenticate.req.ttl ? g3 : S5.wc_sessionAuthenticate.req.ttl, D2 = { authPayload: { type: a4 ?? "caip122", chains: e2, statement: s3, aud: i4, domain: r3, version: "1", nonce: o4, iat: (/* @__PURE__ */ new Date()).toISOString(), exp: c5, nbf: h5, resources: d3 }, requester: { publicKey: q, metadata: this.client.metadata }, expiryTimestamp: As(O4) }, y6 = { eip155: { chains: e2, methods: [.../* @__PURE__ */ new Set(["personal_sign", ...l4])], events: ["chainChanged", "accountsChanged"] } }, R2 = { requiredNamespaces: {}, optionalNamespaces: y6, relays: [{ protocol: "irn" }], pairingTopic: u3, proposer: { publicKey: q, metadata: this.client.metadata }, expiryTimestamp: As(S5.wc_sessionPropose.req.ttl) }, { done: K4, resolve: f4, reject: de2 } = ds(O4, "Request expired"), re3 = async ({ error: A3, session: v3 }) => {
        if (this.events.off(ys("session_request", F2), ue2), A3) de2(A3);
        else if (v3) {
          v3.self.publicKey = q, await this.client.session.set(v3.topic, v3), await this.setExpiry(v3.topic, v3.expiry), u3 && await this.client.core.pairing.updateMetadata({ topic: u3, metadata: v3.peer.metadata });
          const Q2 = this.client.session.get(v3.topic);
          await this.deleteProposal(B3), f4({ session: Q2 });
        }
      }, ue2 = async (A3) => {
        if (await this.deletePendingAuthRequest(F2, { message: "fulfilled", code: 0 }), A3.error) {
          const W2 = tr("WC_METHOD_UNSUPPORTED", "wc_sessionAuthenticate");
          return A3.error.code === W2.code ? void 0 : (this.events.off(ys("session_connect"), re3), de2(A3.error.message));
        }
        await this.deleteProposal(B3), this.events.off(ys("session_connect"), re3);
        const { cacaos: v3, responder: Q2 } = A3.result, ge2 = [], Te = [];
        for (const W2 of v3) {
          await lu({ cacao: W2, projectId: this.client.core.projectId }) || (this.client.logger.error(W2, "Signature verification failed"), de2(tr("SESSION_SETTLEMENT_FAILED", "Signature verification failed")));
          const { p: we3 } = W2, ye3 = Qr(we3.resources), Oe2 = [cu(we3.iss)], rt2 = Li(we3.iss);
          if (ye3) {
            const me3 = bu(ye3), nt2 = yu(ye3);
            ge2.push(...me3), Oe2.push(...nt2);
          }
          for (const me3 of Oe2) Te.push(`${me3}:${rt2}`);
        }
        const ne3 = await this.client.core.crypto.generateSharedKey(q, Q2.publicKey);
        let oe3;
        ge2.length > 0 && (oe3 = { topic: ne3, acknowledged: true, self: { publicKey: q, metadata: this.client.metadata }, peer: Q2, controller: Q2.publicKey, expiry: As(k3), requiredNamespaces: {}, optionalNamespaces: {}, relay: { protocol: "irn" }, pairingTopic: u3, namespaces: oh([...new Set(ge2)], [...new Set(Te)]) }, await this.client.core.relayer.subscribe(ne3), await this.client.session.set(ne3, oe3), u3 && await this.client.core.pairing.updateMetadata({ topic: u3, metadata: Q2.metadata }), oe3 = this.client.session.get(ne3)), f4({ auths: v3, session: oe3 });
      }, F2 = payloadId(), B3 = payloadId();
      this.events.once(ys("session_connect"), re3), this.events.once(ys("session_request", F2), ue2);
      try {
        await Promise.all([this.sendRequest({ topic: u3, method: "wc_sessionAuthenticate", params: D2, expiry: t.expiry, throwOnFailedPublish: true, clientRpcId: F2 }), this.sendRequest({ topic: u3, method: "wc_sessionPropose", params: R2, expiry: S5.wc_sessionPropose.req.ttl, throwOnFailedPublish: true, clientRpcId: B3 })]);
      } catch (A3) {
        throw this.events.off(ys("session_connect"), re3), this.events.off(ys("session_request", F2), ue2), A3;
      }
      return await this.setProposal(B3, E3({ id: B3 }, R2)), await this.setAuthRequest(F2, { request: j4(E3({}, D2), { verifyContext: {} }), pairingTopic: u3 }), { uri: _3, response: K4 };
    }, this.approveSessionAuthenticate = async (t) => {
      const { id: e2, auths: s3 } = t, i4 = this.client.core.eventClient.createEvent({ properties: { topic: e2.toString(), trace: [Vr2.authenticated_session_approve_started] } });
      try {
        this.isInitialized();
      } catch (_3) {
        throw i4.setError(jr2.no_internet_connection), _3;
      }
      const r3 = this.getPendingAuthRequest(e2);
      if (!r3) throw i4.setError(jr2.authenticated_session_pending_request_not_found), new Error(`Could not find pending auth request with id ${e2}`);
      const o4 = r3.requester.publicKey, a4 = await this.client.core.crypto.generateKeyPair(), c5 = Ou(o4), h5 = { type: lr, receiverPublicKey: o4, senderPublicKey: a4 }, l4 = [], g3 = [];
      for (const _3 of s3) {
        if (!await lu({ cacao: _3, projectId: this.client.core.projectId })) {
          i4.setError(jr2.invalid_cacao);
          const y6 = tr("SESSION_SETTLEMENT_FAILED", "Signature verification failed");
          throw await this.sendError({ id: e2, topic: c5, error: y6, encodeOpts: h5 }), new Error(y6.message);
        }
        i4.addTrace(Vr2.cacaos_verified);
        const { p: q } = _3, m2 = Qr(q.resources), O4 = [cu(q.iss)], D2 = Li(q.iss);
        if (m2) {
          const y6 = bu(m2), R2 = yu(m2);
          l4.push(...y6), O4.push(...R2);
        }
        for (const y6 of O4) g3.push(`${y6}:${D2}`);
      }
      const d3 = await this.client.core.crypto.generateSharedKey(a4, o4);
      i4.addTrace(Vr2.create_authenticated_session_topic);
      let u3;
      if ((l4 == null ? void 0 : l4.length) > 0) {
        u3 = { topic: d3, acknowledged: true, self: { publicKey: a4, metadata: this.client.metadata }, peer: { publicKey: o4, metadata: r3.requester.metadata }, controller: o4, expiry: As(k3), authentication: s3, requiredNamespaces: {}, optionalNamespaces: {}, relay: { protocol: "irn" }, pairingTopic: r3.pairingTopic, namespaces: oh([...new Set(l4)], [...new Set(g3)]) }, i4.addTrace(Vr2.subscribing_authenticated_session_topic);
        try {
          await this.client.core.relayer.subscribe(d3);
        } catch (_3) {
          throw i4.setError(jr2.subscribe_authenticated_session_topic_failure), _3;
        }
        i4.addTrace(Vr2.subscribe_authenticated_session_topic_success), await this.client.session.set(d3, u3), i4.addTrace(Vr2.store_authenticated_session), await this.client.core.pairing.updateMetadata({ topic: r3.pairingTopic, metadata: r3.requester.metadata });
      }
      i4.addTrace(Vr2.publishing_authenticated_session_approve);
      try {
        await this.sendResult({ topic: c5, id: e2, result: { cacaos: s3, responder: { publicKey: a4, metadata: this.client.metadata } }, encodeOpts: h5, throwOnFailedPublish: true });
      } catch (_3) {
        throw i4.setError(jr2.authenticated_session_approve_publish_failure), _3;
      }
      return await this.client.auth.requests.delete(e2, { message: "fulfilled", code: 0 }), await this.client.core.pairing.activate({ topic: r3.pairingTopic }), this.client.core.eventClient.deleteEvent({ eventId: i4.eventId }), { session: u3 };
    }, this.rejectSessionAuthenticate = async (t) => {
      await this.isInitialized();
      const { id: e2, reason: s3 } = t, i4 = this.getPendingAuthRequest(e2);
      if (!i4) throw new Error(`Could not find pending auth request with id ${e2}`);
      const r3 = i4.requester.publicKey, o4 = await this.client.core.crypto.generateKeyPair(), a4 = Ou(r3), c5 = { type: lr, receiverPublicKey: r3, senderPublicKey: o4 };
      await this.sendError({ id: e2, topic: a4, error: s3, encodeOpts: c5, rpcOpts: S5.wc_sessionAuthenticate.reject }), await this.client.auth.requests.delete(e2, { message: "rejected", code: 0 }), await this.client.proposal.delete(e2, tr("USER_DISCONNECTED"));
    }, this.formatAuthMessage = (t) => {
      this.isInitialized();
      const { request: e2, iss: s3 } = t;
      return Lf(e2, s3);
    }, this.processRelayMessageCache = () => {
      setTimeout(async () => {
        if (this.relayMessageCache.length !== 0) for (; this.relayMessageCache.length > 0; ) try {
          const t = this.relayMessageCache.shift();
          t && await this.onRelayMessage(t);
        } catch (t) {
          this.client.logger.error(t);
        }
      }, 50);
    }, this.cleanupDuplicatePairings = async (t) => {
      if (t.pairingTopic) try {
        const e2 = this.client.core.pairing.pairings.get(t.pairingTopic), s3 = this.client.core.pairing.pairings.getAll().filter((i4) => {
          var r3, o4;
          return ((r3 = i4.peerMetadata) == null ? void 0 : r3.url) && ((o4 = i4.peerMetadata) == null ? void 0 : o4.url) === t.peer.metadata.url && i4.topic && i4.topic !== e2.topic;
        });
        if (s3.length === 0) return;
        this.client.logger.info(`Cleaning up ${s3.length} duplicate pairing(s)`), await Promise.all(s3.map((i4) => this.client.core.pairing.disconnect({ topic: i4.topic }))), this.client.logger.info("Duplicate pairings clean up finished");
      } catch (e2) {
        this.client.logger.error(e2);
      }
    }, this.deleteSession = async (t) => {
      var e2;
      const { topic: s3, expirerHasDeleted: i4 = false, emitEvent: r3 = true, id: o4 = 0 } = t, { self: a4 } = this.client.session.get(s3);
      await this.client.core.relayer.unsubscribe(s3), await this.client.session.delete(s3, tr("USER_DISCONNECTED")), this.addToRecentlyDeleted(s3, "session"), this.client.core.crypto.keychain.has(a4.publicKey) && await this.client.core.crypto.deleteKeyPair(a4.publicKey), this.client.core.crypto.keychain.has(s3) && await this.client.core.crypto.deleteSymKey(s3), i4 || this.client.core.expirer.del(s3), this.client.core.storage.removeItem(Pe2).catch((c5) => this.client.logger.warn(c5)), this.getPendingSessionRequests().forEach((c5) => {
        c5.topic === s3 && this.deletePendingSessionRequest(c5.id, tr("USER_DISCONNECTED"));
      }), s3 === ((e2 = this.sessionRequestQueue.queue[0]) == null ? void 0 : e2.topic) && (this.sessionRequestQueue.state = x4.idle), r3 && this.client.events.emit("session_delete", { id: o4, topic: s3 });
    }, this.deleteProposal = async (t, e2) => {
      if (e2) try {
        const s3 = this.client.proposal.get(t), i4 = this.client.core.eventClient.getEvent({ topic: s3.pairingTopic });
        i4 == null ? void 0 : i4.setError(Br.proposal_expired);
      } catch {
      }
      await Promise.all([this.client.proposal.delete(t, tr("USER_DISCONNECTED")), e2 ? Promise.resolve() : this.client.core.expirer.del(t)]), this.addToRecentlyDeleted(t, "proposal");
    }, this.deletePendingSessionRequest = async (t, e2, s3 = false) => {
      await Promise.all([this.client.pendingRequest.delete(t, e2), s3 ? Promise.resolve() : this.client.core.expirer.del(t)]), this.addToRecentlyDeleted(t, "request"), this.sessionRequestQueue.queue = this.sessionRequestQueue.queue.filter((i4) => i4.id !== t), s3 && (this.sessionRequestQueue.state = x4.idle, this.client.events.emit("session_request_expire", { id: t }));
    }, this.deletePendingAuthRequest = async (t, e2, s3 = false) => {
      await Promise.all([this.client.auth.requests.delete(t, e2), s3 ? Promise.resolve() : this.client.core.expirer.del(t)]);
    }, this.setExpiry = async (t, e2) => {
      this.client.session.keys.includes(t) && (this.client.core.expirer.set(t, e2), await this.client.session.update(t, { expiry: e2 }));
    }, this.setProposal = async (t, e2) => {
      this.client.core.expirer.set(t, As(S5.wc_sessionPropose.req.ttl)), await this.client.proposal.set(t, e2);
    }, this.setAuthRequest = async (t, e2) => {
      const { request: s3, pairingTopic: i4 } = e2;
      this.client.core.expirer.set(t, s3.expiryTimestamp), await this.client.auth.requests.set(t, { authPayload: s3.authPayload, requester: s3.requester, expiryTimestamp: s3.expiryTimestamp, id: t, pairingTopic: i4, verifyContext: s3.verifyContext });
    }, this.setPendingSessionRequest = async (t) => {
      const { id: e2, topic: s3, params: i4, verifyContext: r3 } = t, o4 = i4.request.expiryTimestamp || As(S5.wc_sessionRequest.req.ttl);
      this.client.core.expirer.set(e2, o4), await this.client.pendingRequest.set(e2, { id: e2, topic: s3, params: i4, verifyContext: r3 });
    }, this.sendRequest = async (t) => {
      const { topic: e2, method: s3, params: i4, expiry: r3, relayRpcId: o4, clientRpcId: a4, throwOnFailedPublish: c5 } = t, h5 = formatJsonRpcRequest(s3, i4, a4);
      let l4;
      try {
        l4 = await this.client.core.crypto.encode(e2, h5);
      } catch (u3) {
        throw await this.cleanup(), this.client.logger.error(`sendRequest() -> core.crypto.encode() for topic ${e2} failed`), u3;
      }
      let g3;
      if (Xe3.includes(s3)) {
        const u3 = Pu(JSON.stringify(h5)), _3 = Pu(l4);
        g3 = await this.client.core.verify.register({ id: _3, decryptedId: u3 });
      }
      const d3 = S5[s3].req;
      return d3.attestation = g3, r3 && (d3.ttl = r3), o4 && (d3.id = o4), this.client.core.history.set(e2, h5), c5 ? (d3.internal = j4(E3({}, d3.internal), { throwOnFailedPublish: true }), await this.client.core.relayer.publish(e2, l4, d3)) : this.client.core.relayer.publish(e2, l4, d3).catch((u3) => this.client.logger.error(u3)), h5.id;
    }, this.sendResult = async (t) => {
      const { id: e2, topic: s3, result: i4, throwOnFailedPublish: r3, encodeOpts: o4 } = t, a4 = formatJsonRpcResult(e2, i4);
      let c5;
      try {
        c5 = await this.client.core.crypto.encode(s3, a4, o4);
      } catch (g3) {
        throw await this.cleanup(), this.client.logger.error(`sendResult() -> core.crypto.encode() for topic ${s3} failed`), g3;
      }
      let h5;
      try {
        h5 = await this.client.core.history.get(s3, e2);
      } catch (g3) {
        throw this.client.logger.error(`sendResult() -> history.get(${s3}, ${e2}) failed`), g3;
      }
      const l4 = S5[h5.request.method].res;
      r3 ? (l4.internal = j4(E3({}, l4.internal), { throwOnFailedPublish: true }), await this.client.core.relayer.publish(s3, c5, l4)) : this.client.core.relayer.publish(s3, c5, l4).catch((g3) => this.client.logger.error(g3)), await this.client.core.history.resolve(a4);
    }, this.sendError = async (t) => {
      const { id: e2, topic: s3, error: i4, encodeOpts: r3, rpcOpts: o4 } = t, a4 = formatJsonRpcError(e2, i4);
      let c5;
      try {
        c5 = await this.client.core.crypto.encode(s3, a4, r3);
      } catch (g3) {
        throw await this.cleanup(), this.client.logger.error(`sendError() -> core.crypto.encode() for topic ${s3} failed`), g3;
      }
      let h5;
      try {
        h5 = await this.client.core.history.get(s3, e2);
      } catch (g3) {
        throw this.client.logger.error(`sendError() -> history.get(${s3}, ${e2}) failed`), g3;
      }
      const l4 = o4 || S5[h5.request.method].res;
      this.client.core.relayer.publish(s3, c5, l4), await this.client.core.history.resolve(a4);
    }, this.cleanup = async () => {
      const t = [], e2 = [];
      this.client.session.getAll().forEach((s3) => {
        let i4 = false;
        bs(s3.expiry) && (i4 = true), this.client.core.crypto.keychain.has(s3.topic) || (i4 = true), i4 && t.push(s3.topic);
      }), this.client.proposal.getAll().forEach((s3) => {
        bs(s3.expiryTimestamp) && e2.push(s3.id);
      }), await Promise.all([...t.map((s3) => this.deleteSession({ topic: s3 })), ...e2.map((s3) => this.deleteProposal(s3))]);
    }, this.onRelayEventRequest = async (t) => {
      this.requestQueue.queue.push(t), await this.processRequestsQueue();
    }, this.processRequestsQueue = async () => {
      if (this.requestQueue.state === x4.active) {
        this.client.logger.info("Request queue already active, skipping...");
        return;
      }
      for (this.client.logger.info(`Request queue starting with ${this.requestQueue.queue.length} requests`); this.requestQueue.queue.length > 0; ) {
        this.requestQueue.state = x4.active;
        const t = this.requestQueue.queue.shift();
        if (t) try {
          await this.processRequest(t);
        } catch (e2) {
          this.client.logger.warn(e2);
        }
      }
      this.requestQueue.state = x4.idle;
    }, this.processRequest = async (t) => {
      const { topic: e2, payload: s3, attestation: i4, encryptedId: r3 } = t, o4 = s3.method;
      if (!this.shouldIgnorePairingRequest({ topic: e2, requestMethod: o4 })) switch (o4) {
        case "wc_sessionPropose":
          return await this.onSessionProposeRequest({ topic: e2, payload: s3, attestation: i4, encryptedId: r3 });
        case "wc_sessionSettle":
          return await this.onSessionSettleRequest(e2, s3);
        case "wc_sessionUpdate":
          return await this.onSessionUpdateRequest(e2, s3);
        case "wc_sessionExtend":
          return await this.onSessionExtendRequest(e2, s3);
        case "wc_sessionPing":
          return await this.onSessionPingRequest(e2, s3);
        case "wc_sessionDelete":
          return await this.onSessionDeleteRequest(e2, s3);
        case "wc_sessionRequest":
          return await this.onSessionRequest({ topic: e2, payload: s3, attestation: i4, encryptedId: r3 });
        case "wc_sessionEvent":
          return await this.onSessionEventRequest(e2, s3);
        case "wc_sessionAuthenticate":
          return await this.onSessionAuthenticateRequest({ topic: e2, payload: s3, attestation: i4, encryptedId: r3 });
        default:
          return this.client.logger.info(`Unsupported request method ${o4}`);
      }
    }, this.onRelayEventResponse = async (t) => {
      const { topic: e2, payload: s3 } = t, i4 = (await this.client.core.history.get(e2, s3.id)).request.method;
      switch (i4) {
        case "wc_sessionPropose":
          return this.onSessionProposeResponse(e2, s3);
        case "wc_sessionSettle":
          return this.onSessionSettleResponse(e2, s3);
        case "wc_sessionUpdate":
          return this.onSessionUpdateResponse(e2, s3);
        case "wc_sessionExtend":
          return this.onSessionExtendResponse(e2, s3);
        case "wc_sessionPing":
          return this.onSessionPingResponse(e2, s3);
        case "wc_sessionRequest":
          return this.onSessionRequestResponse(e2, s3);
        case "wc_sessionAuthenticate":
          return this.onSessionAuthenticateResponse(e2, s3);
        default:
          return this.client.logger.info(`Unsupported response method ${i4}`);
      }
    }, this.onRelayEventUnknownPayload = (t) => {
      const { topic: e2 } = t, { message: s3 } = xe("MISSING_OR_INVALID", `Decoded payload on topic ${e2} is not identifiable as a JSON-RPC request or a response.`);
      throw new Error(s3);
    }, this.shouldIgnorePairingRequest = (t) => {
      const { topic: e2, requestMethod: s3 } = t, i4 = this.expectedPairingMethodMap.get(e2);
      return !i4 || i4.includes(s3) ? false : !!(i4.includes("wc_sessionAuthenticate") && this.client.events.listenerCount("session_authenticate") > 0);
    }, this.onSessionProposeRequest = async (t) => {
      const { topic: e2, payload: s3, attestation: i4, encryptedId: r3 } = t, { params: o4, id: a4 } = s3;
      try {
        const c5 = this.client.core.eventClient.getEvent({ topic: e2 });
        this.isValidConnect(E3({}, s3.params));
        const h5 = o4.expiryTimestamp || As(S5.wc_sessionPropose.req.ttl), l4 = E3({ id: a4, pairingTopic: e2, expiryTimestamp: h5 }, o4);
        await this.setProposal(a4, l4);
        const g3 = await this.getVerifyContext({ attestationId: i4, hash: Pu(JSON.stringify(s3)), encryptedId: r3, metadata: l4.proposer.metadata });
        this.client.events.listenerCount("session_proposal") === 0 && (console.warn("No listener for session_proposal event"), c5 == null ? void 0 : c5.setError(F.proposal_listener_not_found)), c5 == null ? void 0 : c5.addTrace(L3.emit_session_proposal), this.client.events.emit("session_proposal", { id: a4, params: l4, verifyContext: g3 });
      } catch (c5) {
        await this.sendError({ id: a4, topic: e2, error: c5, rpcOpts: S5.wc_sessionPropose.autoReject }), this.client.logger.error(c5);
      }
    }, this.onSessionProposeResponse = async (t, e2) => {
      const { id: s3 } = e2;
      if (isJsonRpcResult(e2)) {
        const { result: i4 } = e2;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", result: i4 });
        const r3 = this.client.proposal.get(s3);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", proposal: r3 });
        const o4 = r3.proposer.publicKey;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", selfPublicKey: o4 });
        const a4 = i4.responderPublicKey;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", peerPublicKey: a4 });
        const c5 = await this.client.core.crypto.generateSharedKey(o4, a4);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", sessionTopic: c5 });
        const h5 = await this.client.core.relayer.subscribe(c5);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", subscriptionId: h5 }), await this.client.core.pairing.activate({ topic: t });
      } else if (isJsonRpcError(e2)) {
        await this.client.proposal.delete(s3, tr("USER_DISCONNECTED"));
        const i4 = ys("session_connect");
        if (this.events.listenerCount(i4) === 0) throw new Error(`emitting ${i4} without any listeners, 954`);
        this.events.emit(ys("session_connect"), { error: e2.error });
      }
    }, this.onSessionSettleRequest = async (t, e2) => {
      const { id: s3, params: i4 } = e2;
      try {
        this.isValidSessionSettleRequest(i4);
        const { relay: r3, controller: o4, expiry: a4, namespaces: c5, sessionProperties: h5, sessionConfig: l4 } = e2.params, g3 = E3(E3({ topic: t, relay: r3, expiry: a4, namespaces: c5, acknowledged: true, pairingTopic: "", requiredNamespaces: {}, optionalNamespaces: {}, controller: o4.publicKey, self: { publicKey: "", metadata: this.client.metadata }, peer: { publicKey: o4.publicKey, metadata: o4.metadata } }, h5 && { sessionProperties: h5 }), l4 && { sessionConfig: l4 }), d3 = ys("session_connect");
        if (this.events.listenerCount(d3) === 0) throw new Error(`emitting ${d3} without any listeners 997`);
        this.events.emit(ys("session_connect"), { session: g3 }), await this.sendResult({ id: e2.id, topic: t, result: true, throwOnFailedPublish: true });
      } catch (r3) {
        await this.sendError({ id: s3, topic: t, error: r3 }), this.client.logger.error(r3);
      }
    }, this.onSessionSettleResponse = async (t, e2) => {
      const { id: s3 } = e2;
      isJsonRpcResult(e2) ? (await this.client.session.update(t, { acknowledged: true }), this.events.emit(ys("session_approve", s3), {})) : isJsonRpcError(e2) && (await this.client.session.delete(t, tr("USER_DISCONNECTED")), this.events.emit(ys("session_approve", s3), { error: e2.error }));
    }, this.onSessionUpdateRequest = async (t, e2) => {
      const { params: s3, id: i4 } = e2;
      try {
        const r3 = `${t}_session_update`, o4 = _h.get(r3);
        if (o4 && this.isRequestOutOfSync(o4, i4)) {
          this.client.logger.info(`Discarding out of sync request - ${i4}`), this.sendError({ id: i4, topic: t, error: tr("INVALID_UPDATE_REQUEST") });
          return;
        }
        this.isValidUpdate(E3({ topic: t }, s3));
        try {
          _h.set(r3, i4), await this.client.session.update(t, { namespaces: s3.namespaces }), await this.sendResult({ id: i4, topic: t, result: true, throwOnFailedPublish: true });
        } catch (a4) {
          throw _h.delete(r3), a4;
        }
        this.client.events.emit("session_update", { id: i4, topic: t, params: s3 });
      } catch (r3) {
        await this.sendError({ id: i4, topic: t, error: r3 }), this.client.logger.error(r3);
      }
    }, this.isRequestOutOfSync = (t, e2) => parseInt(e2.toString().slice(0, -3)) <= parseInt(t.toString().slice(0, -3)), this.onSessionUpdateResponse = (t, e2) => {
      const { id: s3 } = e2, i4 = ys("session_update", s3);
      if (this.events.listenerCount(i4) === 0) throw new Error(`emitting ${i4} without any listeners`);
      isJsonRpcResult(e2) ? this.events.emit(ys("session_update", s3), {}) : isJsonRpcError(e2) && this.events.emit(ys("session_update", s3), { error: e2.error });
    }, this.onSessionExtendRequest = async (t, e2) => {
      const { id: s3 } = e2;
      try {
        this.isValidExtend({ topic: t }), await this.setExpiry(t, As(k3)), await this.sendResult({ id: s3, topic: t, result: true, throwOnFailedPublish: true }), this.client.events.emit("session_extend", { id: s3, topic: t });
      } catch (i4) {
        await this.sendError({ id: s3, topic: t, error: i4 }), this.client.logger.error(i4);
      }
    }, this.onSessionExtendResponse = (t, e2) => {
      const { id: s3 } = e2, i4 = ys("session_extend", s3);
      if (this.events.listenerCount(i4) === 0) throw new Error(`emitting ${i4} without any listeners`);
      isJsonRpcResult(e2) ? this.events.emit(ys("session_extend", s3), {}) : isJsonRpcError(e2) && this.events.emit(ys("session_extend", s3), { error: e2.error });
    }, this.onSessionPingRequest = async (t, e2) => {
      const { id: s3 } = e2;
      try {
        this.isValidPing({ topic: t }), await this.sendResult({ id: s3, topic: t, result: true, throwOnFailedPublish: true }), this.client.events.emit("session_ping", { id: s3, topic: t });
      } catch (i4) {
        await this.sendError({ id: s3, topic: t, error: i4 }), this.client.logger.error(i4);
      }
    }, this.onSessionPingResponse = (t, e2) => {
      const { id: s3 } = e2, i4 = ys("session_ping", s3);
      if (this.events.listenerCount(i4) === 0) throw new Error(`emitting ${i4} without any listeners`);
      setTimeout(() => {
        isJsonRpcResult(e2) ? this.events.emit(ys("session_ping", s3), {}) : isJsonRpcError(e2) && this.events.emit(ys("session_ping", s3), { error: e2.error });
      }, 500);
    }, this.onSessionDeleteRequest = async (t, e2) => {
      const { id: s3 } = e2;
      try {
        this.isValidDisconnect({ topic: t, reason: e2.params }), await Promise.all([new Promise((i4) => {
          this.client.core.relayer.once(w3.publish, async () => {
            i4(await this.deleteSession({ topic: t, id: s3 }));
          });
        }), this.sendResult({ id: s3, topic: t, result: true, throwOnFailedPublish: true }), this.cleanupPendingSentRequestsForTopic({ topic: t, error: tr("USER_DISCONNECTED") })]);
      } catch (i4) {
        this.client.logger.error(i4);
      }
    }, this.onSessionRequest = async (t) => {
      var e2;
      const { topic: s3, payload: i4, attestation: r3, encryptedId: o4 } = t, { id: a4, params: c5 } = i4;
      try {
        await this.isValidRequest(E3({ topic: s3 }, c5));
        const h5 = this.client.session.get(s3), l4 = await this.getVerifyContext({ attestationId: r3, hash: Pu(JSON.stringify(formatJsonRpcRequest("wc_sessionRequest", c5, a4))), encryptedId: o4, metadata: h5.peer.metadata }), g3 = { id: a4, topic: s3, params: c5, verifyContext: l4 };
        await this.setPendingSessionRequest(g3), (e2 = this.client.signConfig) != null && e2.disableRequestQueue ? this.emitSessionRequest(g3) : (this.addSessionRequestToSessionRequestQueue(g3), this.processSessionRequestQueue());
      } catch (h5) {
        await this.sendError({ id: a4, topic: s3, error: h5 }), this.client.logger.error(h5);
      }
    }, this.onSessionRequestResponse = (t, e2) => {
      const { id: s3 } = e2, i4 = ys("session_request", s3);
      if (this.events.listenerCount(i4) === 0) throw new Error(`emitting ${i4} without any listeners`);
      isJsonRpcResult(e2) ? this.events.emit(ys("session_request", s3), { result: e2.result }) : isJsonRpcError(e2) && this.events.emit(ys("session_request", s3), { error: e2.error });
    }, this.onSessionEventRequest = async (t, e2) => {
      const { id: s3, params: i4 } = e2;
      try {
        const r3 = `${t}_session_event_${i4.event.name}`, o4 = _h.get(r3);
        if (o4 && this.isRequestOutOfSync(o4, s3)) {
          this.client.logger.info(`Discarding out of sync request - ${s3}`);
          return;
        }
        this.isValidEmit(E3({ topic: t }, i4)), this.client.events.emit("session_event", { id: s3, topic: t, params: i4 }), _h.set(r3, s3);
      } catch (r3) {
        await this.sendError({ id: s3, topic: t, error: r3 }), this.client.logger.error(r3);
      }
    }, this.onSessionAuthenticateResponse = (t, e2) => {
      const { id: s3 } = e2;
      this.client.logger.trace({ type: "method", method: "onSessionAuthenticateResponse", topic: t, payload: e2 }), isJsonRpcResult(e2) ? this.events.emit(ys("session_request", s3), { result: e2.result }) : isJsonRpcError(e2) && this.events.emit(ys("session_request", s3), { error: e2.error });
    }, this.onSessionAuthenticateRequest = async (t) => {
      const { topic: e2, payload: s3, attestation: i4, encryptedId: r3 } = t;
      try {
        const { requester: o4, authPayload: a4, expiryTimestamp: c5 } = s3.params, h5 = await this.getVerifyContext({ attestationId: i4, hash: Pu(JSON.stringify(s3)), encryptedId: r3, metadata: this.client.metadata }), l4 = { requester: o4, pairingTopic: e2, id: s3.id, authPayload: a4, verifyContext: h5, expiryTimestamp: c5 };
        await this.setAuthRequest(s3.id, { request: l4, pairingTopic: e2 }), this.client.events.emit("session_authenticate", { topic: e2, params: s3.params, id: s3.id, verifyContext: h5 });
      } catch (o4) {
        this.client.logger.error(o4);
        const a4 = s3.params.requester.publicKey, c5 = await this.client.core.crypto.generateKeyPair(), h5 = { type: lr, receiverPublicKey: a4, senderPublicKey: c5 };
        await this.sendError({ id: s3.id, topic: e2, error: o4, encodeOpts: h5, rpcOpts: S5.wc_sessionAuthenticate.autoReject });
      }
    }, this.addSessionRequestToSessionRequestQueue = (t) => {
      this.sessionRequestQueue.queue.push(t);
    }, this.cleanupAfterResponse = (t) => {
      this.deletePendingSessionRequest(t.response.id, { message: "fulfilled", code: 0 }), setTimeout(() => {
        this.sessionRequestQueue.state = x4.idle, this.processSessionRequestQueue();
      }, (0, import_time5.toMiliseconds)(this.requestQueueDelay));
    }, this.cleanupPendingSentRequestsForTopic = ({ topic: t, error: e2 }) => {
      const s3 = this.client.core.history.pending;
      s3.length > 0 && s3.filter((i4) => i4.topic === t && i4.request.method === "wc_sessionRequest").forEach((i4) => {
        const r3 = i4.request.id, o4 = ys("session_request", r3);
        if (this.events.listenerCount(o4) === 0) throw new Error(`emitting ${o4} without any listeners`);
        this.events.emit(ys("session_request", i4.request.id), { error: e2 });
      });
    }, this.processSessionRequestQueue = () => {
      if (this.sessionRequestQueue.state === x4.active) {
        this.client.logger.info("session request queue is already active.");
        return;
      }
      const t = this.sessionRequestQueue.queue[0];
      if (!t) {
        this.client.logger.info("session request queue is empty.");
        return;
      }
      try {
        this.sessionRequestQueue.state = x4.active, this.emitSessionRequest(t);
      } catch (e2) {
        this.client.logger.error(e2);
      }
    }, this.emitSessionRequest = (t) => {
      this.client.events.emit("session_request", t);
    }, this.onPairingCreated = (t) => {
      if (t.methods && this.expectedPairingMethodMap.set(t.topic, t.methods), t.active) return;
      const e2 = this.client.proposal.getAll().find((s3) => s3.pairingTopic === t.topic);
      e2 && this.onSessionProposeRequest({ topic: t.topic, payload: formatJsonRpcRequest("wc_sessionPropose", { requiredNamespaces: e2.requiredNamespaces, optionalNamespaces: e2.optionalNamespaces, relays: e2.relays, proposer: e2.proposer, sessionProperties: e2.sessionProperties }, e2.id) });
    }, this.isValidConnect = async (t) => {
      if (!vh(t)) {
        const { message: a4 } = xe("MISSING_OR_INVALID", `connect() params: ${JSON.stringify(t)}`);
        throw new Error(a4);
      }
      const { pairingTopic: e2, requiredNamespaces: s3, optionalNamespaces: i4, sessionProperties: r3, relays: o4 } = t;
      if (Pe(e2) || await this.isValidPairingTopic(e2), !dh(o4, true)) {
        const { message: a4 } = xe("MISSING_OR_INVALID", `connect() relays: ${o4}`);
        throw new Error(a4);
      }
      !Pe(s3) && Yr(s3) !== 0 && this.validateNamespaces(s3, "requiredNamespaces"), !Pe(i4) && Yr(i4) !== 0 && this.validateNamespaces(i4, "optionalNamespaces"), Pe(r3) || this.validateSessionProps(r3, "sessionProperties");
    }, this.validateNamespaces = (t, e2) => {
      const s3 = lh(t, "connect()", e2);
      if (s3) throw new Error(s3.message);
    }, this.isValidApprove = async (t) => {
      if (!vh(t)) throw new Error(xe("MISSING_OR_INVALID", `approve() params: ${t}`).message);
      const { id: e2, namespaces: s3, relayProtocol: i4, sessionProperties: r3 } = t;
      this.checkRecentlyDeleted(e2), await this.isValidProposalId(e2);
      const o4 = this.client.proposal.get(e2), a4 = Bo(s3, "approve()");
      if (a4) throw new Error(a4.message);
      const c5 = Ro(o4.requiredNamespaces, s3, "approve()");
      if (c5) throw new Error(c5.message);
      if (!Gt(i4, true)) {
        const { message: h5 } = xe("MISSING_OR_INVALID", `approve() relayProtocol: ${i4}`);
        throw new Error(h5);
      }
      Pe(r3) || this.validateSessionProps(r3, "sessionProperties");
    }, this.isValidReject = async (t) => {
      if (!vh(t)) {
        const { message: i4 } = xe("MISSING_OR_INVALID", `reject() params: ${t}`);
        throw new Error(i4);
      }
      const { id: e2, reason: s3 } = t;
      if (this.checkRecentlyDeleted(e2), await this.isValidProposalId(e2), !mh(s3)) {
        const { message: i4 } = xe("MISSING_OR_INVALID", `reject() reason: ${JSON.stringify(s3)}`);
        throw new Error(i4);
      }
    }, this.isValidSessionSettleRequest = (t) => {
      if (!vh(t)) {
        const { message: c5 } = xe("MISSING_OR_INVALID", `onSessionSettleRequest() params: ${t}`);
        throw new Error(c5);
      }
      const { relay: e2, controller: s3, namespaces: i4, expiry: r3 } = t;
      if (!Co(e2)) {
        const { message: c5 } = xe("MISSING_OR_INVALID", "onSessionSettleRequest() relay protocol should be a string");
        throw new Error(c5);
      }
      const o4 = ch(s3, "onSessionSettleRequest()");
      if (o4) throw new Error(o4.message);
      const a4 = Bo(i4, "onSessionSettleRequest()");
      if (a4) throw new Error(a4.message);
      if (bs(r3)) {
        const { message: c5 } = xe("EXPIRED", "onSessionSettleRequest()");
        throw new Error(c5);
      }
    }, this.isValidUpdate = async (t) => {
      if (!vh(t)) {
        const { message: a4 } = xe("MISSING_OR_INVALID", `update() params: ${t}`);
        throw new Error(a4);
      }
      const { topic: e2, namespaces: s3 } = t;
      this.checkRecentlyDeleted(e2), await this.isValidSessionTopic(e2);
      const i4 = this.client.session.get(e2), r3 = Bo(s3, "update()");
      if (r3) throw new Error(r3.message);
      const o4 = Ro(i4.requiredNamespaces, s3, "update()");
      if (o4) throw new Error(o4.message);
    }, this.isValidExtend = async (t) => {
      if (!vh(t)) {
        const { message: s3 } = xe("MISSING_OR_INVALID", `extend() params: ${t}`);
        throw new Error(s3);
      }
      const { topic: e2 } = t;
      this.checkRecentlyDeleted(e2), await this.isValidSessionTopic(e2);
    }, this.isValidRequest = async (t) => {
      if (!vh(t)) {
        const { message: a4 } = xe("MISSING_OR_INVALID", `request() params: ${t}`);
        throw new Error(a4);
      }
      const { topic: e2, request: s3, chainId: i4, expiry: r3 } = t;
      this.checkRecentlyDeleted(e2), await this.isValidSessionTopic(e2);
      const { namespaces: o4 } = this.client.session.get(e2);
      if (!yh(o4, i4)) {
        const { message: a4 } = xe("MISSING_OR_INVALID", `request() chainId: ${i4}`);
        throw new Error(a4);
      }
      if (!gh(s3)) {
        const { message: a4 } = xe("MISSING_OR_INVALID", `request() ${JSON.stringify(s3)}`);
        throw new Error(a4);
      }
      if (!wh(o4, i4, s3.method)) {
        const { message: a4 } = xe("MISSING_OR_INVALID", `request() method: ${s3.method}`);
        throw new Error(a4);
      }
      if (r3 && !Sh(r3, he2)) {
        const { message: a4 } = xe("MISSING_OR_INVALID", `request() expiry: ${r3}. Expiry must be a number (in seconds) between ${he2.min} and ${he2.max}`);
        throw new Error(a4);
      }
    }, this.isValidRespond = async (t) => {
      var e2;
      if (!vh(t)) {
        const { message: r3 } = xe("MISSING_OR_INVALID", `respond() params: ${t}`);
        throw new Error(r3);
      }
      const { topic: s3, response: i4 } = t;
      try {
        await this.isValidSessionTopic(s3);
      } catch (r3) {
        throw (e2 = t == null ? void 0 : t.response) != null && e2.id && this.cleanupAfterResponse(t), r3;
      }
      if (!Ah(i4)) {
        const { message: r3 } = xe("MISSING_OR_INVALID", `respond() response: ${JSON.stringify(i4)}`);
        throw new Error(r3);
      }
    }, this.isValidPing = async (t) => {
      if (!vh(t)) {
        const { message: s3 } = xe("MISSING_OR_INVALID", `ping() params: ${t}`);
        throw new Error(s3);
      }
      const { topic: e2 } = t;
      await this.isValidSessionOrPairingTopic(e2);
    }, this.isValidEmit = async (t) => {
      if (!vh(t)) {
        const { message: o4 } = xe("MISSING_OR_INVALID", `emit() params: ${t}`);
        throw new Error(o4);
      }
      const { topic: e2, event: s3, chainId: i4 } = t;
      await this.isValidSessionTopic(e2);
      const { namespaces: r3 } = this.client.session.get(e2);
      if (!yh(r3, i4)) {
        const { message: o4 } = xe("MISSING_OR_INVALID", `emit() chainId: ${i4}`);
        throw new Error(o4);
      }
      if (!bh(s3)) {
        const { message: o4 } = xe("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(s3)}`);
        throw new Error(o4);
      }
      if (!xh(r3, i4, s3.name)) {
        const { message: o4 } = xe("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(s3)}`);
        throw new Error(o4);
      }
    }, this.isValidDisconnect = async (t) => {
      if (!vh(t)) {
        const { message: s3 } = xe("MISSING_OR_INVALID", `disconnect() params: ${t}`);
        throw new Error(s3);
      }
      const { topic: e2 } = t;
      await this.isValidSessionOrPairingTopic(e2);
    }, this.isValidAuthenticate = (t) => {
      const { chains: e2, uri: s3, domain: i4, nonce: r3 } = t;
      if (!Array.isArray(e2) || e2.length === 0) throw new Error("chains is required and must be a non-empty array");
      if (!Gt(s3, false)) throw new Error("uri is required parameter");
      if (!Gt(i4, false)) throw new Error("domain is required parameter");
      if (!Gt(r3, false)) throw new Error("nonce is required parameter");
      if ([...new Set(e2.map((a4) => pn(a4).namespace))].length > 1) throw new Error("Multi-namespace requests are not supported. Please request single namespace only.");
      const { namespace: o4 } = pn(e2[0]);
      if (o4 !== "eip155") throw new Error("Only eip155 namespace is supported for authenticated sessions. Please use .connect() for non-eip155 chains.");
    }, this.getVerifyContext = async (t) => {
      const { attestationId: e2, hash: s3, encryptedId: i4, metadata: r3 } = t, o4 = { verified: { verifyUrl: r3.verifyUrl || W, validation: "UNKNOWN", origin: r3.url || "" } };
      try {
        const a4 = await this.client.core.verify.resolve({ attestationId: e2, hash: s3, encryptedId: i4, verifyUrl: r3.verifyUrl });
        a4 && (o4.verified.origin = a4.origin, o4.verified.isScam = a4.isScam, o4.verified.validation = a4.origin === new URL(r3.url).origin ? "VALID" : "INVALID");
      } catch (a4) {
        this.client.logger.warn(a4);
      }
      return this.client.logger.debug(`Verify context: ${JSON.stringify(o4)}`), o4;
    }, this.validateSessionProps = (t, e2) => {
      Object.values(t).forEach((s3) => {
        if (!Gt(s3, false)) {
          const { message: i4 } = xe("MISSING_OR_INVALID", `${e2} must be in Record<string, string> format. Received: ${JSON.stringify(s3)}`);
          throw new Error(i4);
        }
      });
    }, this.getPendingAuthRequest = (t) => {
      const e2 = this.client.auth.requests.get(t);
      return typeof e2 == "object" ? e2 : void 0;
    }, this.addToRecentlyDeleted = (t, e2) => {
      if (this.recentlyDeletedMap.set(t, e2), this.recentlyDeletedMap.size >= this.recentlyDeletedLimit) {
        let s3 = 0;
        const i4 = this.recentlyDeletedLimit / 2;
        for (const r3 of this.recentlyDeletedMap.keys()) {
          if (s3++ >= i4) break;
          this.recentlyDeletedMap.delete(r3);
        }
      }
    }, this.checkRecentlyDeleted = (t) => {
      const e2 = this.recentlyDeletedMap.get(t);
      if (e2) {
        const { message: s3 } = xe("MISSING_OR_INVALID", `Record was recently deleted - ${e2}: ${t}`);
        throw new Error(s3);
      }
    };
  }
  async isInitialized() {
    if (!this.initialized) {
      const { message: n5 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(n5);
    }
    await this.client.core.relayer.confirmOnlineStateOrThrow();
  }
  registerRelayerEvents() {
    this.client.core.relayer.on(w3.message, (n5) => {
      !this.initialized || this.relayMessageCache.length > 0 ? this.relayMessageCache.push(n5) : this.onRelayMessage(n5);
    });
  }
  async onRelayMessage(n5) {
    const { topic: t, message: e2, attestation: s3 } = n5, { publicKey: i4 } = this.client.auth.authKeys.keys.includes(ie3) ? this.client.auth.authKeys.get(ie3) : { responseTopic: void 0, publicKey: void 0 }, r3 = await this.client.core.crypto.decode(t, e2, { receiverPublicKey: i4 });
    try {
      isJsonRpcRequest(r3) ? (this.client.core.history.set(t, r3), this.onRelayEventRequest({ topic: t, payload: r3, attestation: s3, encryptedId: Pu(e2) })) : isJsonRpcResponse(r3) ? (await this.client.core.history.resolve(r3), await this.onRelayEventResponse({ topic: t, payload: r3 }), this.client.core.history.delete(t, r3.id)) : this.onRelayEventUnknownPayload({ topic: t, payload: r3 });
    } catch (o4) {
      this.client.logger.error(o4);
    }
  }
  registerExpirerEvents() {
    this.client.core.expirer.on(R.expired, async (n5) => {
      const { topic: t, id: e2 } = gs(n5.target);
      if (e2 && this.client.pendingRequest.keys.includes(e2)) return await this.deletePendingSessionRequest(e2, xe("EXPIRED"), true);
      if (e2 && this.client.auth.requests.keys.includes(e2)) return await this.deletePendingAuthRequest(e2, xe("EXPIRED"), true);
      t ? this.client.session.keys.includes(t) && (await this.deleteSession({ topic: t, expirerHasDeleted: true }), this.client.events.emit("session_expire", { topic: t })) : e2 && (await this.deleteProposal(e2, true), this.client.events.emit("proposal_expire", { id: e2 }));
    });
  }
  registerPairingEvents() {
    this.client.core.pairing.events.on(J.create, (n5) => this.onPairingCreated(n5)), this.client.core.pairing.events.on(J.delete, (n5) => {
      this.addToRecentlyDeleted(n5.topic, "pairing");
    });
  }
  isValidPairingTopic(n5) {
    if (!Gt(n5, false)) {
      const { message: t } = xe("MISSING_OR_INVALID", `pairing topic should be a string: ${n5}`);
      throw new Error(t);
    }
    if (!this.client.core.pairing.pairings.keys.includes(n5)) {
      const { message: t } = xe("NO_MATCHING_KEY", `pairing topic doesn't exist: ${n5}`);
      throw new Error(t);
    }
    if (bs(this.client.core.pairing.pairings.get(n5).expiry)) {
      const { message: t } = xe("EXPIRED", `pairing topic: ${n5}`);
      throw new Error(t);
    }
  }
  async isValidSessionTopic(n5) {
    if (!Gt(n5, false)) {
      const { message: t } = xe("MISSING_OR_INVALID", `session topic should be a string: ${n5}`);
      throw new Error(t);
    }
    if (this.checkRecentlyDeleted(n5), !this.client.session.keys.includes(n5)) {
      const { message: t } = xe("NO_MATCHING_KEY", `session topic doesn't exist: ${n5}`);
      throw new Error(t);
    }
    if (bs(this.client.session.get(n5).expiry)) {
      await this.deleteSession({ topic: n5 });
      const { message: t } = xe("EXPIRED", `session topic: ${n5}`);
      throw new Error(t);
    }
    if (!this.client.core.crypto.keychain.has(n5)) {
      const { message: t } = xe("MISSING_OR_INVALID", `session topic does not exist in keychain: ${n5}`);
      throw await this.deleteSession({ topic: n5 }), new Error(t);
    }
  }
  async isValidSessionOrPairingTopic(n5) {
    if (this.checkRecentlyDeleted(n5), this.client.session.keys.includes(n5)) await this.isValidSessionTopic(n5);
    else if (this.client.core.pairing.pairings.keys.includes(n5)) this.isValidPairingTopic(n5);
    else if (Gt(n5, false)) {
      const { message: t } = xe("NO_MATCHING_KEY", `session or pairing topic doesn't exist: ${n5}`);
      throw new Error(t);
    } else {
      const { message: t } = xe("MISSING_OR_INVALID", `session or pairing topic should be a string: ${n5}`);
      throw new Error(t);
    }
  }
  async isValidProposalId(n5) {
    if (!ph(n5)) {
      const { message: t } = xe("MISSING_OR_INVALID", `proposal id should be a number: ${n5}`);
      throw new Error(t);
    }
    if (!this.client.proposal.keys.includes(n5)) {
      const { message: t } = xe("NO_MATCHING_KEY", `proposal id doesn't exist: ${n5}`);
      throw new Error(t);
    }
    if (bs(this.client.proposal.get(n5).expiryTimestamp)) {
      await this.deleteProposal(n5);
      const { message: t } = xe("EXPIRED", `proposal id: ${n5}`);
      throw new Error(t);
    }
  }
};
var ns3 = class extends ei {
  constructor(n5, t) {
    super(n5, t, Fe, ce2), this.core = n5, this.logger = t;
  }
};
var it2 = class extends ei {
  constructor(n5, t) {
    super(n5, t, He2, ce2), this.core = n5, this.logger = t;
  }
};
var os = class extends ei {
  constructor(n5, t) {
    super(n5, t, Ye2, ce2, (e2) => e2.id), this.core = n5, this.logger = t;
  }
};
var as2 = class extends ei {
  constructor(n5, t) {
    super(n5, t, We3, se3, () => ie3), this.core = n5, this.logger = t;
  }
};
var cs = class extends ei {
  constructor(n5, t) {
    super(n5, t, Ze3, se3), this.core = n5, this.logger = t;
  }
};
var ls2 = class extends ei {
  constructor(n5, t) {
    super(n5, t, et2, se3, (e2) => e2.id), this.core = n5, this.logger = t;
  }
};
var hs = class {
  constructor(n5, t) {
    this.core = n5, this.logger = t, this.authKeys = new as2(this.core, this.logger), this.pairingTopics = new cs(this.core, this.logger), this.requests = new ls2(this.core, this.logger);
  }
  async init() {
    await this.authKeys.init(), await this.pairingTopics.init(), await this.requests.init();
  }
};
var pe3 = class _pe extends S2 {
  constructor(n5) {
    super(n5), this.protocol = qe2, this.version = ve3, this.name = le2.name, this.events = new import_events8.EventEmitter(), this.on = (e2, s3) => this.events.on(e2, s3), this.once = (e2, s3) => this.events.once(e2, s3), this.off = (e2, s3) => this.events.off(e2, s3), this.removeListener = (e2, s3) => this.events.removeListener(e2, s3), this.removeAllListeners = (e2) => this.events.removeAllListeners(e2), this.connect = async (e2) => {
      try {
        return await this.engine.connect(e2);
      } catch (s3) {
        throw this.logger.error(s3.message), s3;
      }
    }, this.pair = async (e2) => {
      try {
        return await this.engine.pair(e2);
      } catch (s3) {
        throw this.logger.error(s3.message), s3;
      }
    }, this.approve = async (e2) => {
      try {
        return await this.engine.approve(e2);
      } catch (s3) {
        throw this.logger.error(s3.message), s3;
      }
    }, this.reject = async (e2) => {
      try {
        return await this.engine.reject(e2);
      } catch (s3) {
        throw this.logger.error(s3.message), s3;
      }
    }, this.update = async (e2) => {
      try {
        return await this.engine.update(e2);
      } catch (s3) {
        throw this.logger.error(s3.message), s3;
      }
    }, this.extend = async (e2) => {
      try {
        return await this.engine.extend(e2);
      } catch (s3) {
        throw this.logger.error(s3.message), s3;
      }
    }, this.request = async (e2) => {
      try {
        return await this.engine.request(e2);
      } catch (s3) {
        throw this.logger.error(s3.message), s3;
      }
    }, this.respond = async (e2) => {
      try {
        return await this.engine.respond(e2);
      } catch (s3) {
        throw this.logger.error(s3.message), s3;
      }
    }, this.ping = async (e2) => {
      try {
        return await this.engine.ping(e2);
      } catch (s3) {
        throw this.logger.error(s3.message), s3;
      }
    }, this.emit = async (e2) => {
      try {
        return await this.engine.emit(e2);
      } catch (s3) {
        throw this.logger.error(s3.message), s3;
      }
    }, this.disconnect = async (e2) => {
      try {
        return await this.engine.disconnect(e2);
      } catch (s3) {
        throw this.logger.error(s3.message), s3;
      }
    }, this.find = (e2) => {
      try {
        return this.engine.find(e2);
      } catch (s3) {
        throw this.logger.error(s3.message), s3;
      }
    }, this.getPendingSessionRequests = () => {
      try {
        return this.engine.getPendingSessionRequests();
      } catch (e2) {
        throw this.logger.error(e2.message), e2;
      }
    }, this.authenticate = async (e2) => {
      try {
        return await this.engine.authenticate(e2);
      } catch (s3) {
        throw this.logger.error(s3.message), s3;
      }
    }, this.formatAuthMessage = (e2) => {
      try {
        return this.engine.formatAuthMessage(e2);
      } catch (s3) {
        throw this.logger.error(s3.message), s3;
      }
    }, this.approveSessionAuthenticate = async (e2) => {
      try {
        return await this.engine.approveSessionAuthenticate(e2);
      } catch (s3) {
        throw this.logger.error(s3.message), s3;
      }
    }, this.rejectSessionAuthenticate = async (e2) => {
      try {
        return await this.engine.rejectSessionAuthenticate(e2);
      } catch (s3) {
        throw this.logger.error(s3.message), s3;
      }
    }, this.name = (n5 == null ? void 0 : n5.name) || le2.name, this.metadata = (n5 == null ? void 0 : n5.metadata) || rs(), this.signConfig = n5 == null ? void 0 : n5.signConfig;
    const t = typeof (n5 == null ? void 0 : n5.logger) < "u" && typeof (n5 == null ? void 0 : n5.logger) != "string" ? n5.logger : (0, import_pino2.default)(k2({ level: (n5 == null ? void 0 : n5.logger) || le2.logger }));
    this.core = (n5 == null ? void 0 : n5.core) || new vn(n5), this.logger = E2(t, this.name), this.session = new it2(this.core, this.logger), this.proposal = new ns3(this.core, this.logger), this.pendingRequest = new os(this.core, this.logger), this.engine = new rs3(this), this.auth = new hs(this.core, this.logger);
  }
  static async init(n5) {
    const t = new _pe(n5);
    return await t.initialize(), t;
  }
  get context() {
    return y2(this.logger);
  }
  get pairing() {
    return this.core.pairing.pairings;
  }
  async initialize() {
    this.logger.trace("Initialized");
    try {
      await this.core.start(), await this.session.init(), await this.proposal.init(), await this.pendingRequest.init(), await this.engine.init(), await this.auth.init(), this.logger.info("SignClient Initialization Success"), this.engine.processRelayMessageCache();
    } catch (n5) {
      throw this.logger.info("SignClient Initialization Failure"), this.logger.error(n5.message), n5;
    }
  }
};

// node_modules/@web3auth/wallet-connect-v2-adapter/dist/walletConnectV2Adapter.esm.js
var import_lodash2 = __toESM(require_lodash());
var WALLET_CONNECT_EXTENSION_ADAPTERS = [{
  name: "Rainbow",
  chains: [CHAIN_NAMESPACES.EIP155],
  logo: "https://images.web3auth.io/login-rainbow.svg",
  mobile: {
    native: "rainbow:",
    universal: "https://rnbwapp.com"
  },
  desktop: {
    native: "",
    universal: ""
  }
}, {
  name: "MetaMask",
  chains: [CHAIN_NAMESPACES.EIP155],
  logo: "https://images.web3auth.io/login-metamask.svg",
  mobile: {
    native: "metamask:",
    universal: "https://metamask.app.link"
  },
  desktop: {
    native: "",
    universal: ""
  }
}, {
  name: "Argent",
  chains: [CHAIN_NAMESPACES.EIP155],
  logo: "https://images.web3auth.io/login-argent.svg",
  mobile: {
    native: "argent://",
    universal: "https://www.argent.xyz/app"
  },
  desktop: {
    native: "",
    universal: ""
  }
}, {
  name: "Trust Wallet",
  chains: [CHAIN_NAMESPACES.EIP155],
  logo: "https://images.web3auth.io/login-trust.svg",
  mobile: {
    native: "trust:",
    universal: "https://link.trustwallet.com"
  },
  desktop: {
    native: "",
    universal: ""
  }
}, {
  name: "Zerion",
  chains: [CHAIN_NAMESPACES.EIP155],
  logo: "https://images.web3auth.io/login-zerion.svg",
  mobile: {
    native: "zerion://",
    universal: "https://wallet.zerion.io"
  },
  desktop: {
    native: "",
    universal: ""
  }
}];
var DEFAULT_EIP155_METHODS = function(DEFAULT_EIP155_METHODS2) {
  DEFAULT_EIP155_METHODS2["ETH_SEND_TRANSACTION"] = "eth_sendTransaction";
  DEFAULT_EIP155_METHODS2["ETH_SIGN_TRANSACTION"] = "eth_signTransaction";
  DEFAULT_EIP155_METHODS2["ETH_SIGN"] = "eth_sign";
  DEFAULT_EIP155_METHODS2["PERSONAL_SIGN"] = "personal_sign";
  DEFAULT_EIP155_METHODS2["ETH_SIGN_TYPED_DATA"] = "eth_signTypedData";
  DEFAULT_EIP155_METHODS2["ETH_SIGN_TYPED_DATA_V3"] = "eth_signTypedData_v3";
  DEFAULT_EIP155_METHODS2["ETH_SIGN_TYPED_DATA_V4"] = "eth_signTypedData_v4";
  DEFAULT_EIP155_METHODS2["ADD_ETHEREUM_CHAIN"] = "wallet_addEthereumChain";
  DEFAULT_EIP155_METHODS2["SWITCH_ETHEREUM_CHAIN"] = "wallet_switchEthereumChain";
  return DEFAULT_EIP155_METHODS2;
}({});
var DEFAULT_EIP_155_EVENTS = function(DEFAULT_EIP_155_EVENTS2) {
  DEFAULT_EIP_155_EVENTS2["ETH_CHAIN_CHANGED"] = "chainChanged";
  DEFAULT_EIP_155_EVENTS2["ETH_ACCOUNTS_CHANGED"] = "accountsChanged";
  return DEFAULT_EIP_155_EVENTS2;
}({});
var getSiteName = (window2) => {
  const {
    document: document2
  } = window2;
  const siteName = document2.querySelector('head > meta[property="og:site_name"]');
  if (siteName) {
    return siteName.content;
  }
  const metaTitle = document2.querySelector('head > meta[name="title"]');
  if (metaTitle) {
    return metaTitle.content;
  }
  if (document2.title && document2.title.length > 0) {
    return document2.title;
  }
  return window2.location.hostname;
};
function imgExists(url) {
  return new Promise((resolve, reject) => {
    try {
      const img = document.createElement("img");
      img.onload = () => resolve(true);
      img.onerror = () => resolve(false);
      img.src = url;
    } catch (e2) {
      reject(e2);
    }
  });
}
async function getSiteIcon(window2) {
  const {
    document: document2
  } = window2;
  let icon = document2.querySelector('head > link[rel="shortcut icon"]');
  if (icon && await imgExists(icon.href)) {
    return icon.href;
  }
  icon = Array.from(document2.querySelectorAll('head > link[rel="icon"]')).find((_icon) => Boolean(_icon.href)) || null;
  if (icon && await imgExists(icon.href)) {
    return icon.href;
  }
  return null;
}
var getSiteMetadata = async () => ({
  name: getSiteName(window),
  icon: await getSiteIcon(window)
});
var getNamespacesFromChains = (chains) => {
  const supportedNamespaces = [];
  chains.forEach((chainId) => {
    const [namespace] = chainId.split(":");
    if (!supportedNamespaces.includes(namespace)) {
      supportedNamespaces.push(namespace);
    }
  });
  return supportedNamespaces;
};
var getSupportedMethodsByNamespace = (namespace) => {
  switch (namespace) {
    case CHAIN_NAMESPACES.EIP155:
      return Object.values(DEFAULT_EIP155_METHODS);
    default:
      throw new Error(`No default methods for namespace: ${namespace}`);
  }
};
var getSupportedEventsByNamespace = (namespace) => {
  switch (namespace) {
    case CHAIN_NAMESPACES.EIP155:
      return Object.values(DEFAULT_EIP_155_EVENTS);
    default:
      throw new Error(`No default events for namespace: ${namespace}`);
  }
};
var getRequiredNamespaces = (chains) => {
  const selectedNamespaces = getNamespacesFromChains(chains);
  return Object.fromEntries(selectedNamespaces.map((namespace) => [namespace, {
    methods: getSupportedMethodsByNamespace(namespace),
    chains: chains.filter((chain) => chain.startsWith(namespace)),
    events: getSupportedEventsByNamespace(namespace)
  }]));
};
var getWalletConnectV2Settings = async (namespace, chainIds, projectID) => {
  if (namespace === CHAIN_NAMESPACES.EIP155) {
    const appMetadata = await getSiteMetadata();
    const adapterSettings = {
      walletConnectInitOptions: {
        projectId: projectID,
        relayUrl: "wss://relay.walletconnect.com",
        metadata: {
          name: appMetadata.name,
          description: appMetadata.name,
          url: window.location.origin,
          icons: [appMetadata.icon || ""]
        }
      }
    };
    const chainNamespaces = chainIds.map((chainId) => {
      return `${namespace}:${parseInt(chainId, 16)}`;
    });
    const loginSettings = {
      optionalNamespaces: getRequiredNamespaces(chainNamespaces)
    };
    return {
      adapterSettings,
      loginSettings
    };
  }
  throw new Error(`Unsupported chain namespace: ${namespace}`);
};
async function getLastActiveSession(signClient) {
  if (signClient.session.length) {
    const lastKeyIndex = signClient.session.keys.length - 1;
    return signClient.session.get(signClient.session.keys[lastKeyIndex]);
  }
  return null;
}
async function sendJrpcRequest(signClient, chainId, method, params) {
  const session = await getLastActiveSession(signClient);
  if (!session) {
    throw providerErrors.disconnected();
  }
  return signClient.request({
    topic: session.topic,
    chainId: `eip155:${chainId}`,
    request: {
      method,
      params
    }
  });
}
async function getAccounts(signClient) {
  const session = await getLastActiveSession(signClient);
  if (!session) {
    throw providerErrors.disconnected();
  }
  const accounts = Go(session.namespaces);
  if (accounts && accounts.length) {
    return [...new Set(accounts.map((add) => {
      return ci(add).address;
    }))];
  }
  throw WalletLoginError.connectionError("Failed to get accounts");
}
function getProviderHandlers({
  connector,
  chainId
}) {
  return {
    getPrivateKey: async () => {
      throw rpcErrors.methodNotSupported();
    },
    getAccounts: async (_3) => {
      return getAccounts(connector);
    },
    processTransaction: async (txParams, _3) => {
      const methodRes = await sendJrpcRequest(connector, chainId, "eth_sendTransaction", [txParams]);
      return methodRes;
    },
    processSignTransaction: async (txParams, _3) => {
      const methodRes = await sendJrpcRequest(connector, chainId, "eth_signTransaction", [txParams]);
      return methodRes;
    },
    processEthSignMessage: async (msgParams, _3) => {
      const methodRes = await sendJrpcRequest(connector, chainId, "eth_sign", [msgParams.from, msgParams.data]);
      return methodRes;
    },
    processPersonalMessage: async (msgParams, _3) => {
      const methodRes = await sendJrpcRequest(connector, chainId, "personal_sign", [msgParams.data, msgParams.from]);
      return methodRes;
    },
    processTypedMessage: async (msgParams, _3) => {
      const methodRes = await sendJrpcRequest(connector, chainId, "eth_signTypedData", [msgParams.data, msgParams.from]);
      return methodRes;
    },
    processTypedMessageV3: async (msgParams) => {
      const methodRes = await sendJrpcRequest(connector, chainId, "eth_signTypedData_v3", [msgParams.from, msgParams.data]);
      return methodRes;
    },
    processTypedMessageV4: async (msgParams) => {
      const methodRes = await sendJrpcRequest(connector, chainId, "eth_signTypedData_v4", [msgParams.from, msgParams.data]);
      return methodRes;
    }
  };
}
async function switchChain({
  connector,
  chainId,
  newChainId
}) {
  await sendJrpcRequest(connector, chainId, "wallet_switchEthereumChain", [{
    chainId: newChainId
  }]);
}
async function addChain({
  connector,
  chainId,
  chainConfig
}) {
  await sendJrpcRequest(connector, chainId, "wallet_addEthereumChain", [chainConfig]);
}
var _WalletConnectV2Provider;
var WalletConnectV2Provider = class extends BaseProvider {
  constructor({
    config,
    state,
    connector
  }) {
    super({
      config: {
        chainConfig: config.chainConfig,
        skipLookupNetwork: !!config.skipLookupNetwork
      },
      state: _objectSpread2(_objectSpread2({}, state || {}), {}, {
        chainId: "loading",
        accounts: []
      })
    });
    _defineProperty(this, "PROVIDER_CHAIN_NAMESPACE", CHAIN_NAMESPACES.EIP155);
    _defineProperty(this, "connector", null);
    this.connector = connector || null;
  }
  async enable() {
    if (!this.connector) throw providerErrors.custom({
      message: "Connector is not initialized, pass wallet connect connector in constructor",
      code: 4902
    });
    await this.setupProvider(this.connector);
    return this._providerEngineProxy.request({
      method: "eth_accounts"
    });
  }
  async setupProvider(connector) {
    const {
      chainNamespace
    } = this.config.chainConfig;
    if (chainNamespace !== this.PROVIDER_CHAIN_NAMESPACE) throw WalletInitializationError.incompatibleChainNameSpace("Invalid chain namespace");
    this.onConnectorStateUpdate(connector);
    await this.setupEngine(connector);
  }
  async switchChain({
    chainId
  }) {
    if (!this.connector) throw providerErrors.custom({
      message: "Connector is not initialized, pass wallet connect connector in constructor",
      code: 4902
    });
    const currentChainConfig = this.getChainConfig(chainId);
    const {
      chainId: currentChainId
    } = this.config.chainConfig;
    const currentNumChainId = parseInt(currentChainId, 16);
    await switchChain({
      connector: this.connector,
      chainId: currentNumChainId,
      newChainId: chainId
    });
    this.configure({
      chainConfig: currentChainConfig
    });
    await this.setupEngine(this.connector);
    this.lookupNetwork(this.connector);
  }
  async addChain(chainConfig) {
    const {
      chainId: currentChainId
    } = this.config.chainConfig;
    const numChainId = parseInt(currentChainId, 16);
    await addChain({
      connector: this.connector,
      chainId: numChainId,
      chainConfig: {
        chainId: chainConfig.chainId,
        chainName: chainConfig.displayName,
        nativeCurrency: {
          name: chainConfig.tickerName,
          symbol: chainConfig.ticker.toLocaleUpperCase(),
          decimals: chainConfig.decimals || 18
        },
        rpcUrls: [chainConfig.rpcTarget],
        blockExplorerUrls: [chainConfig.blockExplorerUrl],
        iconUrls: [chainConfig.logo]
      }
    });
    super.addChain(chainConfig);
  }
  // no need to implement this method in wallet connect v2.
  async lookupNetwork(_3) {
    const newChainId = this.config.chainConfig.chainId;
    this.update({
      chainId: newChainId
    });
    this.emit("chainChanged", newChainId);
    this.emit("connect", {
      chainId: newChainId
    });
    return this.config.chainConfig.chainId;
  }
  async setupEngine(connector) {
    const {
      chainId
    } = this.config.chainConfig;
    const numChainId = parseInt(chainId, 16);
    const providerHandlers = getProviderHandlers({
      connector,
      chainId: numChainId
    });
    const jrpcRes = await getAccounts(connector);
    this.update({
      accounts: jrpcRes || []
    });
    const ethMiddleware = createEthMiddleware(providerHandlers);
    const chainSwitchMiddleware = this.getChainSwitchMiddleware();
    const engine = new JRPCEngine();
    const {
      networkMiddleware
    } = createJsonRpcClient(this.config.chainConfig);
    engine.push(ethMiddleware);
    engine.push(chainSwitchMiddleware);
    engine.push(networkMiddleware);
    const provider = providerFromEngine(engine);
    this.updateProviderEngineProxy(provider);
  }
  getChainSwitchMiddleware() {
    const chainSwitchHandlers = {
      addChain: async (params) => {
        const {
          chainId,
          chainName,
          rpcUrls,
          blockExplorerUrls,
          nativeCurrency,
          iconUrls
        } = params;
        this.addChain({
          chainNamespace: CHAIN_NAMESPACES.EIP155,
          chainId,
          ticker: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.symbol) || "ETH",
          tickerName: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.name) || "Ether",
          displayName: chainName,
          rpcTarget: rpcUrls[0],
          blockExplorerUrl: (blockExplorerUrls === null || blockExplorerUrls === void 0 ? void 0 : blockExplorerUrls[0]) || "",
          decimals: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.decimals) || 18,
          logo: (iconUrls === null || iconUrls === void 0 ? void 0 : iconUrls[0]) || "https://images.toruswallet.io/eth.svg"
        });
      },
      switchChain: async (params) => {
        const {
          chainId
        } = params;
        await this.switchChain({
          chainId
        });
      }
    };
    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);
    return chainSwitchMiddleware;
  }
  connectedTopic() {
    var _this$connector;
    if (!this.connector) throw WalletLoginError.notConnectedError("Wallet connect connector is not connected");
    if ((_this$connector = this.connector) !== null && _this$connector !== void 0 && (_this$connector = _this$connector.session) !== null && _this$connector !== void 0 && _this$connector.length) {
      var _this$connector$sessi;
      const lastKeyIndex = this.connector.session.keys.length - 1;
      return (_this$connector$sessi = this.connector.session.get(this.connector.session.keys[lastKeyIndex])) === null || _this$connector$sessi === void 0 ? void 0 : _this$connector$sessi.topic;
    }
    return void 0;
  }
  checkIfAccountAllowed(address) {
    if (!this.connector || !this.connectedTopic()) return false;
    const sessionData = this.connector.session.get(this.connectedTopic());
    const allAccounts = Go(sessionData.namespaces);
    let accountAllowed = false;
    for (const account of allAccounts) {
      var _parsedAccount$addres;
      const parsedAccount = ci(account);
      if (((_parsedAccount$addres = parsedAccount.address) === null || _parsedAccount$addres === void 0 ? void 0 : _parsedAccount$addres.toLowerCase()) === (address === null || address === void 0 ? void 0 : address.toLowerCase())) {
        accountAllowed = true;
        break;
      }
    }
    return accountAllowed;
  }
  async onConnectorStateUpdate(connector) {
    connector.events.on("session_event", async (payload) => {
      loglevel.debug("session_event data", payload);
      if (!this.provider) throw WalletLoginError.notConnectedError("Wallet connect connector is not connected");
      const {
        event
      } = payload.params;
      const {
        name: name2,
        data
      } = event || {};
      if (name2 === "accountsChanged" && data !== null && data !== void 0 && data.length && this.state.accounts[0] !== data[0] && this.checkIfAccountAllowed(data[0])) {
        this.update({
          accounts: data
        });
        this.emit("accountsChanged", data);
      }
      if (event.name === "chainChanged") {
        if (!data) return;
        const connectedChainId = data;
        const connectedHexChainId = `0x${connectedChainId.toString(16)}`;
        if (connectedHexChainId && this.state.chainId !== connectedHexChainId) {
          const maybeConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, connectedHexChainId);
          this.configure({
            chainConfig: _objectSpread2(_objectSpread2({}, maybeConfig), {}, {
              chainId: connectedHexChainId,
              chainNamespace: CHAIN_NAMESPACES.EIP155
            })
          });
          await this.setupEngine(connector);
        }
      }
    });
  }
};
_WalletConnectV2Provider = WalletConnectV2Provider;
_defineProperty(WalletConnectV2Provider, "getProviderInstance", async (params) => {
  const providerFactory = new _WalletConnectV2Provider({
    config: {
      chainConfig: params.chainConfig,
      skipLookupNetwork: params.skipLookupNetwork
    }
  });
  await providerFactory.setupProvider(params.connector);
  return providerFactory;
});
var WalletConnectV2Adapter = class extends BaseEvmAdapter {
  constructor(options = {}) {
    super(options);
    _defineProperty(this, "name", WALLET_ADAPTERS.WALLET_CONNECT_V2);
    _defineProperty(this, "adapterNamespace", ADAPTER_NAMESPACES.EIP155);
    _defineProperty(this, "currentChainNamespace", CHAIN_NAMESPACES.EIP155);
    _defineProperty(this, "type", ADAPTER_CATEGORY.EXTERNAL);
    _defineProperty(this, "adapterOptions", {});
    _defineProperty(this, "status", ADAPTER_STATUS.NOT_READY);
    _defineProperty(this, "adapterData", {
      uri: "",
      extensionAdapters: WALLET_CONNECT_EXTENSION_ADAPTERS
    });
    _defineProperty(this, "connector", null);
    _defineProperty(this, "activeSession", null);
    _defineProperty(this, "wcProvider", null);
    this.adapterOptions = _objectSpread2({}, options);
    this.setAdapterSettings(options);
  }
  get connected() {
    return !!this.activeSession;
  }
  get provider() {
    if (this.status !== ADAPTER_STATUS.NOT_READY && this.wcProvider) {
      return this.wcProvider;
    }
    return null;
  }
  set provider(_3) {
    throw new Error("Not implemented");
  }
  async init(options) {
    var _this$adapterOptions$, _this$chainConfig, _this$chainConfig2;
    await super.init();
    super.checkInitializationRequirements();
    const projectId = (_this$adapterOptions$ = this.adapterOptions.adapterSettings) === null || _this$adapterOptions$ === void 0 || (_this$adapterOptions$ = _this$adapterOptions$.walletConnectInitOptions) === null || _this$adapterOptions$ === void 0 ? void 0 : _this$adapterOptions$.projectId;
    if (!projectId) {
      throw WalletInitializationError.invalidParams("Wallet connect project id is required in wallet connect v2 adapter");
    }
    const wc2Settings = await getWalletConnectV2Settings((_this$chainConfig = this.chainConfig) === null || _this$chainConfig === void 0 ? void 0 : _this$chainConfig.chainNamespace, [(_this$chainConfig2 = this.chainConfig) === null || _this$chainConfig2 === void 0 ? void 0 : _this$chainConfig2.chainId], projectId);
    if (!this.adapterOptions.loginSettings || Object.keys(this.adapterOptions.loginSettings).length === 0) {
      this.adapterOptions.loginSettings = wc2Settings.loginSettings;
    }
    this.adapterOptions.adapterSettings = (0, import_lodash2.default)(wc2Settings.adapterSettings, this.adapterOptions.adapterSettings);
    const {
      adapterSettings
    } = this.adapterOptions;
    this.connector = await pe3.init(adapterSettings === null || adapterSettings === void 0 ? void 0 : adapterSettings.walletConnectInitOptions);
    this.wcProvider = new WalletConnectV2Provider({
      config: {
        chainConfig: this.chainConfig
      },
      connector: this.connector
    });
    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.WALLET_CONNECT_V2);
    this.status = ADAPTER_STATUS.READY;
    loglevel.debug("initializing wallet connect v2 adapter");
    if (options.autoConnect) {
      await this.checkForPersistedSession();
      if (this.connected) {
        this.rehydrated = true;
        try {
          await this.onConnectHandler();
        } catch (error) {
          loglevel.error("wallet auto connect", error);
          this.emit(ADAPTER_EVENTS.ERRORED, error);
        }
      } else {
        this.status = ADAPTER_STATUS.NOT_READY;
        this.emit(ADAPTER_EVENTS.CACHE_CLEAR);
      }
    }
  }
  async connect() {
    super.checkConnectionRequirements();
    if (!this.connector) throw WalletInitializationError.notReady("Wallet adapter is not ready yet");
    try {
      if (this.connected) {
        await this.onConnectHandler();
        return this.provider;
      }
      if (this.status !== ADAPTER_STATUS.CONNECTING) {
        await this.createNewSession();
      }
      return this.provider;
    } catch (error) {
      loglevel.error("Wallet connect v2 adapter error while connecting", error);
      this.status = ADAPTER_STATUS.READY;
      this.rehydrated = true;
      this.emit(ADAPTER_EVENTS.ERRORED, error);
      const finalError = error instanceof Web3AuthError ? error : WalletLoginError.connectionError(`Failed to login with wallet connect: ${(error === null || error === void 0 ? void 0 : error.message) || ""}`, error);
      throw finalError;
    }
  }
  // should be called only before initialization.
  setAdapterSettings(adapterSettings) {
    var _this$adapterOptions$2, _this$adapterOptions, _this$adapterOptions$3, _this$adapterOptions2, _this$adapterOptions$4;
    super.setAdapterSettings(adapterSettings);
    const {
      qrcodeModal,
      walletConnectInitOptions
    } = (adapterSettings === null || adapterSettings === void 0 ? void 0 : adapterSettings.adapterSettings) || {};
    this.adapterOptions = _objectSpread2(_objectSpread2({}, this.adapterOptions), {}, {
      adapterSettings: (_this$adapterOptions$2 = (_this$adapterOptions = this.adapterOptions) === null || _this$adapterOptions === void 0 ? void 0 : _this$adapterOptions.adapterSettings) !== null && _this$adapterOptions$2 !== void 0 ? _this$adapterOptions$2 : {},
      loginSettings: (_this$adapterOptions$3 = (_this$adapterOptions2 = this.adapterOptions) === null || _this$adapterOptions2 === void 0 ? void 0 : _this$adapterOptions2.loginSettings) !== null && _this$adapterOptions$3 !== void 0 ? _this$adapterOptions$3 : {}
    });
    if (qrcodeModal) this.adapterOptions.adapterSettings.qrcodeModal = qrcodeModal;
    if (walletConnectInitOptions) this.adapterOptions.adapterSettings.walletConnectInitOptions = _objectSpread2(_objectSpread2({}, (_this$adapterOptions$4 = this.adapterOptions.adapterSettings.walletConnectInitOptions) !== null && _this$adapterOptions$4 !== void 0 ? _this$adapterOptions$4 : {}), walletConnectInitOptions);
    const {
      loginSettings
    } = adapterSettings;
    if (loginSettings) this.adapterOptions.loginSettings = _objectSpread2(_objectSpread2({}, this.adapterOptions.loginSettings || {}), loginSettings);
  }
  async addChain(chainConfig, init = false) {
    var _this$wcProvider;
    super.checkAddChainRequirements(chainConfig, init);
    await ((_this$wcProvider = this.wcProvider) === null || _this$wcProvider === void 0 ? void 0 : _this$wcProvider.addChain(chainConfig));
    this.addChainConfig(chainConfig);
  }
  async switchChain(params, init = false) {
    var _this$wcProvider2;
    super.checkSwitchChainRequirements(params, init);
    await ((_this$wcProvider2 = this.wcProvider) === null || _this$wcProvider2 === void 0 ? void 0 : _this$wcProvider2.switchChain({
      chainId: params.chainId
    }));
    this.setAdapterSettings({
      chainConfig: this.getChainConfig(params.chainId)
    });
  }
  async getUserInfo() {
    if (!this.connected) throw WalletLoginError.notConnectedError("Not connected with wallet, Please login/connect first");
    return {};
  }
  async disconnect(options = {
    cleanup: false
  }) {
    var _this$activeSession, _this$activeSession2;
    await super.disconnectSession();
    const {
      cleanup
    } = options;
    if (!this.connector || !this.connected || !((_this$activeSession = this.activeSession) !== null && _this$activeSession !== void 0 && _this$activeSession.topic)) throw WalletLoginError.notConnectedError("Not connected with wallet");
    await this.connector.disconnect({
      topic: (_this$activeSession2 = this.activeSession) === null || _this$activeSession2 === void 0 ? void 0 : _this$activeSession2.topic,
      reason: tr("USER_DISCONNECTED")
    });
    this.rehydrated = false;
    if (cleanup) {
      this.connector = null;
      this.status = ADAPTER_STATUS.NOT_READY;
      this.wcProvider = null;
    } else {
      this.status = ADAPTER_STATUS.READY;
    }
    this.activeSession = null;
    await super.disconnect();
  }
  async enableMFA() {
    throw new Error("Method Not implemented");
  }
  cleanupPendingPairings() {
    if (!this.connector) throw WalletInitializationError.notReady("Wallet adapter is not ready yet");
    const inactivePairings = this.connector.pairing.getAll({
      active: false
    });
    if (!Er(inactivePairings)) return;
    inactivePairings.forEach((pairing) => {
      if (this.connector) {
        this.connector.pairing.delete(pairing.topic, tr("USER_DISCONNECTED"));
      }
    });
  }
  async checkForPersistedSession() {
    if (!this.connector) throw WalletInitializationError.notReady("Wallet adapter is not ready yet");
    if (this.connector.session.length) {
      const lastKeyIndex = this.connector.session.keys.length - 1;
      this.activeSession = this.connector.session.get(this.connector.session.keys[lastKeyIndex]);
    }
    return this.activeSession;
  }
  async createNewSession(opts = {
    forceNewSession: false
  }) {
    try {
      var _this$activeSession3, _this$adapterOptions3;
      if (!this.connector) throw WalletInitializationError.notReady("Wallet adapter is not ready yet");
      if (!this.adapterOptions.loginSettings || Object.keys(this.adapterOptions.loginSettings).length === 0) throw WalletInitializationError.notReady("login settings are not set yet");
      this.status = ADAPTER_STATUS.CONNECTING;
      this.emit(ADAPTER_EVENTS.CONNECTING, {
        adapter: WALLET_ADAPTERS.WALLET_CONNECT_V2
      });
      if (opts.forceNewSession && (_this$activeSession3 = this.activeSession) !== null && _this$activeSession3 !== void 0 && _this$activeSession3.topic) {
        var _this$activeSession4;
        await this.connector.disconnect({
          topic: (_this$activeSession4 = this.activeSession) === null || _this$activeSession4 === void 0 ? void 0 : _this$activeSession4.topic,
          reason: tr("USER_DISCONNECTED")
        });
      }
      loglevel.debug("creating new session for web3auth wallet connect");
      const {
        uri,
        approval
      } = await this.connector.connect(this.adapterOptions.loginSettings);
      const qrcodeModal = (_this$adapterOptions3 = this.adapterOptions) === null || _this$adapterOptions3 === void 0 || (_this$adapterOptions3 = _this$adapterOptions3.adapterSettings) === null || _this$adapterOptions3 === void 0 ? void 0 : _this$adapterOptions3.qrcodeModal;
      if (uri) {
        if (qrcodeModal) {
          try {
            await qrcodeModal.openModal({
              uri
            });
            loglevel.debug("EVENT", "QR Code Modal closed");
            this.status = ADAPTER_STATUS.READY;
            this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.WALLET_CONNECT_V2);
          } catch (error) {
            loglevel.error("unable to open qr code modal");
          }
        } else {
          this.updateAdapterData({
            uri,
            extensionAdapters: WALLET_CONNECT_EXTENSION_ADAPTERS
          });
        }
      }
      loglevel.info("awaiting session approval from wallet");
      const session = await approval();
      this.activeSession = session;
      await this.onConnectHandler();
      if (qrcodeModal) {
        qrcodeModal.closeModal();
      }
    } catch (error) {
      var _message;
      if ((_message = error.message) !== null && _message !== void 0 && _message.toLowerCase().includes("proposal expired")) {
        loglevel.info("current adapter status: ", this.status);
        if (this.status === ADAPTER_STATUS.CONNECTING) {
          loglevel.info("retrying to create new wallet connect session since proposal expired");
          return this.createNewSession({
            forceNewSession: true
          });
        }
        if (this.status === ADAPTER_STATUS.READY) {
          loglevel.info("ignoring proposal expired error since some other adapter is connected");
          return;
        }
      }
      loglevel.error("error while creating new wallet connect session", error);
      this.emit(ADAPTER_EVENTS.ERRORED, error);
      throw error;
    }
  }
  async onConnectHandler() {
    var _this$adapterOptions$5;
    if (!this.connector || !this.wcProvider) throw WalletInitializationError.notReady("Wallet adapter is not ready yet");
    if (!this.chainConfig) throw WalletInitializationError.invalidParams("Chain config is not set");
    if ((_this$adapterOptions$5 = this.adapterOptions.adapterSettings) !== null && _this$adapterOptions$5 !== void 0 && _this$adapterOptions$5.qrcodeModal) {
      this.wcProvider = new WalletConnectV2Provider({
        config: {
          chainConfig: this.chainConfig,
          skipLookupNetwork: true
        },
        connector: this.connector
      });
    }
    await this.wcProvider.setupProvider(this.connector);
    this.subscribeEvents();
    this.cleanupPendingPairings();
    this.status = ADAPTER_STATUS.CONNECTED;
    this.emit(ADAPTER_EVENTS.CONNECTED, {
      adapter: WALLET_ADAPTERS.WALLET_CONNECT_V2,
      reconnected: this.rehydrated,
      provider: this.provider
    });
  }
  subscribeEvents() {
    if (!this.connector) throw WalletInitializationError.notReady("Wallet adapter is not ready yet");
    this.connector.events.on("session_update", ({
      topic,
      params
    }) => {
      if (!this.connector) return;
      const {
        namespaces
      } = params;
      const _session = this.connector.session.get(topic);
      const updatedSession = _objectSpread2(_objectSpread2({}, _session), {}, {
        namespaces
      });
      this.activeSession = updatedSession;
    });
    this.connector.events.on("session_delete", () => {
      this.disconnect();
    });
  }
};
export {
  DEFAULT_EIP155_METHODS,
  DEFAULT_EIP_155_EVENTS,
  WALLET_CONNECT_EXTENSION_ADAPTERS,
  WalletConnectV2Adapter,
  WalletConnectV2Provider,
  getNamespacesFromChains,
  getRequiredNamespaces,
  getSupportedEventsByNamespace,
  getSupportedMethodsByNamespace,
  getWalletConnectV2Settings
};
/*! Bundled license information:

tslib/tslib.es6.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)

@walletconnect/utils/dist/index.es.js:
  (**
  * [js-sha3]{@link https://github.com/emn178/js-sha3}
  *
  * @version 0.8.0
  * @author Chen, Yi-Cyuan [emn178@gmail.com]
  * @copyright Chen, Yi-Cyuan 2015-2018
  * @license MIT
  *)
*/
//# sourceMappingURL=walletConnectV2Adapter.esm-DTLYCQOI.js.map
